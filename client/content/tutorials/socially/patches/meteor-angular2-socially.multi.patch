From 70ca520b9e02a1a3e4b054ae0c938b7fcf7e78a6 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Mon, 25 Jan 2016 15:10:14 +0200
Subject: [PATCH 001/173] Add README file

---
 README.md | 2 ++
 1 file changed, 2 insertions(+)
 create mode 100644 README.md

diff --git a/README.md b/README.md
new file mode 100644
index 0000000..bf634c1
--- /dev/null
+++ b/README.md
@@ -0,0 +1,2 @@
+# Angular2-Meteor Tutorial
+Tutorial is based on building Angular2 UI for a Meteor app called Socially.
\ No newline at end of file
-- 
2.6.4


From 38eb8e49035dd3638be86c65d9c33fe3aedb9677 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Mon, 25 Jan 2016 15:11:01 +0200
Subject: [PATCH 002/173] Step 0.1: add client/index.html

---
 client/index.html | 3 +++
 1 file changed, 3 insertions(+)
 create mode 100644 client/index.html

diff --git a/client/index.html b/client/index.html
new file mode 100644
index 0000000..3887661
--- /dev/null
+++ b/client/index.html
@@ -0,0 +1,3 @@
+<body>
+<p>Nothing here</p>
+</body>
\ No newline at end of file
-- 
2.6.4


From c258d7c5a7109e34f6ca99169f82db533bd6e757 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Mon, 25 Jan 2016 15:14:50 +0200
Subject: [PATCH 003/173] Step 0.2: Add the angular2-compilers package

---
 .meteor/packages | 1 +
 .meteor/versions | 6 ++++++
 2 files changed, 7 insertions(+)

diff --git a/.meteor/packages b/.meteor/packages
index a9f8340..4e39754 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -18,3 +18,4 @@ ecmascript              # Enable ECMAScript2015+ syntax in app code
 
 autopublish             # Publish all data to the clients (for prototyping)
 insecure                # Allow all DB writes from clients (for prototyping)
+angular2-compilers
diff --git a/.meteor/versions b/.meteor/versions
index 74871e3..7942bf3 100644
--- a/.meteor/versions
+++ b/.meteor/versions
@@ -1,8 +1,14 @@
 allow-deny@1.0.2
+angular2-compilers@0.5.4
+angular2-html-templates@0.5.0
 autopublish@1.0.5
 autoupdate@1.2.6
 babel-compiler@6.5.2
 babel-runtime@0.1.6
+barbatus:angular2-runtime@0.2.2
+barbatus:typescript@0.2.0
+barbatus:typescript-compiler@0.5.0-beta.15
+barbatus:typescript-runtime@0.1.0-beta.1
 base64@1.0.6
 binary-heap@1.0.6
 blaze@2.1.5
-- 
2.6.4


From 9ff822e6205e401cffec9f541907f09d010340ff Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Mon, 25 Jan 2016 15:15:52 +0200
Subject: [PATCH 004/173] Step 0.3: Add the package.json file to support npm
 packages

---
 .gitignore   |  2 ++
 package.json | 15 +++++++++++++++
 2 files changed, 17 insertions(+)
 create mode 100644 .gitignore
 create mode 100644 package.json

diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..ab05030
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1,2 @@
+node_modules
+*.log
\ No newline at end of file
diff --git a/package.json b/package.json
new file mode 100644
index 0000000..022d95e
--- /dev/null
+++ b/package.json
@@ -0,0 +1,15 @@
+{
+  "name": "meteor-angular2.0-socially",
+  "version": "1.0.0",
+  "description": "Tutorial is based on building Angular2 UI for a Meteor app called Socially.",
+  "repository": {
+    "type": "git",
+    "url": "git+https://github.com/dotansimha/meteor-angular2.0-socially.git"
+  },
+  "author": "Dotan Simha <dotansimha@gmail.com> (http://github.com/dotansimha/)",
+  "license": "ISC",
+  "bugs": {
+    "url": "https://github.com/dotansimha/meteor-angular2.0-socially/issues"
+  },
+  "homepage": "https://github.com/dotansimha/meteor-angular2.0-socially#readme"
+}
-- 
2.6.4


From 8e492784b87ba37a106df68219d475177f707624 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Mon, 25 Jan 2016 15:16:27 +0200
Subject: [PATCH 005/173] Step 0.4: Add TypeScript configuration file

---
 tsconfig.json | 13 +++++++++++++
 1 file changed, 13 insertions(+)
 create mode 100644 tsconfig.json

diff --git a/tsconfig.json b/tsconfig.json
new file mode 100644
index 0000000..38ad8aa
--- /dev/null
+++ b/tsconfig.json
@@ -0,0 +1,13 @@
+{
+  "compilerOptions": {
+    "experimentalDecorators": true,
+    "module": "commonjs",
+    "target": "es5",
+    "isolatedModules": false,
+    "moduleResolution": "node",
+    "emitDecoratorMetadata": true,
+    "removeComments": false,
+    "noImplicitAny": false,
+    "sourceMap": true
+  }
+}
\ No newline at end of file
-- 
2.6.4


From 6e6f960db6f34629d7e7177fb7a2da7ba941e585 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Sat, 2 Apr 2016 11:51:39 +0300
Subject: [PATCH 006/173] Step 0.5: Add angular2 and its dependencies to the
 project

---
 package.json | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

diff --git a/package.json b/package.json
index 022d95e..67e4ca6 100644
--- a/package.json
+++ b/package.json
@@ -11,5 +11,10 @@
   "bugs": {
     "url": "https://github.com/dotansimha/meteor-angular2.0-socially/issues"
   },
-  "homepage": "https://github.com/dotansimha/meteor-angular2.0-socially#readme"
+  "homepage": "https://github.com/dotansimha/meteor-angular2.0-socially#readme",
+  "dependencies": {
+    "angular2": "2.0.0-beta.12",
+    "angular2-meteor": "0.5.2",
+    "meteor-node-stubs": "^0.2.1"
+  }
 }
-- 
2.6.4


From 1ca94a97eb9ec5743260ac7fe7c824dbe984da33 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Sat, 2 Apr 2016 11:51:54 +0300
Subject: [PATCH 007/173] Step 0.6: Remove blaze from the project

---
 .meteor/packages | 1 -
 .meteor/versions | 4 ----
 2 files changed, 5 deletions(-)

diff --git a/.meteor/packages b/.meteor/packages
index 4e39754..2f0a5f9 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -7,7 +7,6 @@
 meteor-base             # Packages every Meteor app needs to have
 mobile-experience       # Packages for a great mobile UX
 mongo                   # The database Meteor supports right now
-blaze-html-templates    # Compile .html files into Meteor Blaze views
 session                 # Client-side reactive dictionary for your app
 jquery                  # Helpful client-side library
 tracker                 # Meteor's client-side reactive programming library
diff --git a/.meteor/versions b/.meteor/versions
index 7942bf3..e90c45a 100644
--- a/.meteor/versions
+++ b/.meteor/versions
@@ -12,11 +12,9 @@ barbatus:typescript-runtime@0.1.0-beta.1
 base64@1.0.6
 binary-heap@1.0.6
 blaze@2.1.5
-blaze-html-templates@1.0.2
 blaze-tools@1.0.6
 boilerplate-generator@1.0.6
 caching-compiler@1.0.2
-caching-html-compiler@1.0.4
 callback-hook@1.0.6
 check@1.1.2
 ddp@1.2.3
@@ -68,8 +66,6 @@ spacebars-compiler@1.0.9
 standard-minifier-css@1.0.4
 standard-minifier-js@1.0.4
 standard-minifiers@1.0.4
-templating@1.1.7
-templating-tools@1.0.2
 tracker@1.0.11
 ui@1.0.9
 underscore@1.0.6
-- 
2.6.4


From df6b41bac0cef6a6702c5d6aa07535e69e84cb4d Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Sat, 2 Apr 2016 11:34:37 +0300
Subject: [PATCH 008/173] Step 0.7: Added the Meteor 1.3 typings file

---
 typings/meteor_1.3.d.ts | 933 ++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 933 insertions(+)
 create mode 100644 typings/meteor_1.3.d.ts

diff --git a/typings/meteor_1.3.d.ts b/typings/meteor_1.3.d.ts
new file mode 100644
index 0000000..baa46c4
--- /dev/null
+++ b/typings/meteor_1.3.d.ts
@@ -0,0 +1,933 @@
+// Type definitions for Meteor 1.3
+// Project: http://www.meteor.com/
+// Definitions by: Dave Allen <https://github.com/fullflavedave>
+// Definitions: https://github.com/borisyankov/DefinitelyTyped
+
+/**
+ * These are the common (for client and server) modules and interfaces that can't be automatically generated from the Meteor data.js file
+ */
+
+interface EJSONable {
+  [key: string]: number | string | boolean | Object | number[] | string[] | Object[] | Date | Uint8Array | EJSON.CustomType;
+}
+interface JSONable {
+  [key: string]: number | string | boolean | Object | number[] | string[] | Object[];
+}
+interface EJSON extends EJSONable { }
+
+declare module "meteor/match" {
+  export module Match {
+    export var Any: any;
+    export var String: any;
+    export var Integer: any;
+    export var Boolean: any;
+    export var undefined: any;
+    //function null();  // not allowed in TypeScript
+    export var Object: any;
+    export function Optional(pattern: any): boolean;
+    export function ObjectIncluding(dico: any): boolean;
+    export function OneOf(...patterns: any[]): any;
+    export function Where(condition: any): any;
+  }
+}
+
+
+declare module "meteor/meteor" {
+  export module Meteor {
+    interface UserEmail {
+      address: string;
+      verified: boolean;
+    }
+
+    interface User {
+      _id?: string;
+      username?: string;
+      emails?: Meteor.UserEmail[];
+      createdAt?: number;
+      profile?: any;
+      services?: any;
+    }
+
+    enum StatusEnum {
+      connected,
+      connecting,
+      failed,
+      waiting,
+      offline
+    }
+
+    interface LiveQueryHandle {
+      stop(): void;
+    }
+  }
+}
+
+declare module "meteor/ddp" {
+  import { Meteor } from "meteor/meteor";
+
+  export module DDP {
+    interface DDPStatic {
+      subscribe(name: string, ...rest: any[]): Meteor.SubscriptionHandle;
+      call(method: string, ...parameters: any[]): void;
+      apply(method: string, ...parameters: any[]): void;
+      methods(IMeteorMethodsDictionary: any): any;
+      status(): DDPStatus;
+      reconnect(): void;
+      disconnect(): void;
+      onReconnect(): void;
+    }
+
+    interface DDPStatus {
+      connected: boolean;
+      status: Meteor.StatusEnum;
+      retryCount: number;
+      //To turn this into an interval until the next reconnection, use retryTime - (new Date()).getTime()
+      retryTime?: number;
+      reason?: string;
+    }
+  }
+}
+
+declare module "meteor/mongo" {
+  export module Mongo {
+    interface Selector {
+      [key: string]: any;
+    }
+    interface Selector extends Object { }
+    interface Modifier { }
+    interface SortSpecifier { }
+    interface FieldSpecifier {
+      [id: string]: Number;
+    }
+  }
+}
+
+declare module "meteor/http" {
+  export module HTTP {
+
+    interface HTTPRequest {
+      content?: string;
+      data?: any;
+      query?: string;
+      params?: { [id: string]: string };
+      auth?: string;
+      headers?: { [id: string]: string };
+      timeout?: number;
+      followRedirects?: boolean;
+    }
+
+    interface HTTPResponse {
+      statusCode?: number;
+      headers?: { [id: string]: string };
+      content?: string;
+      data?: any;
+    }
+
+    function call(method: string, url: string, options?: HTTP.HTTPRequest, asyncCallback?: Function): HTTP.HTTPResponse;
+    function del(url: string, callOptions?: HTTP.HTTPRequest, asyncCallback?: Function): HTTP.HTTPResponse;
+    function get(url: string, callOptions?: HTTP.HTTPRequest, asyncCallback?: Function): HTTP.HTTPResponse;
+    function post(url: string, callOptions?: HTTP.HTTPRequest, asyncCallback?: Function): HTTP.HTTPResponse;
+    function put(url: string, callOptions?: HTTP.HTTPRequest, asyncCallback?: Function): HTTP.HTTPResponse;
+  }
+}
+
+declare module "meteor/random" {
+  export module Random {
+    function id(numberOfChars?: number): string;
+    function secret(numberOfChars?: number): string;
+    function fraction(): number;
+    function hexString(numberOfDigits: number): string; // @param numberOfDigits, @returns a random hex string of the given length
+    function choice(array: any[]): string; // @param array, @return a random element in array
+    function choice(str: string): string; // @param str, @return a random char in str
+  }
+}
+
+/**
+ * These are the client modules and interfaces that can't be automatically generated from the Meteor data.js file
+ */
+
+declare module "meteor/meteor" {
+  import { Blaze } from "meteor/blaze";
+
+  export module Meteor {
+    /** Start definitions for Template **/
+    interface Event {
+      type: string;
+      target: HTMLElement;
+      currentTarget: HTMLElement;
+      which: number;
+      stopPropagation(): void;
+      stopImmediatePropagation(): void;
+      preventDefault(): void;
+      isPropagationStopped(): boolean;
+      isImmediatePropagationStopped(): boolean;
+      isDefaultPrevented(): boolean;
+    }
+
+    interface EventHandlerFunction extends Function {
+      (event?: Meteor.Event, templateInstance?: Blaze.TemplateInstance): void;
+    }
+
+    interface EventMap {
+      [id: string]: Meteor.EventHandlerFunction;
+    }
+    /** End definitions for Template **/
+
+    interface LoginWithExternalServiceOptions {
+      requestPermissions?: string[];
+      requestOfflineToken?: Boolean;
+      forceApprovalPrompt?: Boolean;
+      userEmail?: string;
+      loginStyle?: string;
+    }
+
+    function loginWithMeteorDeveloperAccount(options?: Meteor.LoginWithExternalServiceOptions, callback?: Function): void;
+    function loginWithFacebook(options?: Meteor.LoginWithExternalServiceOptions, callback?: Function): void;
+    function loginWithGithub(options?: Meteor.LoginWithExternalServiceOptions, callback?: Function): void;
+    function loginWithGoogle(options?: Meteor.LoginWithExternalServiceOptions, callback?: Function): void;
+    function loginWithMeetup(options?: Meteor.LoginWithExternalServiceOptions, callback?: Function): void;
+    function loginWithTwitter(options?: Meteor.LoginWithExternalServiceOptions, callback?: Function): void;
+    function loginWithWeibo(options?: Meteor.LoginWithExternalServiceOptions, callback?: Function): void;
+
+    interface SubscriptionHandle {
+      stop(): void;
+      ready(): boolean;
+    }
+  }
+}
+
+declare module "meteor/blaze" {
+  export module Blaze {
+    interface View {
+      name: string;
+      parentView: Blaze.View;
+      isCreated: boolean;
+      isRendered: boolean;
+      isDestroyed: boolean;
+      renderCount: number;
+      autorun(runFunc: Function): void;
+      onViewCreated(func: Function): void;
+      onViewReady(func: Function): void;
+      onViewDestroyed(func: Function): void;
+      firstNode(): Node;
+      lastNode(): Node;
+      template: Blaze.Template;
+      templateInstance(): any;
+    }
+    interface Template {
+      viewName: string;
+      renderFunction: Function;
+      constructView(): Blaze.View;
+    }
+  }
+}
+
+declare module "meteor/browser-policy" {
+  export module BrowserPolicy {
+
+    interface framing {
+      disallow(): void;
+      restrictToOrigin(origin: string): void;
+      allowAll(): void;
+    }
+    interface content {
+      allowEval(): void;
+      allowInlineStyles(): void;
+      allowInlineScripts(): void;
+      allowSameOriginForAll(): void;
+      allowDataUrlForAll(): void;
+      allowOriginForAll(origin: string): void;
+      allowImageOrigin(origin: string): void;
+      allowFrameOrigin(origin: string): void;
+      allowContentTypeSniffing(): void;
+      allowAllContentOrigin(): void;
+      allowAllContentDataUrl(): void;
+      allowAllContentSameOrigin(): void;
+
+      disallowAll(): void;
+      disallowInlineStyles(): void;
+      disallowEval(): void;
+      disallowInlineScripts(): void;
+      disallowFont(): void;
+      disallowObject(): void;
+      disallowAllContent(): void;
+      //TODO: add the basic content types
+      // allow<content type>Origin(origin)
+      // allow<content type>DataUrl()
+      // allow<content type>SameOrigin()
+      // disallow<content type>()
+    }
+  }
+}
+
+
+/**
+ * These are the server modules and interfaces that can't be automatically generated from the Meteor data.js file
+ */
+
+declare module "meteor/meteor" {
+  export module Meteor {
+    interface EmailFields {
+      subject?: Function;
+      text?: Function;
+    }
+
+    interface EmailTemplates {
+      from: string;
+      siteName: string;
+      resetPassword: Meteor.EmailFields;
+      enrollAccount: Meteor.EmailFields;
+      verifyEmail: Meteor.EmailFields;
+    }
+
+    interface Connection {
+      id: string;
+      close: Function;
+      onClose: Function;
+      clientAddress: string;
+      httpHeaders: Object;
+    }
+  }
+}
+
+declare module "meteor/mongo" {
+  export module Mongo {
+    interface AllowDenyOptions {
+      insert?: (userId: string, doc: any) => boolean;
+      update?: (userId: string, doc: any, fieldNames: string[], modifier: any) => boolean;
+      remove?: (userId: string, doc: any) => boolean;
+      fetch?: string[];
+      transform?: Function;
+    }
+  }
+}
+
+interface MailComposerOptions {
+  escapeSMTP: boolean;
+  encoding: string;
+  charset: string;
+  keepBcc: boolean;
+  forceEmbeddedImages: boolean;
+}
+
+declare var MailComposer: MailComposerStatic;
+interface MailComposerStatic {
+  new (options: MailComposerOptions): MailComposer;
+}
+interface MailComposer {
+  addHeader(name: string, value: string): void;
+  setMessageOption(from: string, to: string, body: string, html: string): void;
+  streamMessage(): void;
+  pipe(stream: any /** fs.WriteStream **/): void;
+}
+/**
+ * These are the modules and interfaces for packages that can't be automatically generated from the Meteor data.js file
+ */
+
+interface ILengthAble {
+  length: number;
+}
+
+interface ITinytestAssertions {
+  ok(doc: Object): void;
+  expect_fail(): void;
+  fail(doc: Object): void;
+  runId(): string;
+  equal<T>(actual: T, expected: T, message?: string, not?: boolean): void;
+  notEqual<T>(actual: T, expected: T, message?: string): void;
+  instanceOf(obj: Object, klass: Function, message?: string): void;
+  notInstanceOf(obj: Object, klass: Function, message?: string): void;
+  matches(actual: any, regexp: RegExp, message?: string): void;
+  notMatches(actual: any, regexp: RegExp, message?: string): void;
+  throws(f: Function, expected?: string | RegExp): void;
+  isTrue(v: boolean, msg?: string): void;
+  isFalse(v: boolean, msg?: string): void;
+  isNull(v: any, msg?: string): void;
+  isNotNull(v: any, msg?: string): void;
+  isUndefined(v: any, msg?: string): void;
+  isNotUndefined(v: any, msg?: string): void;
+  isNan(v: any, msg?: string): void;
+  isNotNan(v: any, msg?: string): void;
+  include<T>(s: Array<T> | Object | string, value: any, msg?: string, not?: boolean): void;
+
+  notInclude<T>(s: Array<T> | Object | string, value: any, msg?: string, not?: boolean): void;
+  length(obj: ILengthAble, expected_length: number, msg?: string): void;
+  _stringEqual(actual: string, expected: string, msg?: string): void;
+}
+
+declare module "meteor/tiny-test" {
+  export module Tinytest {
+    function add(description: string, func: (test: ITinytestAssertions) => void): void;
+    function addAsync(description: string, func: (test: ITinytestAssertions) => void): void;
+  }
+}
+
+
+// Kept in for backwards compatibility
+declare module "meteor/meteor" {
+  export module Meteor {
+    interface Tinytest {
+      add(description: string, func: (test: ITinytestAssertions) => void): void;
+      addAsync(description: string, func: (test: ITinytestAssertions) => void): void;
+    }
+  }
+}
+
+declare module "meteor/accounts-base" {
+  import { Meteor } from "meteor/meteor";
+
+  export module Accounts {
+    function addEmail(userId: string, newEmail: string, verified?: boolean): void;
+    function changePassword(oldPassword: string, newPassword: string, callback?: Function): void;
+    function createUser(options: {
+      username?: string;
+      email?: string;
+      password?: string;
+      profile?: Object;
+    }, callback?: Function): string;
+    var emailTemplates: Meteor.EmailTemplates;
+    function findUserByEmail(email: string): Object;
+    function findUserByUsername(username: string): Object;
+    function forgotPassword(options: {
+      email?: string;
+    }, callback?: Function): void;
+    function onEmailVerificationLink(callback: Function): void;
+    function onEnrollmentLink(callback: Function): void;
+    function onResetPasswordLink(callback: Function): void;
+    function removeEmail(userId: string, email: string): void;
+    function resetPassword(token: string, newPassword: string, callback?: Function): void;
+    function sendEnrollmentEmail(userId: string, email?: string): void;
+    function sendResetPasswordEmail(userId: string, email?: string): void;
+    function sendVerificationEmail(userId: string, email?: string): void;
+    function setPassword(userId: string, newPassword: string, options?: {
+      logout?: Object;
+    }): void;
+    function setUsername(userId: string, newUsername: string): void;
+    var ui: {
+      config(options: {
+        requestPermissions?: Object;
+        requestOfflineToken?: Object;
+        forceApprovalPrompt?: Object;
+        passwordSignupFields?: string;
+      }): void;
+    };
+    function verifyEmail(token: string, callback?: Function): void;
+    function config(options: {
+      sendVerificationEmail?: boolean;
+      forbidClientAccountCreation?: boolean;
+      restrictCreationByEmailDomain?: string | Function;
+      loginExpirationInDays?: number;
+      oauthSecretKey?: string;
+    }): void;
+    function onLogin(func: Function): { stop: () => void };
+    function onLoginFailure(func: Function): { stop: () => void };
+    function user(): Meteor.User;
+    function userId(): string;
+    function loggingIn(): boolean;
+    function logout(callback?: Function): void;
+    function logoutOtherClients(callback?: Function): void;
+    function onCreateUser(func: Function): void;
+    function validateLoginAttempt(func: Function): { stop: () => void };
+    function validateNewUser(func: Function): boolean;
+  }
+}
+
+declare module App {
+  function accessRule(domainRule: string, options?: {
+    launchExternal?: boolean;
+  }): void;
+  function configurePlugin(id: string, config: Object): void;
+  function icons(icons: Object): void;
+  function info(options: {
+    id?: string;
+    version?: string;
+    name?: string;
+    description?: string;
+    author?: string;
+    email?: string;
+    website?: string;
+  }): void;
+  function launchScreens(launchScreens: Object): void;
+  function setPreference(name: string, value: string, platform?: string): void;
+}
+
+declare module Assets {
+  function getBinary(assetPath: string, asyncCallback?: Function): EJSON;
+  function getText(assetPath: string, asyncCallback?: Function): string;
+}
+
+declare module "meteor/blaze" {
+  import { Meteor } from "meteor/meteor";
+  export module Blaze {
+    function Each(argFunc: Function, contentFunc: Function, elseFunc?: Function): Blaze.View;
+    function If(conditionFunc: Function, contentFunc: Function, elseFunc?: Function): Blaze.View;
+    function Let(bindings: Function, contentFunc: Function): Blaze.View;
+    var Template: TemplateStatic;
+    interface TemplateStatic {
+      new (viewName?: string, renderFunction?: Function): Template;
+      // It should be [templateName: string]: TemplateInstance but this is not possible -- user will need to cast to TemplateInstance
+      [templateName: string]: any | Template; // added "any" to make it work
+      head: Template;
+      find(selector: string): Blaze.Template;
+      findAll(selector: string): Blaze.Template[];
+      $: any;
+    }
+    interface Template {
+    }
+
+    var TemplateInstance: TemplateInstanceStatic;
+    interface TemplateInstanceStatic {
+      new (view: Blaze.View): TemplateInstance;
+    }
+    interface TemplateInstance {
+      $(selector: string): any;
+      autorun(runFunc: Function): Object;
+      data: Object;
+      find(selector?: string): Blaze.TemplateInstance;
+      findAll(selector: string): Blaze.TemplateInstance[];
+      firstNode: Object;
+      lastNode: Object;
+      subscribe(name: string, ...args: any[]): Meteor.SubscriptionHandle;
+      subscriptionsReady(): boolean;
+      view: Object;
+    }
+
+    function Unless(conditionFunc: Function, contentFunc: Function, elseFunc?: Function): Blaze.View;
+    var View: ViewStatic;
+    interface ViewStatic {
+      new (name?: string, renderFunction?: Function): View;
+    }
+    interface View {
+    }
+
+    function With(data: Object | Function, contentFunc: Function): Blaze.View;
+    var currentView: Blaze.View;
+    function getData(elementOrView?: HTMLElement | Blaze.View): Object;
+    function getView(element?: HTMLElement): Blaze.View;
+    function isTemplate(value: any): boolean;
+    function remove(renderedView: Blaze.View): void;
+    function render(templateOrView: Template | Blaze.View, parentNode: Node, nextNode?: Node, parentView?: Blaze.View): Blaze.View;
+    function renderWithData(templateOrView: Template | Blaze.View, data: Object | Function, parentNode: Node, nextNode?: Node, parentView?: Blaze.View): Blaze.View;
+    function toHTML(templateOrView: Template | Blaze.View): string;
+    function toHTMLWithData(templateOrView: Template | Blaze.View, data: Object | Function): string;
+  }
+}
+
+declare module Cordova {
+  function depends(dependencies: { [id: string]: string }): void;
+}
+
+declare module "meteor/ddp" {
+  export module DDP {
+    function connect(url: string): DDP.DDPStatic;
+  }
+}
+
+declare module DDPCommon {
+  function MethodInvocation(options: {
+  }): any;
+}
+
+declare module EJSON {
+  var CustomType: CustomTypeStatic;
+  interface CustomTypeStatic {
+    new (): CustomType;
+  }
+  interface CustomType {
+    clone(): EJSON.CustomType;
+    equals(other: Object): boolean;
+    toJSONValue(): JSONable;
+    typeName(): string;
+  }
+
+  function addType(name: string, factory: (val: JSONable) => EJSON.CustomType): void;
+  function clone<T>(val: T): T;
+  function equals(a: EJSON, b: EJSON, options?: {
+    keyOrderSensitive?: boolean;
+  }): boolean;
+  function fromJSONValue(val: JSONable): any;
+  function isBinary(x: Object): boolean;
+  var newBinary: any;
+  function parse(str: string): EJSON;
+  function stringify(val: EJSON, options?: {
+    indent?: boolean | number | string;
+    canonical?: boolean;
+  }): string;
+  function toJSONValue(val: EJSON): JSONable;
+}
+
+declare module Match {
+  function test(value: any, pattern: any): boolean;
+}
+
+declare module "meteor/meteor" {
+  import { Mongo } from "meteor/mongo";
+
+  export module Meteor {
+    var Error: ErrorStatic;
+    interface ErrorStatic {
+      new (error: string | number, reason?: string, details?: string): Error;
+    }
+    interface Error {
+      error: string | number;
+      reason?: string;
+      details?: string;
+    }
+    function absoluteUrl(path?: string, options?: {
+      secure?: boolean;
+      replaceLocalhost?: boolean;
+      rootUrl?: string;
+    }): string;
+    function apply(name: string, args: EJSONable[], options?: {
+      wait?: boolean;
+      onResultReceived?: Function;
+    }, asyncCallback?: Function): any;
+    function call(name: string, ...args: any[]): any;
+    function clearInterval(id: number): void;
+    function clearTimeout(id: number): void;
+    function disconnect(): void;
+    var isClient: boolean;
+    var isCordova: boolean;
+    var isServer: boolean;
+    function loggingIn(): boolean;
+    function loginWith<ExternalService>(options?: {
+      requestPermissions?: string[];
+      requestOfflineToken?: boolean;
+      loginUrlParameters?: Object;
+      userEmail?: string;
+      loginStyle?: string;
+      redirectUrl?: string;
+    }, callback?: Function): void;
+    function loginWithPassword(user: Object | string, password: string, callback?: Function): void;
+    function logout(callback?: Function): void;
+    function logoutOtherClients(callback?: Function): void;
+    function methods(methods: Object): void;
+    function onConnection(callback: Function): void;
+    function publish(name: string, func: Function): void;
+    function reconnect(): void;
+    var release: string;
+    function setInterval(func: Function, delay: number): number;
+    function setTimeout(func: Function, delay: number): number;
+    var settings: { [id: string]: any };
+    function startup(func: Function): void;
+    function status(): Meteor.StatusEnum;
+    function subscribe(name: string, ...args: any[]): Meteor.SubscriptionHandle;
+    function user(): Meteor.User;
+    function userId(): string;
+    var users: Mongo.Collection<User>;
+    function wrapAsync(func: Function, context?: Object): any;
+  }
+}
+
+declare module "meteor/mongo" {
+  import { Meteor } from "meteor/meteor";
+
+  export module Mongo {
+    var Collection: CollectionStatic;
+    interface CollectionStatic {
+      new <T>(name: string, options?: {
+        connection?: Object;
+        idGeneration?: string;
+        transform?: Function;
+      }): Collection<T>;
+    }
+    interface Collection<T> {
+      allow(options: {
+        insert?: (userId: string, doc: T) => boolean;
+        update?: (userId: string, doc: T, fieldNames: string[], modifier: any) => boolean;
+        remove?: (userId: string, doc: T) => boolean;
+        fetch?: string[];
+        transform?: Function;
+      }): boolean;
+      deny(options: {
+        insert?: (userId: string, doc: T) => boolean;
+        update?: (userId: string, doc: T, fieldNames: string[], modifier: any) => boolean;
+        remove?: (userId: string, doc: T) => boolean;
+        fetch?: string[];
+        transform?: Function;
+      }): boolean;
+      find(selector?: Mongo.Selector | Mongo.ObjectID | string, options?: {
+        sort?: Mongo.SortSpecifier;
+        skip?: number;
+        limit?: number;
+        fields?: Mongo.FieldSpecifier;
+        reactive?: boolean;
+        transform?: Function;
+      }): Mongo.Cursor<T>;
+      findOne(selector?: Mongo.Selector | Mongo.ObjectID | string, options?: {
+        sort?: Mongo.SortSpecifier;
+        skip?: number;
+        fields?: Mongo.FieldSpecifier;
+        reactive?: boolean;
+        transform?: Function;
+      }): T;
+      insert(doc: T, callback?: Function): string;
+      rawCollection(): any;
+      rawDatabase(): any;
+      remove(selector: Mongo.Selector | Mongo.ObjectID | string, callback?: Function): number;
+      update(selector: Mongo.Selector | Mongo.ObjectID | string, modifier: Mongo.Modifier, options?: {
+        multi?: boolean;
+        upsert?: boolean;
+      }, callback?: Function): number;
+      upsert(selector: Mongo.Selector | Mongo.ObjectID | string, modifier: Mongo.Modifier, options?: {
+        multi?: boolean;
+      }, callback?: Function): { numberAffected?: number; insertedId?: string; };
+      _ensureIndex(indexName: string, options?: { [key: string]: any }): void;
+    }
+
+    var Cursor: CursorStatic;
+    interface CursorStatic {
+      new <T>(): Cursor<T>;
+    }
+    interface Cursor<T> {
+      count(): number;
+      fetch(): Array<T>;
+      forEach(callback: <T>(doc: T, index: number, cursor: Mongo.Cursor<T>) => void, thisArg?: any): void;
+      map<U>(callback: (doc: T, index: number, cursor: Mongo.Cursor<T>) => U, thisArg?: any): Array<U>;
+      observe(callbacks: Object): Meteor.LiveQueryHandle;
+      observeChanges(callbacks: Object): Meteor.LiveQueryHandle;
+    }
+
+    var ObjectID: ObjectIDStatic;
+    interface ObjectIDStatic {
+      new (hexString?: string): ObjectID;
+    }
+    interface ObjectID {
+    }
+
+  }
+}
+
+declare module Npm {
+  function depends(dependencies: { [id: string]: string }): void;
+  function require(name: string): any;
+}
+
+declare module Package {
+  function describe(options: {
+    summary?: string;
+    version?: string;
+    name?: string;
+    git?: string;
+    documentation?: string;
+    debugOnly?: boolean;
+    prodOnly?: boolean;
+  }): void;
+  function onTest(func: Function): void;
+  function onUse(func: Function): void;
+  function registerBuildPlugin(options?: {
+    name?: string;
+    use?: string | string[];
+    sources?: string[];
+    npmDependencies?: Object;
+  }): void;
+}
+
+declare module "meteor/tracker" {
+  export module Tracker {
+    function Computation(): void;
+    interface Computation {
+      firstRun: boolean;
+      invalidate(): void;
+      invalidated: boolean;
+      onInvalidate(callback: Function): void;
+      onStop(callback: Function): void;
+      stop(): void;
+      stopped: boolean;
+    }
+
+    var Dependency: DependencyStatic;
+    interface DependencyStatic {
+      new (): Dependency;
+    }
+    interface Dependency {
+      changed(): void;
+      depend(fromComputation?: Tracker.Computation): boolean;
+      hasDependents(): boolean;
+    }
+
+    var active: boolean;
+    function afterFlush(callback: Function): void;
+    function autorun(runFunc: (computation: Tracker.Computation) => void, options?: {
+      onError?: Function;
+    }): Tracker.Computation;
+    var currentComputation: Tracker.Computation;
+    function flush(): void;
+    function nonreactive(func: Function): void;
+    function onInvalidate(callback: Function): void;
+  }
+}
+
+declare module Session {
+  function equals(key: string, value: string | number | boolean | any /** Null **/ | any /** Undefined **/): boolean;
+  function get(key: string): any;
+  function set(key: string, value: EJSONable | any /** Undefined **/): void;
+  function setDefault(key: string, value: EJSONable | any /** Undefined **/): void;
+}
+
+declare module "meteor/http" {
+  import { Meteor } from "meteor/meteor";
+  export module HTTP {
+
+    function call(method: string, url: string, options?: {
+      content?: string;
+      data?: Object;
+      query?: string;
+      params?: Object;
+      auth?: string;
+      headers?: Object;
+      timeout?: number;
+      followRedirects?: boolean;
+      npmRequestOptions?: Object;
+      beforeSend?: Function;
+    }, asyncCallback?: Function): HTTP.HTTPResponse;
+    function del(url: string, callOptions?: Object, asyncCallback?: Function): HTTP.HTTPResponse;
+    function get(url: string, callOptions?: Object, asyncCallback?: Function): HTTP.HTTPResponse;
+    function post(url: string, callOptions?: Object, asyncCallback?: Function): HTTP.HTTPResponse;
+    function put(url: string, callOptions?: Object, asyncCallback?: Function): HTTP.HTTPResponse;
+  }
+}
+
+declare module "meteor/email" {
+  export module Email {
+    function send(options: {
+      from?: string;
+      to?: string | string[];
+      cc?: string | string[];
+      bcc?: string | string[];
+      replyTo?: string | string[];
+      subject?: string;
+      text?: string;
+      html?: string;
+      headers?: Object;
+      attachments?: Object[];
+      mailComposer?: MailComposer;
+    }): void;
+  }
+}
+
+declare var CompileStep: CompileStepStatic;
+interface CompileStepStatic {
+  new (): CompileStep;
+}
+interface CompileStep {
+  addAsset(options: {
+  }, path: string, data: any /** Buffer **/ | string): any;
+  addHtml(options: {
+    section?: string;
+    data?: string;
+  }): any;
+  addJavaScript(options: {
+    path?: string;
+    data?: string;
+    sourcePath?: string;
+  }): any;
+  addStylesheet(options: {
+  }, path: string, data: string, sourceMap: string): any;
+  arch: any;
+  declaredExports: any;
+  error(options: {
+  }, message: string, sourcePath?: string, line?: number, func?: string): any;
+  fileOptions: any;
+  fullInputPath: any;
+  inputPath: any;
+  inputSize: any;
+  packageName: any;
+  pathForSourceMap: any;
+  read(n?: number): any;
+  rootOutputPath: any;
+}
+
+declare var PackageAPI: PackageAPIStatic;
+interface PackageAPIStatic {
+  new (): PackageAPI;
+}
+interface PackageAPI {
+  addAssets(filenames: string | string[], architecture: string | string[]): void;
+  addFiles(filenames: string | string[], architecture?: string | string[], options?: {
+    bare?: boolean;
+  }): void;
+  export(exportedObjects: string | string[], architecture?: string | string[], exportOptions?: Object, testOnly?: boolean): void;
+  imply(packageNames: string | string[], architecture?: string | string[]): void;
+  use(packageNames: string | string[], architecture?: string | string[], options?: {
+    weak?: boolean;
+    unordered?: boolean;
+  }): void;
+  versionsFrom(meteorRelease: string | string[]): void;
+}
+
+declare module "meteor/reactive-var" {
+  import { Meteor } from "meteor/meteor";
+
+  export var ReactiveVar: ReactiveVarStatic;
+  interface ReactiveVarStatic {
+    new <T>(initialValue: T, equalsFunc?: Function): ReactiveVar<T>;
+  }
+  interface ReactiveVar<T> {
+    get(): T;
+    set(newValue: T): void;
+  }
+
+  export var Subscription: SubscriptionStatic;
+  interface SubscriptionStatic {
+    new (): Subscription;
+  }
+  interface Subscription {
+    added(collection: string, id: string, fields: Object): void;
+    changed(collection: string, id: string, fields: Object): void;
+    connection: Meteor.Connection;
+    error(error: Error): void;
+    onStop(func: Function): void;
+    ready(): void;
+    removed(collection: string, id: string): void;
+    stop(): void;
+    userId: string;
+  }
+}
+
+declare module "meteor/blaze" {
+  import { Meteor } from "meteor/meteor";
+
+  export var Template: TemplateStatic;
+  interface TemplateStatic {
+    new (): Template;
+    // It should be [templateName: string]: TemplateInstance but this is not possible -- user will need to cast to TemplateInstance
+    [templateName: string]: any | Template; // added "any" to make it work
+    head: Template;
+    find(selector: string): Blaze.Template;
+    findAll(selector: string): Blaze.Template[];
+    $: any;
+    body: Template;
+    currentData(): {};
+    instance(): Blaze.TemplateInstance;
+    parentData(numLevels?: number): {};
+    registerHelper(name: string, helperFunction: Function): void;
+  }
+  interface Template {
+    created: Function;
+    destroyed: Function;
+    events(eventMap: Meteor.EventMap): void;
+    helpers(helpers: { [id: string]: any }): void;
+    onCreated: Function;
+    onDestroyed: Function;
+    onRendered: Function;
+    rendered: Function;
+  }
+}
+
+declare function check(value: any, pattern: any): void;
+declare function execFileAsync(command: string, args?: any[], options?: {
+  cwd?: Object;
+  env?: Object;
+  stdio?: any[] | string;
+  destination?: any;
+  waitForClose?: string;
+}): any;
+declare function execFileSync(command: string, args?: any[], options?: {
+  cwd?: Object;
+  env?: Object;
+  stdio?: any[] | string;
+  destination?: any;
+  waitForClose?: string;
+}): String;
+declare function getExtension(): String;
\ No newline at end of file
-- 
2.6.4


From e38a5bc883f1090cdd5b316fe2d90535406b9c92 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Mon, 25 Jan 2016 15:46:09 +0200
Subject: [PATCH 009/173] Step 0.8: Create the root component

---
 client/app.ts | 12 ++++++++++++
 1 file changed, 12 insertions(+)
 create mode 100644 client/app.ts

diff --git a/client/app.ts b/client/app.ts
new file mode 100644
index 0000000..36cc951
--- /dev/null
+++ b/client/app.ts
@@ -0,0 +1,12 @@
+import 'reflect-metadata';
+import 'zone.js/dist/zone';
+import {Component} from 'angular2/core';
+import {bootstrap} from 'angular2/bootstrap';
+
+@Component({
+  selector: 'app',
+  templateUrl: 'client/app.html'
+})
+class Socially { }
+
+bootstrap(Socially);
\ No newline at end of file
-- 
2.6.4


From 858c1bced9c89eb7ff15b993dd7adce8487c12a7 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Mon, 25 Jan 2016 15:46:28 +0200
Subject: [PATCH 010/173] Step 0.9: Add the main component HTML file

---
 client/app.html | 1 +
 1 file changed, 1 insertion(+)
 create mode 100644 client/app.html

diff --git a/client/app.html b/client/app.html
new file mode 100644
index 0000000..c57eff5
--- /dev/null
+++ b/client/app.html
@@ -0,0 +1 @@
+Hello World!
\ No newline at end of file
-- 
2.6.4


From fa4110f21ae0d85e27740a1dc12db8214843a1c9 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Mon, 25 Jan 2016 15:46:43 +0200
Subject: [PATCH 011/173] Step 0.10: Use the main component in the index.html
 file

---
 client/index.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/index.html b/client/index.html
index 3887661..2662e56 100644
--- a/client/index.html
+++ b/client/index.html
@@ -1,3 +1,3 @@
 <body>
-<p>Nothing here</p>
+  <app></app>
 </body>
\ No newline at end of file
-- 
2.6.4


From 2d839488607db60a5722def21b304542b4157a0a Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Mon, 25 Jan 2016 15:47:57 +0200
Subject: [PATCH 012/173] Step 1.1: Add static HTML to the main component view

---
 client/app.html | 15 ++++++++++++++-
 1 file changed, 14 insertions(+), 1 deletion(-)

diff --git a/client/app.html b/client/app.html
index c57eff5..9ea318e 100644
--- a/client/app.html
+++ b/client/app.html
@@ -1 +1,14 @@
-Hello World!
\ No newline at end of file
+<ul>
+  <li>
+    <span>Dubstep-Free Zone</span>
+    <p>
+      Can we please just for an evening not listen to dubstep.
+    </p>
+  </li>
+  <li>
+    <span>All dubstep all the time</span>
+    <p>
+      Get it on!
+    </p>
+  </li>
+</ul>
\ No newline at end of file
-- 
2.6.4


From 1b4bdab601fce4deae1733903a94fb953f3a1fbc Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Mon, 25 Jan 2016 15:49:08 +0200
Subject: [PATCH 013/173] Step 2.1: Add dynamic html to the main component view

---
 client/app.html | 23 +++++++++--------------
 1 file changed, 9 insertions(+), 14 deletions(-)

diff --git a/client/app.html b/client/app.html
index 9ea318e..4bd79c2 100644
--- a/client/app.html
+++ b/client/app.html
@@ -1,14 +1,9 @@
-<ul>
-  <li>
-    <span>Dubstep-Free Zone</span>
-    <p>
-      Can we please just for an evening not listen to dubstep.
-    </p>
-  </li>
-  <li>
-    <span>All dubstep all the time</span>
-    <p>
-      Get it on!
-    </p>
-  </li>
-</ul>
\ No newline at end of file
+<div>
+  <ul>
+    <li *ngFor="#party of parties">
+      {{party.name}}
+      <p>{{party.description}}</p>
+      <p>{{party.location}}</p>
+    </li>
+  </ul>
+</div>
\ No newline at end of file
-- 
2.6.4


From d230b86e565df9403d369ec507577dea87309f1f Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Mon, 25 Jan 2016 15:50:04 +0200
Subject: [PATCH 014/173] Step 2.2: load parties data into the app

---
 client/app.ts | 19 ++++++++++++++++++-
 1 file changed, 18 insertions(+), 1 deletion(-)

diff --git a/client/app.ts b/client/app.ts
index 36cc951..cbd7772 100644
--- a/client/app.ts
+++ b/client/app.ts
@@ -7,6 +7,23 @@ import {bootstrap} from 'angular2/bootstrap';
   selector: 'app',
   templateUrl: 'client/app.html'
 })
-class Socially { }
+class Socially {
+  constructor() {
+    this.parties = [
+      {'name': 'Dubstep-Free Zone',
+        'description': 'Can we please just for an evening not listen to dubstep.',
+        'location': 'Palo Alto'
+      },
+      {'name': 'All dubstep all the time',
+        'description': 'Get it on!',
+        'location': 'Palo Alto'
+      },
+      {'name': 'Savage lounging',
+        'description': 'Leisure suit required. And only fiercest manners.',
+        'location': 'San Francisco'
+      }
+    ];
+  }
+}
 
 bootstrap(Socially);
\ No newline at end of file
-- 
2.6.4


From f67b07236549153d744a189a9089980af3b738bd Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Mon, 25 Jan 2016 15:50:30 +0200
Subject: [PATCH 015/173] Step 2.3: define parties property

---
 client/app.ts | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/client/app.ts b/client/app.ts
index cbd7772..6c16cc0 100644
--- a/client/app.ts
+++ b/client/app.ts
@@ -8,6 +8,8 @@ import {bootstrap} from 'angular2/bootstrap';
   templateUrl: 'client/app.html'
 })
 class Socially {
+  parties: Array<Object>;
+
   constructor() {
     this.parties = [
       {'name': 'Dubstep-Free Zone',
-- 
2.6.4


From 776fe7f8cb5b505a5ec5d36c3fe2c1ae1513fb6a Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Mon, 25 Jan 2016 15:51:11 +0200
Subject: [PATCH 016/173] Step 3.1: add the parties collection

---
 collections/parties.ts | 1 +
 1 file changed, 1 insertion(+)
 create mode 100644 collections/parties.ts

diff --git a/collections/parties.ts b/collections/parties.ts
new file mode 100644
index 0000000..36f4df9
--- /dev/null
+++ b/collections/parties.ts
@@ -0,0 +1 @@
+export var Parties = new Mongo.Collection('parties');
\ No newline at end of file
-- 
2.6.4


From bd25daa4c5a270c4840e3a8bcdc18713db2ae1cf Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Mon, 25 Jan 2016 15:53:10 +0200
Subject: [PATCH 017/173] Step 3.2: import the parties collection

---
 client/app.ts | 1 +
 1 file changed, 1 insertion(+)

diff --git a/client/app.ts b/client/app.ts
index 6c16cc0..c76ce17 100644
--- a/client/app.ts
+++ b/client/app.ts
@@ -2,6 +2,7 @@ import 'reflect-metadata';
 import 'zone.js/dist/zone';
 import {Component} from 'angular2/core';
 import {bootstrap} from 'angular2/bootstrap';
+import {Parties} from '../collections/parties.ts';
 
 @Component({
   selector: 'app',
-- 
2.6.4


From 2814a4df98e8de21ea0b576b2379a04020a647a8 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Mon, 25 Jan 2016 15:53:46 +0200
Subject: [PATCH 018/173] Step 3.3: Fetch parties from the collection

---
 client/app.ts | 15 +--------------
 1 file changed, 1 insertion(+), 14 deletions(-)

diff --git a/client/app.ts b/client/app.ts
index c76ce17..7ed7554 100644
--- a/client/app.ts
+++ b/client/app.ts
@@ -12,20 +12,7 @@ class Socially {
   parties: Array<Object>;
 
   constructor() {
-    this.parties = [
-      {'name': 'Dubstep-Free Zone',
-        'description': 'Can we please just for an evening not listen to dubstep.',
-        'location': 'Palo Alto'
-      },
-      {'name': 'All dubstep all the time',
-        'description': 'Get it on!',
-        'location': 'Palo Alto'
-      },
-      {'name': 'Savage lounging',
-        'description': 'Leisure suit required. And only fiercest manners.',
-        'location': 'San Francisco'
-      }
-    ];
+    this.parties = Parties.find().fetch();
   }
 }
 
-- 
2.6.4


From 75e59a3e97929e0c9de9425f8762b643a807d2ab Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Mon, 25 Jan 2016 15:55:24 +0200
Subject: [PATCH 019/173] Step 3.4: Fetch parties from the collection
 reactively

---
 client/app.ts | 8 +++++---
 1 file changed, 5 insertions(+), 3 deletions(-)

diff --git a/client/app.ts b/client/app.ts
index 7ed7554..b910bd3 100644
--- a/client/app.ts
+++ b/client/app.ts
@@ -1,6 +1,6 @@
 import 'reflect-metadata';
 import 'zone.js/dist/zone';
-import {Component} from 'angular2/core';
+import {Component, NgZone} from 'angular2/core';
 import {bootstrap} from 'angular2/bootstrap';
 import {Parties} from '../collections/parties.ts';
 
@@ -11,8 +11,10 @@ import {Parties} from '../collections/parties.ts';
 class Socially {
   parties: Array<Object>;
 
-  constructor() {
-    this.parties = Parties.find().fetch();
+  constructor (zone: NgZone) {
+    Tracker.autorun(() => zone.run(() => {
+      this.parties = Parties.find().fetch();
+    }));
   }
 }
 
-- 
2.6.4


From 1540870f9154955013234754201eec2f0dab0b53 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Sat, 2 Apr 2016 11:54:18 +0300
Subject: [PATCH 020/173] Step 3.5: Add server side main file

---
 server/main.ts | 1 +
 1 file changed, 1 insertion(+)
 create mode 100644 server/main.ts

diff --git a/server/main.ts b/server/main.ts
new file mode 100644
index 0000000..469d147
--- /dev/null
+++ b/server/main.ts
@@ -0,0 +1 @@
+import {Parties} from '../collections/parties.ts';
\ No newline at end of file
-- 
2.6.4


From f82cece4498bf297e837c0739b0ff29ecb99bb22 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Sat, 2 Apr 2016 11:54:38 +0300
Subject: [PATCH 021/173] Step 3.6: Added Angular2-Meteor auto bootstrap

---
 package.json | 1 +
 1 file changed, 1 insertion(+)

diff --git a/package.json b/package.json
index 67e4ca6..d1d3c4b 100644
--- a/package.json
+++ b/package.json
@@ -15,6 +15,7 @@
   "dependencies": {
     "angular2": "2.0.0-beta.12",
     "angular2-meteor": "0.5.2",
+    "angular2-meteor-auto-bootstrap": "git://github.com/Urigo/angular2-meteor-auto-bootstrap.git#master",
     "meteor-node-stubs": "^0.2.1"
   }
 }
-- 
2.6.4


From 6fcac498af04939351c35ab05ea9cb777b2ea21a Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Mon, 25 Jan 2016 16:08:10 +0200
Subject: [PATCH 022/173] Step 3.7: Blaze-like binding to Angular2

---
 client/app.ts | 10 ++++------
 1 file changed, 4 insertions(+), 6 deletions(-)

diff --git a/client/app.ts b/client/app.ts
index b910bd3..6e6ae0d 100644
--- a/client/app.ts
+++ b/client/app.ts
@@ -1,7 +1,7 @@
 import 'reflect-metadata';
 import 'zone.js/dist/zone';
 import {Component, NgZone} from 'angular2/core';
-import {bootstrap} from 'angular2/bootstrap';
+import {bootstrap} from 'angular2-meteor-auto-bootstrap';
 import {Parties} from '../collections/parties.ts';
 
 @Component({
@@ -9,12 +9,10 @@ import {Parties} from '../collections/parties.ts';
   templateUrl: 'client/app.html'
 })
 class Socially {
-  parties: Array<Object>;
+  parties: Mongo.Cursor<Object>;
 
-  constructor (zone: NgZone) {
-    Tracker.autorun(() => zone.run(() => {
-      this.parties = Parties.find().fetch();
-    }));
+  constructor () {
+    this.parties = Parties.find();
   }
 }
 
-- 
2.6.4


From 19248268bcc5bc4bc0c59bf47112eb7db8e75e39 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Mon, 25 Jan 2016 16:10:18 +0200
Subject: [PATCH 023/173] Step 3.8: Load initial parties on server side

---
 server/load-parties.ts | 28 ++++++++++++++++++++++++++++
 1 file changed, 28 insertions(+)
 create mode 100644 server/load-parties.ts

diff --git a/server/load-parties.ts b/server/load-parties.ts
new file mode 100644
index 0000000..47c3c1c
--- /dev/null
+++ b/server/load-parties.ts
@@ -0,0 +1,28 @@
+import {Parties} from '../collections/parties.ts';
+
+export function loadParties() {
+  if (Parties.find().count() === 0) {
+
+    var parties = [
+      {
+        'name': 'Dubstep-Free Zone',
+        'description': 'Can we please just for an evening not listen to dubstep.',
+        'location': 'Palo Alto'
+      },
+      {
+        'name': 'All dubstep all the time',
+        'description': 'Get it on!',
+        'location': 'Palo Alto'
+      },
+      {
+        'name': 'Savage lounging',
+        'description': 'Leisure suit required. And only fiercest manners.',
+        'location': 'San Francisco'
+      }
+    ];
+
+    for (var i = 0; i < parties.length; i++) {
+      Parties.insert(parties[i]);
+    }
+  }
+};
\ No newline at end of file
-- 
2.6.4


From 1757ebb2511317b11edbc13a246ae4f64aa443e6 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Mon, 25 Jan 2016 16:11:01 +0200
Subject: [PATCH 024/173] Step 3.9: bootstrap server side

---
 server/main.ts | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/server/main.ts b/server/main.ts
index 469d147..bd0542e 100644
--- a/server/main.ts
+++ b/server/main.ts
@@ -1 +1,3 @@
-import {Parties} from '../collections/parties.ts';
\ No newline at end of file
+import {loadParties} from './load-parties.ts';
+
+Meteor.startup(loadParties);
\ No newline at end of file
-- 
2.6.4


From 795e0dacf66bce61cf6bdb597e431181226ccc77 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Mon, 25 Jan 2016 16:14:03 +0200
Subject: [PATCH 025/173] Step 4.1: create PartiesForm component

---
 client/imports/parties-form/parties-form.ts | 8 ++++++++
 1 file changed, 8 insertions(+)
 create mode 100644 client/imports/parties-form/parties-form.ts

diff --git a/client/imports/parties-form/parties-form.ts b/client/imports/parties-form/parties-form.ts
new file mode 100644
index 0000000..dbce5f6
--- /dev/null
+++ b/client/imports/parties-form/parties-form.ts
@@ -0,0 +1,8 @@
+import 'reflect-metadata';
+import {Component} from 'angular2/core';
+
+@Component({
+  selector: 'parties-form',
+  templateUrl: '/client/imports/parties-form/parties-form.html'
+})
+export class PartiesForm { }
\ No newline at end of file
-- 
2.6.4


From c63b34322f63d5f3fd60be247806e67a3303b31b Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Mon, 25 Jan 2016 16:14:14 +0200
Subject: [PATCH 026/173] Step 4.2: add parties-form.html template

---
 client/imports/parties-form/parties-form.html | 9 +++++++++
 1 file changed, 9 insertions(+)
 create mode 100644 client/imports/parties-form/parties-form.html

diff --git a/client/imports/parties-form/parties-form.html b/client/imports/parties-form/parties-form.html
new file mode 100644
index 0000000..37748f5
--- /dev/null
+++ b/client/imports/parties-form/parties-form.html
@@ -0,0 +1,9 @@
+<form>
+  <label>Name</label>
+  <input type="text">
+  <label>Description</label>
+  <input type="text">
+  <label>Location</label>
+  <input type="text">
+  <button>Add</button>
+</form>
\ No newline at end of file
-- 
2.6.4


From 5f45ab8ef70ba7d2eefb28818c33b0f19c73a264 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Mon, 25 Jan 2016 16:14:30 +0200
Subject: [PATCH 027/173] Step 4.3: load the PartiesForm component

---
 client/app.html | 1 +
 1 file changed, 1 insertion(+)

diff --git a/client/app.html b/client/app.html
index 4bd79c2..20a633e 100644
--- a/client/app.html
+++ b/client/app.html
@@ -1,4 +1,5 @@
 <div>
+  <parties-form></parties-form>
   <ul>
     <li *ngFor="#party of parties">
       {{party.name}}
-- 
2.6.4


From 79e0791a68b8e58992c5008768d83c467dcc5c0a Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Mon, 25 Jan 2016 16:14:47 +0200
Subject: [PATCH 028/173] Step 4.4: import the PartiesForm component and link
 it with the Socially component

---
 client/app.ts | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/client/app.ts b/client/app.ts
index 6e6ae0d..e4c5ec5 100644
--- a/client/app.ts
+++ b/client/app.ts
@@ -3,10 +3,12 @@ import 'zone.js/dist/zone';
 import {Component, NgZone} from 'angular2/core';
 import {bootstrap} from 'angular2-meteor-auto-bootstrap';
 import {Parties} from '../collections/parties.ts';
+import {PartiesForm} from './imports/parties-form/parties-form.ts';
 
 @Component({
   selector: 'app',
-  templateUrl: 'client/app.html'
+  templateUrl: 'client/app.html',
+  directives: [PartiesForm]
 })
 class Socially {
   parties: Mongo.Cursor<Object>;
-- 
2.6.4


From ee4d58c1ccbf3b94efdb886d8dad22a820653c51 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Mon, 25 Jan 2016 16:15:59 +0200
Subject: [PATCH 029/173] Step 4.5: build a form model

---
 client/imports/parties-form/parties-form.ts | 15 ++++++++++++++-
 1 file changed, 14 insertions(+), 1 deletion(-)

diff --git a/client/imports/parties-form/parties-form.ts b/client/imports/parties-form/parties-form.ts
index dbce5f6..231c58d 100644
--- a/client/imports/parties-form/parties-form.ts
+++ b/client/imports/parties-form/parties-form.ts
@@ -1,8 +1,21 @@
 import 'reflect-metadata';
 import {Component} from 'angular2/core';
+import {FormBuilder, ControlGroup, Validators} from 'angular2/common';
 
 @Component({
   selector: 'parties-form',
   templateUrl: '/client/imports/parties-form/parties-form.html'
 })
-export class PartiesForm { }
\ No newline at end of file
+export class PartiesForm {
+  partiesForm: ControlGroup;
+
+  constructor() {
+    let fb = new FormBuilder();
+
+    this.partiesForm = fb.group({
+      name: [''],
+      description: [''],
+      location: ['']
+    });
+  }
+}
\ No newline at end of file
-- 
2.6.4


From 67ea386186882807c80fe91c469d684198000c86 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Mon, 25 Jan 2016 16:16:26 +0200
Subject: [PATCH 030/173] Step 4.6: add form validation

---
 client/imports/parties-form/parties-form.ts | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/client/imports/parties-form/parties-form.ts b/client/imports/parties-form/parties-form.ts
index 231c58d..f8a45b5 100644
--- a/client/imports/parties-form/parties-form.ts
+++ b/client/imports/parties-form/parties-form.ts
@@ -13,9 +13,9 @@ export class PartiesForm {
     let fb = new FormBuilder();
 
     this.partiesForm = fb.group({
-      name: [''],
+      name: ['', Validators.required],
       description: [''],
-      location: ['']
+      location: ['', Validators.required]
     });
   }
 }
\ No newline at end of file
-- 
2.6.4


From e623cc5165a0593e2d55f43131008e11d0278296 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Mon, 25 Jan 2016 16:16:51 +0200
Subject: [PATCH 031/173] Step 4.7: link the form and its model together

---
 client/imports/parties-form/parties-form.html | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/client/imports/parties-form/parties-form.html b/client/imports/parties-form/parties-form.html
index 37748f5..4e3676e 100644
--- a/client/imports/parties-form/parties-form.html
+++ b/client/imports/parties-form/parties-form.html
@@ -1,9 +1,9 @@
-<form>
+<form [ngFormModel]="partiesForm">
   <label>Name</label>
-  <input type="text">
+  <input type="text" ngControl="name">
   <label>Description</label>
-  <input type="text">
+  <input type="text" ngControl="description">
   <label>Location</label>
-  <input type="text">
+  <input type="text" ngControl="location">
   <button>Add</button>
 </form>
\ No newline at end of file
-- 
2.6.4


From 5b2e38deac3c34ce154b4ad5ee015f5504375539 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Mon, 25 Jan 2016 16:17:16 +0200
Subject: [PATCH 032/173] Step 4.8: add submit handler inside the template

---
 client/imports/parties-form/parties-form.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/imports/parties-form/parties-form.html b/client/imports/parties-form/parties-form.html
index 4e3676e..754b9ff 100644
--- a/client/imports/parties-form/parties-form.html
+++ b/client/imports/parties-form/parties-form.html
@@ -1,4 +1,4 @@
-<form [ngFormModel]="partiesForm">
+<form [ngFormModel]="partiesForm" #f="ngForm" (submit)="addParty(f.value)">
   <label>Name</label>
   <input type="text" ngControl="name">
   <label>Description</label>
-- 
2.6.4


From 66f683c1a5750c23003b790d7a0a7cad27725bfa Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Mon, 25 Jan 2016 16:19:39 +0200
Subject: [PATCH 033/173] Step 4.9: add addParty method into the component

---
 client/imports/parties-form/parties-form.ts | 17 ++++++++++++++++-
 1 file changed, 16 insertions(+), 1 deletion(-)

diff --git a/client/imports/parties-form/parties-form.ts b/client/imports/parties-form/parties-form.ts
index f8a45b5..73fd496 100644
--- a/client/imports/parties-form/parties-form.ts
+++ b/client/imports/parties-form/parties-form.ts
@@ -1,6 +1,7 @@
 import 'reflect-metadata';
 import {Component} from 'angular2/core';
-import {FormBuilder, ControlGroup, Validators} from 'angular2/common';
+import {FormBuilder, ControlGroup, Validators, Control} from 'angular2/common';
+import {Parties} from '../../../collections/parties.ts';
 
 @Component({
   selector: 'parties-form',
@@ -18,4 +19,18 @@ export class PartiesForm {
       location: ['', Validators.required]
     });
   }
+
+  addParty(party) {
+    if (this.partiesForm.valid) {
+      Parties.insert({
+        name: party.name,
+        description: party.description,
+        location: party.location
+      });
+
+      (<Control>this.partiesForm.controls['name']).updateValue('');
+      (<Control>this.partiesForm.controls['description']).updateValue('');
+      (<Control>this.partiesForm.controls['location']).updateValue('');
+    }
+  }
 }
\ No newline at end of file
-- 
2.6.4


From d5e8883149516e7d2ce2a6d38f772369ef426aaf Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Mon, 25 Jan 2016 16:20:12 +0200
Subject: [PATCH 034/173] Step 4.10: add a remove party button and click event
 handler

---
 client/app.html | 1 +
 1 file changed, 1 insertion(+)

diff --git a/client/app.html b/client/app.html
index 20a633e..2396bfb 100644
--- a/client/app.html
+++ b/client/app.html
@@ -5,6 +5,7 @@
       {{party.name}}
       <p>{{party.description}}</p>
       <p>{{party.location}}</p>
+      <button (click)="removeParty(party)">X</button>
     </li>
   </ul>
 </div>
\ No newline at end of file
-- 
2.6.4


From d18de7e325d4f196b1f753076cb34aac06580193 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Mon, 25 Jan 2016 16:21:03 +0200
Subject: [PATCH 035/173] Step 4.11: add removeParty method inside the
 component

---
 client/app.ts | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/client/app.ts b/client/app.ts
index e4c5ec5..3095658 100644
--- a/client/app.ts
+++ b/client/app.ts
@@ -16,6 +16,10 @@ class Socially {
   constructor () {
     this.parties = Parties.find();
   }
+
+  removeParty(party) {
+    Parties.remove(party._id);
+  }
 }
 
 bootstrap(Socially);
\ No newline at end of file
-- 
2.6.4


From c15e1853b4d5204f1da340574c7486c31fe9d8a6 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Mon, 25 Jan 2016 16:22:13 +0200
Subject: [PATCH 036/173] Step 5.1: import routing components and add them to
 the app

---
 client/app.ts | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/client/app.ts b/client/app.ts
index 3095658..5be6a06 100644
--- a/client/app.ts
+++ b/client/app.ts
@@ -4,11 +4,12 @@ import {Component, NgZone} from 'angular2/core';
 import {bootstrap} from 'angular2-meteor-auto-bootstrap';
 import {Parties} from '../collections/parties.ts';
 import {PartiesForm} from './imports/parties-form/parties-form.ts';
+import {ROUTER_PROVIDERS, ROUTER_DIRECTIVES, RouteConfig} from 'angular2/router';
 
 @Component({
   selector: 'app',
   templateUrl: 'client/app.html',
-  directives: [PartiesForm]
+  directives: [PartiesForm, ROUTER_DIRECTIVES]
 })
 class Socially {
   parties: Mongo.Cursor<Object>;
@@ -22,4 +23,4 @@ class Socially {
   }
 }
 
-bootstrap(Socially);
\ No newline at end of file
+bootstrap(Socially, [ROUTER_PROVIDERS]);
\ No newline at end of file
-- 
2.6.4


From 6c76a28fe2e50a0f855dd2f5a8ee28bce460b6a0 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Mon, 25 Jan 2016 16:25:41 +0200
Subject: [PATCH 037/173] Step 5.2: create PartiesList component

---
 client/imports/parties-list/parties-list.ts | 21 +++++++++++++++++++++
 1 file changed, 21 insertions(+)
 create mode 100644 client/imports/parties-list/parties-list.ts

diff --git a/client/imports/parties-list/parties-list.ts b/client/imports/parties-list/parties-list.ts
new file mode 100644
index 0000000..76b6aad
--- /dev/null
+++ b/client/imports/parties-list/parties-list.ts
@@ -0,0 +1,21 @@
+import 'reflect-metadata';
+import {Component} from 'angular2/core';
+import {Parties} from '../../../collections/parties.ts';
+import {PartiesForm} from '../parties-form/parties-form.ts';
+
+@Component({
+  selector: 'parties-list',
+  templateUrl: '/client/imports/parties-list/parties-list.html',
+  directives: [PartiesForm]
+})
+export class PartiesList {
+  parties: Mongo.Cursor<Object>;
+
+  constructor() {
+    this.parties = Parties.find();
+  }
+
+  removeParty(party) {
+    Parties.remove(party._id);
+  }
+}
\ No newline at end of file
-- 
2.6.4


From 2679b3a12b4362fc861cc03c8f3ecc94f8cce94e Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Mon, 25 Jan 2016 16:25:51 +0200
Subject: [PATCH 038/173] Step 5.3: create PartiesList component view

---
 client/imports/parties-list/parties-list.html | 11 +++++++++++
 1 file changed, 11 insertions(+)
 create mode 100644 client/imports/parties-list/parties-list.html

diff --git a/client/imports/parties-list/parties-list.html b/client/imports/parties-list/parties-list.html
new file mode 100644
index 0000000..2396bfb
--- /dev/null
+++ b/client/imports/parties-list/parties-list.html
@@ -0,0 +1,11 @@
+<div>
+  <parties-form></parties-form>
+  <ul>
+    <li *ngFor="#party of parties">
+      {{party.name}}
+      <p>{{party.description}}</p>
+      <p>{{party.location}}</p>
+      <button (click)="removeParty(party)">X</button>
+    </li>
+  </ul>
+</div>
\ No newline at end of file
-- 
2.6.4


From 719300a0b23d4a1d01154f816c9409dcdb890aa9 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Mon, 25 Jan 2016 16:26:07 +0200
Subject: [PATCH 039/173] Step 5.4: Clean up app.ts file

---
 client/app.ts | 20 ++++----------------
 1 file changed, 4 insertions(+), 16 deletions(-)

diff --git a/client/app.ts b/client/app.ts
index 5be6a06..692678b 100644
--- a/client/app.ts
+++ b/client/app.ts
@@ -1,26 +1,14 @@
 import 'reflect-metadata';
 import 'zone.js/dist/zone';
-import {Component, NgZone} from 'angular2/core';
+import {Component} from 'angular2/core';
 import {bootstrap} from 'angular2-meteor-auto-bootstrap';
-import {Parties} from '../collections/parties.ts';
-import {PartiesForm} from './imports/parties-form/parties-form.ts';
 import {ROUTER_PROVIDERS, ROUTER_DIRECTIVES, RouteConfig} from 'angular2/router';
 
 @Component({
   selector: 'app',
   templateUrl: 'client/app.html',
-  directives: [PartiesForm, ROUTER_DIRECTIVES]
+  directives: [ROUTER_DIRECTIVES]
 })
-class Socially {
-  parties: Mongo.Cursor<Object>;
+class Socially {}
 
-  constructor () {
-    this.parties = Parties.find();
-  }
-
-  removeParty(party) {
-    Parties.remove(party._id);
-  }
-}
-
-bootstrap(Socially, [ROUTER_PROVIDERS]);
\ No newline at end of file
+bootstrap(Socially, [ROUTER_PROVIDERS]);
-- 
2.6.4


From 07d7edb7f565dae2bc2151006b96899d730d273f Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Mon, 25 Jan 2016 16:26:15 +0200
Subject: [PATCH 040/173] Step 5.5: Remove app.html file

---
 client/app.html | 11 -----------
 1 file changed, 11 deletions(-)
 delete mode 100644 client/app.html

diff --git a/client/app.html b/client/app.html
deleted file mode 100644
index 2396bfb..0000000
--- a/client/app.html
+++ /dev/null
@@ -1,11 +0,0 @@
-<div>
-  <parties-form></parties-form>
-  <ul>
-    <li *ngFor="#party of parties">
-      {{party.name}}
-      <p>{{party.description}}</p>
-      <p>{{party.location}}</p>
-      <button (click)="removeParty(party)">X</button>
-    </li>
-  </ul>
-</div>
\ No newline at end of file
-- 
2.6.4


From 41733049f8f152ac947cfb9fe49cc050d118d5fa Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Mon, 25 Jan 2016 16:27:03 +0200
Subject: [PATCH 041/173] Step 5.6: add PartyDetails component

---
 client/imports/party-details/party-details.ts | 7 +++++++
 1 file changed, 7 insertions(+)
 create mode 100644 client/imports/party-details/party-details.ts

diff --git a/client/imports/party-details/party-details.ts b/client/imports/party-details/party-details.ts
new file mode 100644
index 0000000..47ee440
--- /dev/null
+++ b/client/imports/party-details/party-details.ts
@@ -0,0 +1,7 @@
+import {Component} from 'angular2/core';
+
+@Component({
+  selector: 'party-details',
+  templateUrl: '/client/imports/party-details/party-details.html'
+})
+export class PartyDetails {}
\ No newline at end of file
-- 
2.6.4


From fdf6b35bc7cc865a54a4cddd55a217c165cf4c8d Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Mon, 25 Jan 2016 16:27:47 +0200
Subject: [PATCH 042/173] Step 5.7: add PartyDetails template

---
 client/imports/party-details/party-details.html | 5 +++++
 1 file changed, 5 insertions(+)
 create mode 100644 client/imports/party-details/party-details.html

diff --git a/client/imports/party-details/party-details.html b/client/imports/party-details/party-details.html
new file mode 100644
index 0000000..a3da9f4
--- /dev/null
+++ b/client/imports/party-details/party-details.html
@@ -0,0 +1,5 @@
+<header>
+  <h2>PARTY_NAME</h2>
+
+  <p>PARTY_DESCRIPTION</p>
+</header>
\ No newline at end of file
-- 
2.6.4


From bb8adf9a0cccc78f39b39932c0f0991810cb9f4e Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Mon, 25 Jan 2016 17:32:05 +0200
Subject: [PATCH 043/173] Step 5.8: configure routes

---
 client/app.ts | 12 +++++++++---
 1 file changed, 9 insertions(+), 3 deletions(-)

diff --git a/client/app.ts b/client/app.ts
index 692678b..d1eb26e 100644
--- a/client/app.ts
+++ b/client/app.ts
@@ -1,14 +1,20 @@
 import 'reflect-metadata';
 import 'zone.js/dist/zone';
-import {Component} from 'angular2/core';
+import {Component, provide} from 'angular2/core';
 import {bootstrap} from 'angular2-meteor-auto-bootstrap';
-import {ROUTER_PROVIDERS, ROUTER_DIRECTIVES, RouteConfig} from 'angular2/router';
+import {ROUTER_PROVIDERS, ROUTER_DIRECTIVES, RouteConfig, APP_BASE_HREF} from 'angular2/router';
+import {PartiesList} from './imports/parties-list/parties-list.ts';
+import {PartyDetails} from './imports/party-details/party-details.ts';
 
 @Component({
   selector: 'app',
   templateUrl: 'client/app.html',
   directives: [ROUTER_DIRECTIVES]
 })
+@RouteConfig([
+  { path: '/', as: 'PartiesList', component: PartiesList },
+  { path: '/party/:partyId', as: 'PartyDetails', component: PartyDetails }
+])
 class Socially {}
 
-bootstrap(Socially, [ROUTER_PROVIDERS]);
+bootstrap(Socially, [ROUTER_PROVIDERS, provide(APP_BASE_HREF, { useValue: '/' })]);
\ No newline at end of file
-- 
2.6.4


From 32fc819d31bcfb91a886417cf246838eebe17bd0 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Mon, 25 Jan 2016 17:32:27 +0200
Subject: [PATCH 044/173] Step 5.9: Add app.html that uses router

---
 client/app.html | 1 +
 1 file changed, 1 insertion(+)
 create mode 100644 client/app.html

diff --git a/client/app.html b/client/app.html
new file mode 100644
index 0000000..90c6b64
--- /dev/null
+++ b/client/app.html
@@ -0,0 +1 @@
+<router-outlet></router-outlet>
\ No newline at end of file
-- 
2.6.4


From 399f733e033931b949756dea2a3f059917f899cb Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Mon, 25 Jan 2016 17:34:22 +0200
Subject: [PATCH 045/173] Step 5.10: import RouterLink directive

---
 client/imports/parties-list/parties-list.ts | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/client/imports/parties-list/parties-list.ts b/client/imports/parties-list/parties-list.ts
index 76b6aad..6ef2a92 100644
--- a/client/imports/parties-list/parties-list.ts
+++ b/client/imports/parties-list/parties-list.ts
@@ -2,11 +2,12 @@ import 'reflect-metadata';
 import {Component} from 'angular2/core';
 import {Parties} from '../../../collections/parties.ts';
 import {PartiesForm} from '../parties-form/parties-form.ts';
+import {RouterLink} from 'angular2/router';
 
 @Component({
   selector: 'parties-list',
   templateUrl: '/client/imports/parties-list/parties-list.html',
-  directives: [PartiesForm]
+  directives: [PartiesForm, RouterLink]
 })
 export class PartiesList {
   parties: Mongo.Cursor<Object>;
-- 
2.6.4


From af79355cbf731e7614e7d1665309327b7462cdb8 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Mon, 25 Jan 2016 17:34:59 +0200
Subject: [PATCH 046/173] Step 5.11: add links to the parties list

---
 client/imports/parties-list/parties-list.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/imports/parties-list/parties-list.html b/client/imports/parties-list/parties-list.html
index 2396bfb..05353e8 100644
--- a/client/imports/parties-list/parties-list.html
+++ b/client/imports/parties-list/parties-list.html
@@ -2,7 +2,7 @@
   <parties-form></parties-form>
   <ul>
     <li *ngFor="#party of parties">
-      {{party.name}}
+      <a [routerLink]="['/PartyDetails', {partyId: party._id}]">{{party.name}}</a>
       <p>{{party.description}}</p>
       <p>{{party.location}}</p>
       <button (click)="removeParty(party)">X</button>
-- 
2.6.4


From fdeaed51b1e78a7c677b56127bc374f1f2644d02 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Mon, 25 Jan 2016 17:35:58 +0200
Subject: [PATCH 047/173] Step 5.12: inject route parameters

---
 client/imports/party-details/party-details.ts | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

diff --git a/client/imports/party-details/party-details.ts b/client/imports/party-details/party-details.ts
index 47ee440..4bbd3e0 100644
--- a/client/imports/party-details/party-details.ts
+++ b/client/imports/party-details/party-details.ts
@@ -1,7 +1,12 @@
 import {Component} from 'angular2/core';
+import {RouteParams} from 'angular2/router';
 
 @Component({
   selector: 'party-details',
   templateUrl: '/client/imports/party-details/party-details.html'
 })
-export class PartyDetails {}
\ No newline at end of file
+export class PartyDetails {
+  constructor(params: RouteParams) {
+    var partyId = params.get('partyId');
+  }
+}
\ No newline at end of file
-- 
2.6.4


From 98d19a569d58493a36db180c8079f7e3824bbef5 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Mon, 25 Jan 2016 17:36:57 +0200
Subject: [PATCH 048/173] Step 5.13: load party details

---
 client/imports/party-details/party-details.ts | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/client/imports/party-details/party-details.ts b/client/imports/party-details/party-details.ts
index 4bbd3e0..d56ec8b 100644
--- a/client/imports/party-details/party-details.ts
+++ b/client/imports/party-details/party-details.ts
@@ -1,12 +1,16 @@
 import {Component} from 'angular2/core';
 import {RouteParams} from 'angular2/router';
+import {Parties} from '../../../collections/parties.ts';
 
 @Component({
   selector: 'party-details',
   templateUrl: '/client/imports/party-details/party-details.html'
 })
 export class PartyDetails {
+  party: Object;
+
   constructor(params: RouteParams) {
     var partyId = params.get('partyId');
+    this.party = Parties.findOne(partyId);
   }
 }
\ No newline at end of file
-- 
2.6.4


From cc8fa530ca240e54504df57ea88f097291a3b909 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Mon, 25 Jan 2016 17:37:32 +0200
Subject: [PATCH 049/173] Step 5.14: Add the party details to the view

---
 client/imports/party-details/party-details.html | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/client/imports/party-details/party-details.html b/client/imports/party-details/party-details.html
index a3da9f4..1793e75 100644
--- a/client/imports/party-details/party-details.html
+++ b/client/imports/party-details/party-details.html
@@ -1,5 +1,7 @@
 <header>
-  <h2>PARTY_NAME</h2>
+  <h2>{{party.name}}</h2>
 
-  <p>PARTY_DESCRIPTION</p>
+  <p>{{party.description}}</p>
+
+  <p>{{party.location}}</p>
 </header>
\ No newline at end of file
-- 
2.6.4


From 4ffa9c393b1f00ba8fe26162b150cc60aea4bd4e Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Mon, 25 Jan 2016 17:38:47 +0200
Subject: [PATCH 050/173] Step 6.1: Add router-link dependency

---
 client/imports/party-details/party-details.ts | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/client/imports/party-details/party-details.ts b/client/imports/party-details/party-details.ts
index d56ec8b..536f2b8 100644
--- a/client/imports/party-details/party-details.ts
+++ b/client/imports/party-details/party-details.ts
@@ -1,10 +1,12 @@
 import {Component} from 'angular2/core';
 import {RouteParams} from 'angular2/router';
 import {Parties} from '../../../collections/parties.ts';
+import {RouterLink} from 'angular2/router';
 
 @Component({
   selector: 'party-details',
-  templateUrl: '/client/imports/party-details/party-details.html'
+  templateUrl: '/client/imports/party-details/party-details.html',
+  directives: [RouterLink]
 })
 export class PartyDetails {
   party: Object;
-- 
2.6.4


From aeb7306d777904bb95f27859991249d4953f9898 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Mon, 25 Jan 2016 17:39:16 +0200
Subject: [PATCH 051/173] Step 6.2: add party details form

---
 client/imports/party-details/party-details.html | 16 +++++++++++-----
 1 file changed, 11 insertions(+), 5 deletions(-)

diff --git a/client/imports/party-details/party-details.html b/client/imports/party-details/party-details.html
index 1793e75..bf3be58 100644
--- a/client/imports/party-details/party-details.html
+++ b/client/imports/party-details/party-details.html
@@ -1,7 +1,13 @@
-<header>
-  <h2>{{party.name}}</h2>
+<form>
+  <label>Name</label>
+  <input type="text">
 
-  <p>{{party.description}}</p>
+  <label>Description</label>
+  <input type="text">
 
-  <p>{{party.location}}</p>
-</header>
\ No newline at end of file
+  <label>Location</label>
+  <input type="text">
+
+  <button type="submit">Save</button>
+  <button [routerLink]="['/PartiesList']">Cancel</button>
+</form>
\ No newline at end of file
-- 
2.6.4


From 35ffa9ef3db44e216a7eafb7d72ad086b71c2d35 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Mon, 25 Jan 2016 17:39:45 +0200
Subject: [PATCH 052/173] Step 6.3: bind party to form inputs

---
 client/imports/party-details/party-details.html | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/client/imports/party-details/party-details.html b/client/imports/party-details/party-details.html
index bf3be58..7521f02 100644
--- a/client/imports/party-details/party-details.html
+++ b/client/imports/party-details/party-details.html
@@ -1,12 +1,12 @@
-<form>
+<form (submit)="saveParty(party)">
   <label>Name</label>
-  <input type="text">
+  <input type="text" [(ngModel)]="party.name">
 
   <label>Description</label>
-  <input type="text">
+  <input type="text" [(ngModel)]="party.description">
 
   <label>Location</label>
-  <input type="text">
+  <input type="text" [(ngModel)]="party.location">
 
   <button type="submit">Save</button>
   <button [routerLink]="['/PartiesList']">Cancel</button>
-- 
2.6.4


From 8f29c52eda96b457fa1fec11e6eb0f8ead22b6eb Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Mon, 25 Jan 2016 17:44:44 +0200
Subject: [PATCH 053/173] Step 6.4: add submit event handler

---
 client/imports/party-details/party-details.ts | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/client/imports/party-details/party-details.ts b/client/imports/party-details/party-details.ts
index 536f2b8..0d86972 100644
--- a/client/imports/party-details/party-details.ts
+++ b/client/imports/party-details/party-details.ts
@@ -15,4 +15,14 @@ export class PartyDetails {
     var partyId = params.get('partyId');
     this.party = Parties.findOne(partyId);
   }
+
+  saveParty(party) {
+    Parties.update(party._id, {
+      $set: {
+        name: party.name,
+        description: party.description,
+        location: party.location
+      }
+    });
+  }
 }
\ No newline at end of file
-- 
2.6.4


From f90c4db3e8641e3aac39ab8b1148ebf5040b39c3 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Mon, 25 Jan 2016 17:45:42 +0200
Subject: [PATCH 054/173] Step 7.1: declare Party type

---
 typings/party.d.ts | 6 ++++++
 1 file changed, 6 insertions(+)
 create mode 100644 typings/party.d.ts

diff --git a/typings/party.d.ts b/typings/party.d.ts
new file mode 100644
index 0000000..82919d0
--- /dev/null
+++ b/typings/party.d.ts
@@ -0,0 +1,6 @@
+interface Party {
+  _id?: string;
+  name: string;
+  description?: string;
+  location: string;
+}
\ No newline at end of file
-- 
2.6.4


From f5c7f7aab787de684ac046da65f30f7c3e7b16c9 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Mon, 25 Jan 2016 17:46:13 +0200
Subject: [PATCH 055/173] Step 7.2: add party declaration file to the tsconfig

---
 tsconfig.json | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/tsconfig.json b/tsconfig.json
index 38ad8aa..a643c08 100644
--- a/tsconfig.json
+++ b/tsconfig.json
@@ -9,5 +9,8 @@
     "removeComments": false,
     "noImplicitAny": false,
     "sourceMap": true
-  }
+  },
+  "files": [
+    "typings/party.d.ts"
+  ]
 }
\ No newline at end of file
-- 
2.6.4


From 4e8b889c60f3ffc5149707950f08c1fc80742b0a Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Mon, 25 Jan 2016 17:46:41 +0200
Subject: [PATCH 056/173] Step 7.3: define parties collection with Party type

---
 collections/parties.ts | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/collections/parties.ts b/collections/parties.ts
index 36f4df9..6ea4ac0 100644
--- a/collections/parties.ts
+++ b/collections/parties.ts
@@ -1 +1 @@
-export var Parties = new Mongo.Collection('parties');
\ No newline at end of file
+export var Parties = new Mongo.Collection<Party>('parties');
\ No newline at end of file
-- 
2.6.4


From b700883fb9365768e8c81c5e85b7390a0148604c Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Mon, 25 Jan 2016 17:47:11 +0200
Subject: [PATCH 057/173] Step 7.4: correct parties cursor to be of the exact
 type

---
 client/imports/parties-list/parties-list.ts | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/imports/parties-list/parties-list.ts b/client/imports/parties-list/parties-list.ts
index 6ef2a92..2294f2f 100644
--- a/client/imports/parties-list/parties-list.ts
+++ b/client/imports/parties-list/parties-list.ts
@@ -10,7 +10,7 @@ import {RouterLink} from 'angular2/router';
   directives: [PartiesForm, RouterLink]
 })
 export class PartiesList {
-  parties: Mongo.Cursor<Object>;
+  parties: Mongo.Cursor<Party>;
 
   constructor() {
     this.parties = Parties.find();
-- 
2.6.4


From 92ee58a993c29f06423809508419947afea3c15d Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Mon, 25 Jan 2016 17:47:32 +0200
Subject: [PATCH 058/173] Step 7.5: correct party property to be of Party type

---
 client/imports/party-details/party-details.ts | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/imports/party-details/party-details.ts b/client/imports/party-details/party-details.ts
index 0d86972..07b4733 100644
--- a/client/imports/party-details/party-details.ts
+++ b/client/imports/party-details/party-details.ts
@@ -9,7 +9,7 @@ import {RouterLink} from 'angular2/router';
   directives: [RouterLink]
 })
 export class PartyDetails {
-  party: Object;
+  party: Party;
 
   constructor(params: RouteParams) {
     var partyId = params.get('partyId');
-- 
2.6.4


From 7845201c4f52c50bb4123d66e596c73301597681 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Thu, 28 Jan 2016 23:05:00 +0200
Subject: [PATCH 059/173] Step 8.0: Added Meteor's accounts package

---
 .meteor/packages |  2 +-
 .meteor/versions | 11 ++++++++++-
 2 files changed, 11 insertions(+), 2 deletions(-)

diff --git a/.meteor/packages b/.meteor/packages
index 2f0a5f9..49cdfac 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -16,5 +16,5 @@ es5-shim                # ECMAScript 5 compatibility for older browsers.
 ecmascript              # Enable ECMAScript2015+ syntax in app code
 
 autopublish             # Publish all data to the clients (for prototyping)
-insecure                # Allow all DB writes from clients (for prototyping)
 angular2-compilers
+accounts-password
diff --git a/.meteor/versions b/.meteor/versions
index e90c45a..9247b86 100644
--- a/.meteor/versions
+++ b/.meteor/versions
@@ -1,3 +1,5 @@
+accounts-base@1.2.4
+accounts-password@1.1.6
 allow-deny@1.0.2
 angular2-compilers@0.5.4
 angular2-html-templates@0.5.0
@@ -20,12 +22,14 @@ check@1.1.2
 ddp@1.2.3
 ddp-client@1.2.3
 ddp-common@1.2.3
+ddp-rate-limiter@1.0.2
 ddp-server@1.2.4
 deps@1.0.10
 diff-sequence@1.0.3
 ecmascript@0.4.1
 ecmascript-runtime@0.2.8
 ejson@1.0.9
+email@1.0.10
 es5-shim@4.5.8
 fastclick@1.0.9
 geojson-utils@1.0.6
@@ -34,10 +38,10 @@ html-tools@1.0.7
 htmljs@1.0.7
 http@1.1.3
 id-map@1.0.5
-insecure@1.0.5
 jquery@1.11.6
 launch-screen@1.0.8
 livedata@1.0.16
+localstorage@1.0.7
 logging@1.0.10
 meteor@1.1.12
 meteor-base@1.0.2
@@ -50,19 +54,24 @@ modules@0.5.1
 modules-runtime@0.6.1
 mongo@1.1.5
 mongo-id@1.0.2
+npm-bcrypt@0.7.8_2
 npm-mongo@1.4.41
 observe-sequence@1.0.9
 ordered-dict@1.0.5
 promise@0.6.5
 random@1.0.7
+rate-limit@1.0.2
 reactive-dict@1.1.5
 reactive-var@1.0.7
 reload@1.1.6
 retry@1.0.5
 routepolicy@1.0.8
+service-configuration@1.0.7
 session@1.1.3
+sha@1.0.5
 spacebars@1.0.9
 spacebars-compiler@1.0.9
+srp@1.0.6
 standard-minifier-css@1.0.4
 standard-minifier-js@1.0.4
 standard-minifiers@1.0.4
-- 
2.6.4


From 78738c3f09d409d0bb653b22343115acb7b43ea5 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Thu, 28 Jan 2016 23:13:43 +0200
Subject: [PATCH 060/173] Step 8.1: Add accounts ui package from NPM

---
 package.json | 1 +
 1 file changed, 1 insertion(+)

diff --git a/package.json b/package.json
index d1d3c4b..6e5f35a 100644
--- a/package.json
+++ b/package.json
@@ -15,6 +15,7 @@
   "dependencies": {
     "angular2": "2.0.0-beta.12",
     "angular2-meteor": "0.5.2",
+    "angular2-meteor-accounts-ui": "git+https://github.com/Urigo/angular2-meteor-accounts-ui.git",
     "angular2-meteor-auto-bootstrap": "git://github.com/Urigo/angular2-meteor-auto-bootstrap.git#master",
     "meteor-node-stubs": "^0.2.1"
   }
-- 
2.6.4


From ac8e79174e239091c8f18785a49ff07aafe4b167 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Thu, 28 Jan 2016 23:14:09 +0200
Subject: [PATCH 061/173] Step 8.2: add Accounts UI component to the
 PartiesList template

---
 client/imports/parties-list/parties-list.html | 1 +
 1 file changed, 1 insertion(+)

diff --git a/client/imports/parties-list/parties-list.html b/client/imports/parties-list/parties-list.html
index 05353e8..c694372 100644
--- a/client/imports/parties-list/parties-list.html
+++ b/client/imports/parties-list/parties-list.html
@@ -1,5 +1,6 @@
 <div>
   <parties-form></parties-form>
+  <login-buttons></login-buttons>
   <ul>
     <li *ngFor="#party of parties">
       <a [routerLink]="['/PartyDetails', {partyId: party._id}]">{{party.name}}</a>
-- 
2.6.4


From 9af073f1af86478ba1127b3c34deaf6c1a1cf115 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Thu, 28 Jan 2016 23:16:21 +0200
Subject: [PATCH 062/173] Step 8.3: import dependencies

---
 client/imports/parties-list/parties-list.ts | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/client/imports/parties-list/parties-list.ts b/client/imports/parties-list/parties-list.ts
index 2294f2f..fe18fa1 100644
--- a/client/imports/parties-list/parties-list.ts
+++ b/client/imports/parties-list/parties-list.ts
@@ -3,11 +3,12 @@ import {Component} from 'angular2/core';
 import {Parties} from '../../../collections/parties.ts';
 import {PartiesForm} from '../parties-form/parties-form.ts';
 import {RouterLink} from 'angular2/router';
+import {LoginButtons} from 'angular2-meteor-accounts-ui/login-buttons';
 
 @Component({
   selector: 'parties-list',
   templateUrl: '/client/imports/parties-list/parties-list.html',
-  directives: [PartiesForm, RouterLink]
+  directives: [PartiesForm, RouterLink, LoginButtons]
 })
 export class PartiesList {
   parties: Mongo.Cursor<Party>;
-- 
2.6.4


From 26415b5377e1cb643f657047269a7304ed5cd30c Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Thu, 28 Jan 2016 23:16:57 +0200
Subject: [PATCH 063/173] Step 8.5: add parties collection security

---
 collections/parties.ts | 17 ++++++++++++++++-
 1 file changed, 16 insertions(+), 1 deletion(-)

diff --git a/collections/parties.ts b/collections/parties.ts
index 6ea4ac0..29217cc 100644
--- a/collections/parties.ts
+++ b/collections/parties.ts
@@ -1 +1,16 @@
-export var Parties = new Mongo.Collection<Party>('parties');
\ No newline at end of file
+export var Parties = new Mongo.Collection<Party>('parties');
+
+Parties.allow({
+  insert: function() {
+    var user = Meteor.user();
+    return !!user;
+  },
+  update: function() {
+    var user = Meteor.user();
+    return !!user;
+  },
+  remove: function() {
+    var user = Meteor.user();
+    return !!user;
+  }
+});
\ No newline at end of file
-- 
2.6.4


From c7813832d4fe90abac934118542af4cb98788b50 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Thu, 28 Jan 2016 23:17:48 +0200
Subject: [PATCH 064/173] Step 8.6: check access and add party owner ID

---
 client/imports/parties-form/parties-form.ts | 21 +++++++++++++--------
 1 file changed, 13 insertions(+), 8 deletions(-)

diff --git a/client/imports/parties-form/parties-form.ts b/client/imports/parties-form/parties-form.ts
index 73fd496..b10615e 100644
--- a/client/imports/parties-form/parties-form.ts
+++ b/client/imports/parties-form/parties-form.ts
@@ -22,15 +22,20 @@ export class PartiesForm {
 
   addParty(party) {
     if (this.partiesForm.valid) {
-      Parties.insert({
-        name: party.name,
-        description: party.description,
-        location: party.location
-      });
+      if (Meteor.userId()) {
+        Parties.insert({
+          name: party.name,
+          description: party.description,
+          location: party.location,
+          owner: Meteor.userId()
+        });
 
-      (<Control>this.partiesForm.controls['name']).updateValue('');
-      (<Control>this.partiesForm.controls['description']).updateValue('');
-      (<Control>this.partiesForm.controls['location']).updateValue('');
+        (<Control>this.partiesForm.controls['name']).updateValue('');
+        (<Control>this.partiesForm.controls['description']).updateValue('');
+        (<Control>this.partiesForm.controls['location']).updateValue('');
+      } else {
+        alert('Please log in to add a party');
+      }
     }
   }
 }
\ No newline at end of file
-- 
2.6.4


From 4d95269c3b63f4497ee7784fa93c9b0ab597e3b3 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Thu, 28 Jan 2016 23:18:25 +0200
Subject: [PATCH 065/173] Step 8.7: check access to change party

---
 client/imports/party-details/party-details.ts | 18 +++++++++++-------
 1 file changed, 11 insertions(+), 7 deletions(-)

diff --git a/client/imports/party-details/party-details.ts b/client/imports/party-details/party-details.ts
index 07b4733..510cc0e 100644
--- a/client/imports/party-details/party-details.ts
+++ b/client/imports/party-details/party-details.ts
@@ -17,12 +17,16 @@ export class PartyDetails {
   }
 
   saveParty(party) {
-    Parties.update(party._id, {
-      $set: {
-        name: party.name,
-        description: party.description,
-        location: party.location
-      }
-    });
+    if (Meteor.userId()) {
+      Parties.update(party._id, {
+        $set: {
+          name: party.name,
+          description: party.description,
+          location: party.location
+        }
+      });
+    } else {
+      alert('Please log in to change this party');
+    }
   }
 }
\ No newline at end of file
-- 
2.6.4


From 81c97d2dd23bf7a4eca6fbfbf905a6c58191551c Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Thu, 28 Jan 2016 23:19:43 +0200
Subject: [PATCH 066/173] Step 8.8: Corrects Party interface in the party.d.ts
 definition file

---
 .meteor/packages   | 1 -
 .meteor/versions   | 1 -
 typings/party.d.ts | 1 +
 3 files changed, 1 insertion(+), 2 deletions(-)

diff --git a/.meteor/packages b/.meteor/packages
index 49cdfac..65b661a 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -15,6 +15,5 @@ standard-minifiers      # JS/CSS minifiers run for production mode
 es5-shim                # ECMAScript 5 compatibility for older browsers.
 ecmascript              # Enable ECMAScript2015+ syntax in app code
 
-autopublish             # Publish all data to the clients (for prototyping)
 angular2-compilers
 accounts-password
diff --git a/.meteor/versions b/.meteor/versions
index 9247b86..b0d445c 100644
--- a/.meteor/versions
+++ b/.meteor/versions
@@ -3,7 +3,6 @@ accounts-password@1.1.6
 allow-deny@1.0.2
 angular2-compilers@0.5.4
 angular2-html-templates@0.5.0
-autopublish@1.0.5
 autoupdate@1.2.6
 babel-compiler@6.5.2
 babel-runtime@0.1.6
diff --git a/typings/party.d.ts b/typings/party.d.ts
index 82919d0..a503ec1 100644
--- a/typings/party.d.ts
+++ b/typings/party.d.ts
@@ -3,4 +3,5 @@ interface Party {
   name: string;
   description?: string;
   location: string;
+  owner?: string;
 }
\ No newline at end of file
-- 
2.6.4


From 0ecf72163e2e27554b53e49facf6d9ebc4234567 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Thu, 4 Feb 2016 00:05:06 +0200
Subject: [PATCH 067/173] Step 8.9: require user to access PartyDetails

---
 client/imports/party-details/party-details.ts | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/client/imports/party-details/party-details.ts b/client/imports/party-details/party-details.ts
index 510cc0e..1355276 100644
--- a/client/imports/party-details/party-details.ts
+++ b/client/imports/party-details/party-details.ts
@@ -2,12 +2,14 @@ import {Component} from 'angular2/core';
 import {RouteParams} from 'angular2/router';
 import {Parties} from '../../../collections/parties.ts';
 import {RouterLink} from 'angular2/router';
+import {RequireUser} from 'angular2-meteor-accounts-ui';
 
 @Component({
   selector: 'party-details',
   templateUrl: '/client/imports/party-details/party-details.html',
   directives: [RouterLink]
 })
+@RequireUser()
 export class PartyDetails {
   party: Party;
 
-- 
2.6.4


From 5a97bb70fafe5a3593c87411843baf9f9dd3dd74 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Thu, 28 Jan 2016 23:22:04 +0200
Subject: [PATCH 068/173] Step 9.1: publish parties collection

---
 server/parties.ts | 5 +++++
 1 file changed, 5 insertions(+)
 create mode 100644 server/parties.ts

diff --git a/server/parties.ts b/server/parties.ts
new file mode 100644
index 0000000..a96b003
--- /dev/null
+++ b/server/parties.ts
@@ -0,0 +1,5 @@
+import {Parties} from '../collections/parties.ts';
+
+Meteor.publish('parties', function() {
+  return Parties.find();
+});
\ No newline at end of file
-- 
2.6.4


From dd7b32f03fba3ce26f0d59478044b465e48831fa Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Thu, 28 Jan 2016 23:22:36 +0200
Subject: [PATCH 069/173] Step 9.2: import parties publications on the server

---
 server/main.ts | 1 +
 1 file changed, 1 insertion(+)

diff --git a/server/main.ts b/server/main.ts
index bd0542e..13c1cec 100644
--- a/server/main.ts
+++ b/server/main.ts
@@ -1,3 +1,4 @@
 import {loadParties} from './load-parties.ts';
+import './parties.ts';
 
 Meteor.startup(loadParties);
\ No newline at end of file
-- 
2.6.4


From d25724eb5b0cf5279b5ccdd5a176b5ff2b952e9f Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Thu, 28 Jan 2016 23:24:12 +0200
Subject: [PATCH 070/173] Step 9.3: extend PartiesList and make use of
 subscribe method

---
 client/imports/parties-list/parties-list.ts | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

diff --git a/client/imports/parties-list/parties-list.ts b/client/imports/parties-list/parties-list.ts
index fe18fa1..9bc25c2 100644
--- a/client/imports/parties-list/parties-list.ts
+++ b/client/imports/parties-list/parties-list.ts
@@ -4,17 +4,21 @@ import {Parties} from '../../../collections/parties.ts';
 import {PartiesForm} from '../parties-form/parties-form.ts';
 import {RouterLink} from 'angular2/router';
 import {LoginButtons} from 'angular2-meteor-accounts-ui/login-buttons';
+import {MeteorComponent} from 'angular2-meteor/meteor_component';
 
 @Component({
   selector: 'parties-list',
   templateUrl: '/client/imports/parties-list/parties-list.html',
   directives: [PartiesForm, RouterLink, LoginButtons]
 })
-export class PartiesList {
+export class PartiesList extends MeteorComponent{
   parties: Mongo.Cursor<Party>;
 
   constructor() {
-    this.parties = Parties.find();
+    super();
+    this.subscribe('parties', () => {
+      this.parties = Parties.find();
+    }, true);
   }
 
   removeParty(party) {
-- 
2.6.4


From d28a767801c289b258a00a99a385fdd25e79073b Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Thu, 28 Jan 2016 23:24:47 +0200
Subject: [PATCH 071/173] Step 9.4: add "Public" checkbox

---
 client/imports/parties-form/parties-form.html | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/client/imports/parties-form/parties-form.html b/client/imports/parties-form/parties-form.html
index 754b9ff..1dc86c7 100644
--- a/client/imports/parties-form/parties-form.html
+++ b/client/imports/parties-form/parties-form.html
@@ -6,4 +6,6 @@
   <label>Location</label>
   <input type="text" ngControl="location">
   <button>Add</button>
+  <label>Public</label>
+  <input type="checkbox" ngControl="public">
 </form>
\ No newline at end of file
-- 
2.6.4


From 6416698bdfbd8f12848836cb48868ec1b286ec84 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Thu, 28 Jan 2016 23:26:03 +0200
Subject: [PATCH 072/173] Step 9.5: update PartiesForm component

---
 client/imports/parties-form/parties-form.ts | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/client/imports/parties-form/parties-form.ts b/client/imports/parties-form/parties-form.ts
index b10615e..ed02ae3 100644
--- a/client/imports/parties-form/parties-form.ts
+++ b/client/imports/parties-form/parties-form.ts
@@ -16,7 +16,8 @@ export class PartiesForm {
     this.partiesForm = fb.group({
       name: ['', Validators.required],
       description: [''],
-      location: ['', Validators.required]
+      location: ['', Validators.required],
+      'public': [false]
     });
   }
 
@@ -27,12 +28,14 @@ export class PartiesForm {
           name: party.name,
           description: party.description,
           location: party.location,
+          'public': party.public,
           owner: Meteor.userId()
         });
 
         (<Control>this.partiesForm.controls['name']).updateValue('');
         (<Control>this.partiesForm.controls['description']).updateValue('');
         (<Control>this.partiesForm.controls['location']).updateValue('');
+        (<Control>this.partiesForm.controls['public']).updateValue(false);
       } else {
         alert('Please log in to add a party');
       }
-- 
2.6.4


From b6d74df77819124c8f7cd630a17f28db71f12865 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Thu, 28 Jan 2016 23:26:35 +0200
Subject: [PATCH 073/173] Step 9.6: add public field to the initial parties

---
 server/load-parties.ts | 9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

diff --git a/server/load-parties.ts b/server/load-parties.ts
index 47c3c1c..0aef531 100644
--- a/server/load-parties.ts
+++ b/server/load-parties.ts
@@ -7,17 +7,20 @@ export function loadParties() {
       {
         'name': 'Dubstep-Free Zone',
         'description': 'Can we please just for an evening not listen to dubstep.',
-        'location': 'Palo Alto'
+        'location': 'Palo Alto',
+        'public': true
       },
       {
         'name': 'All dubstep all the time',
         'description': 'Get it on!',
-        'location': 'Palo Alto'
+        'location': 'Palo Alto',
+        'public': true
       },
       {
         'name': 'Savage lounging',
         'description': 'Leisure suit required. And only fiercest manners.',
-        'location': 'San Francisco'
+        'location': 'San Francisco',
+        'public': false
       }
     ];
 
-- 
2.6.4


From af663ecebb3f8307f7293a510547092485cb6fa7 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Thu, 28 Jan 2016 23:27:18 +0200
Subject: [PATCH 074/173] Step 9.7: limit data sent to the client

---
 server/parties.ts | 12 +++++++++++-
 1 file changed, 11 insertions(+), 1 deletion(-)

diff --git a/server/parties.ts b/server/parties.ts
index a96b003..4c23ff8 100644
--- a/server/parties.ts
+++ b/server/parties.ts
@@ -1,5 +1,15 @@
 import {Parties} from '../collections/parties.ts';
 
 Meteor.publish('parties', function() {
-  return Parties.find();
+  return Parties.find({
+    $or: [
+      { 'public': true },
+      {
+        $and: [
+          { owner: this.userId },
+          { owner: { $exists: true } }
+        ]
+      }
+    ]
+  });
 });
\ No newline at end of file
-- 
2.6.4


From 90e4194d8e7ebec9266564465f47b9a872354233 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Thu, 28 Jan 2016 23:27:50 +0200
Subject: [PATCH 075/173] Step 9.8: add "party" publication

---
 server/parties.ts | 20 +++++++++++++++++---
 1 file changed, 17 insertions(+), 3 deletions(-)

diff --git a/server/parties.ts b/server/parties.ts
index 4c23ff8..99e77fb 100644
--- a/server/parties.ts
+++ b/server/parties.ts
@@ -1,7 +1,7 @@
 import {Parties} from '../collections/parties.ts';
 
-Meteor.publish('parties', function() {
-  return Parties.find({
+function buildQuery(partyId?: string): Object {
+  var isAvailable = {
     $or: [
       { 'public': true },
       {
@@ -11,5 +11,19 @@ Meteor.publish('parties', function() {
         ]
       }
     ]
-  });
+  };
+
+  if (partyId) {
+    return { $and: [{ _id: partyId }, isAvailable] };
+  }
+
+  return isAvailable;
+}
+
+Meteor.publish('parties', function() {
+  return Parties.find(buildQuery.call(this));
+});
+
+Meteor.publish('party', function(partyId: string) {
+  return Parties.find(buildQuery.call(this, partyId));
 });
\ No newline at end of file
-- 
2.6.4


From 8d7f3018154c033ba9450f252667b4092b84c3ff Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Thu, 28 Jan 2016 23:29:31 +0200
Subject: [PATCH 076/173] Step 9.9: subscribe to the "party" publication

---
 client/imports/party-details/party-details.ts | 9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)

diff --git a/client/imports/party-details/party-details.ts b/client/imports/party-details/party-details.ts
index 1355276..9f98b9c 100644
--- a/client/imports/party-details/party-details.ts
+++ b/client/imports/party-details/party-details.ts
@@ -3,6 +3,7 @@ import {RouteParams} from 'angular2/router';
 import {Parties} from '../../../collections/parties.ts';
 import {RouterLink} from 'angular2/router';
 import {RequireUser} from 'angular2-meteor-accounts-ui';
+import {MeteorComponent} from 'angular2-meteor/meteor_component';
 
 @Component({
   selector: 'party-details',
@@ -10,12 +11,16 @@ import {RequireUser} from 'angular2-meteor-accounts-ui';
   directives: [RouterLink]
 })
 @RequireUser()
-export class PartyDetails {
+export class PartyDetails extends MeteorComponent {
   party: Party;
 
   constructor(params: RouteParams) {
+    super();
     var partyId = params.get('partyId');
-    this.party = Parties.findOne(partyId);
+
+    this.subscribe('party', partyId, () => {
+      this.party = Parties.findOne(partyId);
+    }, true);
   }
 
   saveParty(party) {
-- 
2.6.4


From 841c3e36739d950a21ae3fb3c0e68d27d01ff636 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Thu, 28 Jan 2016 23:29:57 +0200
Subject: [PATCH 077/173] Step 9.10: show PartyDetails when the party is loaded

---
 client/imports/party-details/party-details.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/imports/party-details/party-details.html b/client/imports/party-details/party-details.html
index 7521f02..8775366 100644
--- a/client/imports/party-details/party-details.html
+++ b/client/imports/party-details/party-details.html
@@ -1,4 +1,4 @@
-<form (submit)="saveParty(party)">
+<form (submit)="saveParty(party)" *ngIf="party">
   <label>Name</label>
   <input type="text" [(ngModel)]="party.name">
 
-- 
2.6.4


From edacd27235ee69282689498196d3555664c6546c Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Thu, 28 Jan 2016 23:30:38 +0200
Subject: [PATCH 078/173] Step 9.11: add search inputs

---
 client/imports/parties-list/parties-list.html | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/client/imports/parties-list/parties-list.html b/client/imports/parties-list/parties-list.html
index c694372..aa53020 100644
--- a/client/imports/parties-list/parties-list.html
+++ b/client/imports/parties-list/parties-list.html
@@ -1,5 +1,7 @@
 <div>
-  <parties-form></parties-form>
+  <parties-form style="float: left"></parties-form>
+  <input type="text" #searchtext placeholder="Search by Location">
+  <button type="button" (click)="search(searchtext.value)">Search</button>
   <login-buttons></login-buttons>
   <ul>
     <li *ngFor="#party of parties">
-- 
2.6.4


From 2cda37b2022b3b84b3c9725f24ebee6ceeb0c96a Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Thu, 28 Jan 2016 23:31:13 +0200
Subject: [PATCH 079/173] Step 9.12: add search click event handler

---
 client/imports/parties-list/parties-list.ts | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/client/imports/parties-list/parties-list.ts b/client/imports/parties-list/parties-list.ts
index 9bc25c2..dde8f40 100644
--- a/client/imports/parties-list/parties-list.ts
+++ b/client/imports/parties-list/parties-list.ts
@@ -24,4 +24,12 @@ export class PartiesList extends MeteorComponent{
   removeParty(party) {
     Parties.remove(party._id);
   }
+
+  search(value: string) {
+    if (value) {
+      this.parties = Parties.find({ location: value });
+    } else {
+      this.parties = Parties.find();
+    }
+  }
 }
\ No newline at end of file
-- 
2.6.4


From 06b41e85396bb218e9830983c7a051f1fd33f236 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Thu, 28 Jan 2016 23:32:09 +0200
Subject: [PATCH 080/173] Step 12.1: add options to the parties publication

---
 server/parties.ts | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/server/parties.ts b/server/parties.ts
index 99e77fb..00a4c7c 100644
--- a/server/parties.ts
+++ b/server/parties.ts
@@ -20,8 +20,8 @@ function buildQuery(partyId?: string): Object {
   return isAvailable;
 }
 
-Meteor.publish('parties', function() {
-  return Parties.find(buildQuery.call(this));
+Meteor.publish('parties', function(options: Object) {
+  return Parties.find(buildQuery.call(this), options);
 });
 
 Meteor.publish('party', function(partyId: string) {
-- 
2.6.4


From f436acfe02d6d13af488c6dda897fce6d91b70d5 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Thu, 28 Jan 2016 23:33:12 +0200
Subject: [PATCH 081/173] Step 12.2: create options and add them to the parties
 subscription

---
 client/imports/parties-list/parties-list.ts | 12 +++++++++++-
 1 file changed, 11 insertions(+), 1 deletion(-)

diff --git a/client/imports/parties-list/parties-list.ts b/client/imports/parties-list/parties-list.ts
index dde8f40..fa09361 100644
--- a/client/imports/parties-list/parties-list.ts
+++ b/client/imports/parties-list/parties-list.ts
@@ -13,10 +13,20 @@ import {MeteorComponent} from 'angular2-meteor/meteor_component';
 })
 export class PartiesList extends MeteorComponent{
   parties: Mongo.Cursor<Party>;
+  pageSize: number = 10;
+  curPage: number = 1;
+  nameOrder: number = 1;
 
   constructor() {
     super();
-    this.subscribe('parties', () => {
+
+    let options = {
+      limit: this.pageSize,
+      skip: (this.curPage - 1) * this.pageSize,
+      sort: { name: this.nameOrder }
+    };
+
+    this.subscribe('parties', options, () => {
       this.parties = Parties.find();
     }, true);
   }
-- 
2.6.4


From 19100b3006e81b5fc02eb7f7b5cb51374b050aee Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Thu, 28 Jan 2016 23:33:40 +0200
Subject: [PATCH 082/173] Step 12.3: add sorting by party name to PartiesList

---
 client/imports/parties-list/parties-list.ts | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/imports/parties-list/parties-list.ts b/client/imports/parties-list/parties-list.ts
index fa09361..320cd38 100644
--- a/client/imports/parties-list/parties-list.ts
+++ b/client/imports/parties-list/parties-list.ts
@@ -27,7 +27,7 @@ export class PartiesList extends MeteorComponent{
     };
 
     this.subscribe('parties', options, () => {
-      this.parties = Parties.find();
+      this.parties = Parties.find({}, {sort: { name: this.nameOrder }});
     }, true);
   }
 
-- 
2.6.4


From 67f9d32bb26acbf49684e05726031b6fe0d9e5ea Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Thu, 28 Jan 2016 23:34:40 +0200
Subject: [PATCH 083/173] Step 12.4: re-subscribe on current page changes
 reactively

---
 client/imports/parties-list/parties-list.ts | 20 +++++++++++---------
 1 file changed, 11 insertions(+), 9 deletions(-)

diff --git a/client/imports/parties-list/parties-list.ts b/client/imports/parties-list/parties-list.ts
index 320cd38..e47123a 100644
--- a/client/imports/parties-list/parties-list.ts
+++ b/client/imports/parties-list/parties-list.ts
@@ -14,21 +14,23 @@ import {MeteorComponent} from 'angular2-meteor/meteor_component';
 export class PartiesList extends MeteorComponent{
   parties: Mongo.Cursor<Party>;
   pageSize: number = 10;
-  curPage: number = 1;
+  curPage: ReactiveVar<number> = new ReactiveVar<number>(1);
   nameOrder: number = 1;
 
   constructor() {
     super();
 
-    let options = {
-      limit: this.pageSize,
-      skip: (this.curPage - 1) * this.pageSize,
-      sort: { name: this.nameOrder }
-    };
+    this.autorun(() => {
+      let options = {
+        limit: this.pageSize,
+        skip: (this.curPage.get() - 1) * this.pageSize,
+        sort: { name: this.nameOrder }
+      };
 
-    this.subscribe('parties', options, () => {
-      this.parties = Parties.find({}, {sort: { name: this.nameOrder }});
-    }, true);
+      this.subscribe('parties', options, () => {
+        this.parties = Parties.find({}, { sort: { name: this.nameOrder } });
+      }, true);
+    });
   }
 
   removeParty(party) {
-- 
2.6.4


From 93cbef824f0c8683ddd4d22f63e38607f71dfc90 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Fri, 29 Jan 2016 00:16:46 +0200
Subject: [PATCH 084/173] Step 12.5: Add reactive var package

---
 .meteor/packages | 1 +
 1 file changed, 1 insertion(+)

diff --git a/.meteor/packages b/.meteor/packages
index 65b661a..1fc8361 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -17,3 +17,4 @@ ecmascript              # Enable ECMAScript2015+ syntax in app code
 
 angular2-compilers
 accounts-password
+reactive-var
-- 
2.6.4


From d0336a11e73b2b941449740d64f7079269bd6f54 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Fri, 29 Jan 2016 00:19:23 +0200
Subject: [PATCH 085/173] Step 12.6: Import reactive var from meteor

---
 client/imports/parties-list/parties-list.ts | 1 +
 1 file changed, 1 insertion(+)

diff --git a/client/imports/parties-list/parties-list.ts b/client/imports/parties-list/parties-list.ts
index e47123a..0a17c84 100644
--- a/client/imports/parties-list/parties-list.ts
+++ b/client/imports/parties-list/parties-list.ts
@@ -5,6 +5,7 @@ import {PartiesForm} from '../parties-form/parties-form.ts';
 import {RouterLink} from 'angular2/router';
 import {LoginButtons} from 'angular2-meteor-accounts-ui/login-buttons';
 import {MeteorComponent} from 'angular2-meteor/meteor_component';
+import {ReactiveVar} from 'meteor/reactive-var';
 
 @Component({
   selector: 'parties-list',
-- 
2.6.4


From f37f4a996da68c1d512a0b188afc26462919e249 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Wed, 3 Feb 2016 21:43:25 +0200
Subject: [PATCH 086/173] Step 12.7: Add dependency for the pagination package

---
 package.json | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/package.json b/package.json
index 6e5f35a..d48d5c6 100644
--- a/package.json
+++ b/package.json
@@ -16,7 +16,8 @@
     "angular2": "2.0.0-beta.12",
     "angular2-meteor": "0.5.2",
     "angular2-meteor-accounts-ui": "git+https://github.com/Urigo/angular2-meteor-accounts-ui.git",
-    "angular2-meteor-auto-bootstrap": "git://github.com/Urigo/angular2-meteor-auto-bootstrap.git#master",
+    "angular2-meteor-auto-bootstrap": "git+https://github.com/Urigo/angular2-meteor-auto-bootstrap.git",
+    "angular2-pagination": "github:urigo/angular2-pagination",
     "meteor-node-stubs": "^0.2.1"
   }
 }
-- 
2.6.4


From d983fd8dca28aed767ceb892ce924f60fdb52fbd Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Fri, 29 Jan 2016 00:23:44 +0200
Subject: [PATCH 087/173] Step 12.8: import and set up pagination components

---
 client/imports/parties-list/parties-list.ts | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/client/imports/parties-list/parties-list.ts b/client/imports/parties-list/parties-list.ts
index 0a17c84..812382a 100644
--- a/client/imports/parties-list/parties-list.ts
+++ b/client/imports/parties-list/parties-list.ts
@@ -6,11 +6,14 @@ import {RouterLink} from 'angular2/router';
 import {LoginButtons} from 'angular2-meteor-accounts-ui/login-buttons';
 import {MeteorComponent} from 'angular2-meteor/meteor_component';
 import {ReactiveVar} from 'meteor/reactive-var';
+import {PaginationService, PaginatePipe, PaginationControlsCmp} from 'angular2-pagination';
 
 @Component({
   selector: 'parties-list',
+  viewProviders: [PaginationService],
   templateUrl: '/client/imports/parties-list/parties-list.html',
-  directives: [PartiesForm, RouterLink, LoginButtons]
+  directives: [PartiesForm, RouterLink, LoginButtons, PaginationControlsCmp],
+  pipes: [PaginatePipe]
 })
 export class PartiesList extends MeteorComponent{
   parties: Mongo.Cursor<Party>;
-- 
2.6.4


From ba11831c7695e468a478f47275459bb81a017929 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Wed, 3 Feb 2016 22:00:29 +0200
Subject: [PATCH 088/173] Step 12.9: add pagination markup to the PartiesList's
 template

---
 client/imports/parties-list/parties-list.html | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/client/imports/parties-list/parties-list.html b/client/imports/parties-list/parties-list.html
index aa53020..9355f6b 100644
--- a/client/imports/parties-list/parties-list.html
+++ b/client/imports/parties-list/parties-list.html
@@ -4,11 +4,12 @@
   <button type="button" (click)="search(searchtext.value)">Search</button>
   <login-buttons></login-buttons>
   <ul>
-    <li *ngFor="#party of parties">
+    <li *ngFor="#party of parties | paginate:{currentPage: 1, itemsPerPage: pageSize, totalItems: 30}">
       <a [routerLink]="['/PartyDetails', {partyId: party._id}]">{{party.name}}</a>
       <p>{{party.description}}</p>
       <p>{{party.location}}</p>
       <button (click)="removeParty(party)">X</button>
     </li>
   </ul>
+  <pagination-controls></pagination-controls>
 </div>
\ No newline at end of file
-- 
2.6.4


From b112b6aebbf02879538fd681db7b15e2a3c240e3 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Wed, 3 Feb 2016 22:00:55 +0200
Subject: [PATCH 089/173] Step 12.10: handle page changed event of the
 pagination controls

---
 client/imports/parties-list/parties-list.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/imports/parties-list/parties-list.html b/client/imports/parties-list/parties-list.html
index 9355f6b..04ea518 100644
--- a/client/imports/parties-list/parties-list.html
+++ b/client/imports/parties-list/parties-list.html
@@ -11,5 +11,5 @@
       <button (click)="removeParty(party)">X</button>
     </li>
   </ul>
-  <pagination-controls></pagination-controls>
+  <pagination-controls (change)="onPageChanged($event.page)"></pagination-controls>
 </div>
\ No newline at end of file
-- 
2.6.4


From 3af8c53215f6662a31eff7437c23b0b9408484e9 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Wed, 3 Feb 2016 22:01:47 +0200
Subject: [PATCH 090/173] Step 12.11: add page changed event handler to the
 component

---
 client/imports/parties-list/parties-list.ts | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/client/imports/parties-list/parties-list.ts b/client/imports/parties-list/parties-list.ts
index 812382a..7e5d6a8 100644
--- a/client/imports/parties-list/parties-list.ts
+++ b/client/imports/parties-list/parties-list.ts
@@ -48,4 +48,8 @@ export class PartiesList extends MeteorComponent{
       this.parties = Parties.find();
     }
   }
+
+  onPageChanged(page: number) {
+    this.curPage.set(page);
+  }
 }
\ No newline at end of file
-- 
2.6.4


From 4326afc1220533a022cf1e4c8685e41b7b40cdfe Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Wed, 3 Feb 2016 22:02:52 +0200
Subject: [PATCH 091/173] Step 12.12: Add tmeasday:publish-counts package

---
 .meteor/packages | 1 +
 .meteor/versions | 1 +
 2 files changed, 2 insertions(+)

diff --git a/.meteor/packages b/.meteor/packages
index 1fc8361..4a4c39c 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -18,3 +18,4 @@ ecmascript              # Enable ECMAScript2015+ syntax in app code
 angular2-compilers
 accounts-password
 reactive-var
+tmeasday:publish-counts
diff --git a/.meteor/versions b/.meteor/versions
index b0d445c..12c42ee 100644
--- a/.meteor/versions
+++ b/.meteor/versions
@@ -74,6 +74,7 @@ srp@1.0.6
 standard-minifier-css@1.0.4
 standard-minifier-js@1.0.4
 standard-minifiers@1.0.4
+tmeasday:publish-counts@0.7.3
 tracker@1.0.11
 ui@1.0.9
 underscore@1.0.6
-- 
2.6.4


From d71179f579e9daf75387d0ec40482c58cfbe7511 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Wed, 3 Feb 2016 22:04:13 +0200
Subject: [PATCH 092/173] Step 12.13: publish total number of parties

---
 server/parties.ts | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/server/parties.ts b/server/parties.ts
index 00a4c7c..b1214d5 100644
--- a/server/parties.ts
+++ b/server/parties.ts
@@ -1,4 +1,5 @@
 import {Parties} from '../collections/parties.ts';
+import {Counts} from 'meteor/tmeasday:publish-counts';
 
 function buildQuery(partyId?: string): Object {
   var isAvailable = {
@@ -21,6 +22,8 @@ function buildQuery(partyId?: string): Object {
 }
 
 Meteor.publish('parties', function(options: Object) {
+  Counts.publish(this, 'numberOfParties', Parties.find(buildQuery.call(this)), { noReady: true });
+
   return Parties.find(buildQuery.call(this), options);
 });
 
-- 
2.6.4


From c304d610ebed8c1d4fafc5e0b661772a38f119f9 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Wed, 3 Feb 2016 22:06:01 +0200
Subject: [PATCH 093/173] Step 12.14: handle reactive updates of the parties
 total number

---
 client/imports/parties-list/parties-list.ts | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/client/imports/parties-list/parties-list.ts b/client/imports/parties-list/parties-list.ts
index 7e5d6a8..8ab32ed 100644
--- a/client/imports/parties-list/parties-list.ts
+++ b/client/imports/parties-list/parties-list.ts
@@ -7,6 +7,7 @@ import {LoginButtons} from 'angular2-meteor-accounts-ui/login-buttons';
 import {MeteorComponent} from 'angular2-meteor/meteor_component';
 import {ReactiveVar} from 'meteor/reactive-var';
 import {PaginationService, PaginatePipe, PaginationControlsCmp} from 'angular2-pagination';
+import {Counts} from 'meteor/tmeasday:publish-counts';
 
 @Component({
   selector: 'parties-list',
@@ -20,6 +21,7 @@ export class PartiesList extends MeteorComponent{
   pageSize: number = 10;
   curPage: ReactiveVar<number> = new ReactiveVar<number>(1);
   nameOrder: number = 1;
+  partiesSize: number = 0;
 
   constructor() {
     super();
@@ -35,6 +37,10 @@ export class PartiesList extends MeteorComponent{
         this.parties = Parties.find({}, { sort: { name: this.nameOrder } });
       }, true);
     });
+
+    this.autorun(() => {
+      this.partiesSize = Counts.get('numberOfParties');
+    }, true);
   }
 
   removeParty(party) {
-- 
2.6.4


From ce89b4f025dbce7726b27063d191b9139ab7a70a Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Wed, 3 Feb 2016 22:06:38 +0200
Subject: [PATCH 094/173] Step 12.15: add parties total number var in the
 template

---
 client/imports/parties-list/parties-list.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/imports/parties-list/parties-list.html b/client/imports/parties-list/parties-list.html
index 04ea518..006eb1e 100644
--- a/client/imports/parties-list/parties-list.html
+++ b/client/imports/parties-list/parties-list.html
@@ -4,7 +4,7 @@
   <button type="button" (click)="search(searchtext.value)">Search</button>
   <login-buttons></login-buttons>
   <ul>
-    <li *ngFor="#party of parties | paginate:{currentPage: 1, itemsPerPage: pageSize, totalItems: 30}">
+    <li *ngFor="#party of parties | paginate:{currentPage: 1, itemsPerPage: pageSize, totalItems: partiesSize}">
       <a [routerLink]="['/PartyDetails', {partyId: party._id}]">{{party.name}}</a>
       <p>{{party.description}}</p>
       <p>{{party.location}}</p>
-- 
2.6.4


From 88a8a9e690e8b298b20895fd3aaffbf45beb7fc7 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Wed, 3 Feb 2016 22:07:37 +0200
Subject: [PATCH 095/173] Step 12.16: add a sort order dropdown

---
 client/imports/parties-list/parties-list.html | 7 +++++++
 1 file changed, 7 insertions(+)

diff --git a/client/imports/parties-list/parties-list.html b/client/imports/parties-list/parties-list.html
index 006eb1e..75b6413 100644
--- a/client/imports/parties-list/parties-list.html
+++ b/client/imports/parties-list/parties-list.html
@@ -3,6 +3,13 @@
   <input type="text" #searchtext placeholder="Search by Location">
   <button type="button" (click)="search(searchtext.value)">Search</button>
   <login-buttons></login-buttons>
+  <h1>Parties:</h1>
+  <div>
+    <select #sort (change)="changeSortOrder(sort.value)">
+      <option value="1" selected>Ascending</option>
+      <option value="-1">Descending</option>
+    </select>
+  </div>
   <ul>
     <li *ngFor="#party of parties | paginate:{currentPage: 1, itemsPerPage: pageSize, totalItems: partiesSize}">
       <a [routerLink]="['/PartyDetails', {partyId: party._id}]">{{party.name}}</a>
-- 
2.6.4


From f0cc223be46330e4bea440d8be1c194e94ff318c Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Wed, 3 Feb 2016 22:09:03 +0200
Subject: [PATCH 096/173] Step 12.17: re-subscribe reactively when sort order
 changes

---
 client/imports/parties-list/parties-list.ts | 10 +++++++---
 1 file changed, 7 insertions(+), 3 deletions(-)

diff --git a/client/imports/parties-list/parties-list.ts b/client/imports/parties-list/parties-list.ts
index 8ab32ed..a25a58c 100644
--- a/client/imports/parties-list/parties-list.ts
+++ b/client/imports/parties-list/parties-list.ts
@@ -20,7 +20,7 @@ export class PartiesList extends MeteorComponent{
   parties: Mongo.Cursor<Party>;
   pageSize: number = 10;
   curPage: ReactiveVar<number> = new ReactiveVar<number>(1);
-  nameOrder: number = 1;
+  nameOrder: ReactiveVar<number> = new ReactiveVar<number>(1);
   partiesSize: number = 0;
 
   constructor() {
@@ -30,11 +30,11 @@ export class PartiesList extends MeteorComponent{
       let options = {
         limit: this.pageSize,
         skip: (this.curPage.get() - 1) * this.pageSize,
-        sort: { name: this.nameOrder }
+        sort: { name: this.nameOrder.get() }
       };
 
       this.subscribe('parties', options, () => {
-        this.parties = Parties.find({}, { sort: { name: this.nameOrder } });
+        this.parties = Parties.find({}, { sort: { name: this.nameOrder.get() } });
       }, true);
     });
 
@@ -55,6 +55,10 @@ export class PartiesList extends MeteorComponent{
     }
   }
 
+  changeSortOrder(nameOrder: string) {
+    this.nameOrder.set(parseInt(nameOrder));
+  }
+
   onPageChanged(page: number) {
     this.curPage.set(page);
   }
-- 
2.6.4


From cb3efce53c605e2009dbf848de1de09bc16abcaa Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Wed, 3 Feb 2016 22:27:25 +0200
Subject: [PATCH 097/173] Step 12.18: add search by the party location using
 Mongo regex

---
 server/parties.ts | 16 +++++++++-------
 1 file changed, 9 insertions(+), 7 deletions(-)

diff --git a/server/parties.ts b/server/parties.ts
index b1214d5..eed41a5 100644
--- a/server/parties.ts
+++ b/server/parties.ts
@@ -1,10 +1,10 @@
 import {Parties} from '../collections/parties.ts';
 import {Counts} from 'meteor/tmeasday:publish-counts';
 
-function buildQuery(partyId?: string): Object {
+function buildQuery(partyId: string, location: string): Object {
   var isAvailable = {
     $or: [
-      { 'public': true },
+      { public: true },
       {
         $and: [
           { owner: this.userId },
@@ -18,13 +18,15 @@ function buildQuery(partyId?: string): Object {
     return { $and: [{ _id: partyId }, isAvailable] };
   }
 
-  return isAvailable;
-}
+  let searchRegEx = { '$regex': '.*' + (location || '') + '.*', '$options': 'i' };
 
-Meteor.publish('parties', function(options: Object) {
-  Counts.publish(this, 'numberOfParties', Parties.find(buildQuery.call(this)), { noReady: true });
+  return { $and: [{ location: searchRegEx }, isAvailable] };
+}
 
-  return Parties.find(buildQuery.call(this), options);
+Meteor.publish('parties', function(options: Object, location: string) {
+  Counts.publish(this, 'numberOfParties',
+    Parties.find(buildQuery.call(this, null, location)), { noReady: true });
+  return Parties.find(buildQuery.call(this, null, location), options);
 });
 
 Meteor.publish('party', function(partyId: string) {
-- 
2.6.4


From b643964e26bf5d35b4f896bb9691034992d91f4d Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Wed, 3 Feb 2016 22:32:06 +0200
Subject: [PATCH 098/173] Step 12.19: add reactive search by the location on
 the client

---
 client/imports/parties-list/parties-list.ts | 10 ++++------
 1 file changed, 4 insertions(+), 6 deletions(-)

diff --git a/client/imports/parties-list/parties-list.ts b/client/imports/parties-list/parties-list.ts
index a25a58c..52de4c6 100644
--- a/client/imports/parties-list/parties-list.ts
+++ b/client/imports/parties-list/parties-list.ts
@@ -22,6 +22,7 @@ export class PartiesList extends MeteorComponent{
   curPage: ReactiveVar<number> = new ReactiveVar<number>(1);
   nameOrder: ReactiveVar<number> = new ReactiveVar<number>(1);
   partiesSize: number = 0;
+  location: ReactiveVar<string> = new ReactiveVar<string>(null);
 
   constructor() {
     super();
@@ -33,7 +34,7 @@ export class PartiesList extends MeteorComponent{
         sort: { name: this.nameOrder.get() }
       };
 
-      this.subscribe('parties', options, () => {
+      this.subscribe('parties', options, this.location.get(), () => {
         this.parties = Parties.find({}, { sort: { name: this.nameOrder.get() } });
       }, true);
     });
@@ -48,11 +49,8 @@ export class PartiesList extends MeteorComponent{
   }
 
   search(value: string) {
-    if (value) {
-      this.parties = Parties.find({ location: value });
-    } else {
-      this.parties = Parties.find();
-    }
+    this.curPage.set(1);
+    this.location.set(value);
   }
 
   changeSortOrder(nameOrder: string) {
-- 
2.6.4


From a493c7dc05c7ab4498f8798470f151130ffe1c06 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Wed, 3 Feb 2016 22:32:47 +0200
Subject: [PATCH 099/173] Step 13.1: add uninvited users publication

---
 server/users.ts | 15 +++++++++++++++
 1 file changed, 15 insertions(+)
 create mode 100644 server/users.ts

diff --git a/server/users.ts b/server/users.ts
new file mode 100644
index 0000000..4c95705
--- /dev/null
+++ b/server/users.ts
@@ -0,0 +1,15 @@
+import {Parties} from '../collections/parties.ts';
+
+Meteor.publish('uninvited', function (partyId:string) {
+  let party = Parties.findOne(partyId);
+
+  if (!party)
+    throw new Meteor.Error('404', 'No such party!');
+
+  return Meteor.users.find({
+    _id: {
+      $nin: party.invited || [],
+      $ne: this.userId
+    }
+  });
+});
\ No newline at end of file
-- 
2.6.4


From f61d3cb7595d38f0acf6b036d3f687a45f2e6d96 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Wed, 3 Feb 2016 22:33:15 +0200
Subject: [PATCH 100/173] Step 13.2: import users publications on the server
 start

---
 server/main.ts | 1 +
 1 file changed, 1 insertion(+)

diff --git a/server/main.ts b/server/main.ts
index 13c1cec..3aa2cb9 100644
--- a/server/main.ts
+++ b/server/main.ts
@@ -1,4 +1,5 @@
 import {loadParties} from './load-parties.ts';
 import './parties.ts';
+import './users.ts';
 
 Meteor.startup(loadParties);
\ No newline at end of file
-- 
2.6.4


From 38a0929d1a9a34187ad44936c5e77313dc6c6249 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Wed, 3 Feb 2016 22:34:11 +0200
Subject: [PATCH 101/173] Step 13.3: load uninvited users

---
 client/imports/party-details/party-details.ts | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/client/imports/party-details/party-details.ts b/client/imports/party-details/party-details.ts
index 9f98b9c..405a4e9 100644
--- a/client/imports/party-details/party-details.ts
+++ b/client/imports/party-details/party-details.ts
@@ -13,6 +13,7 @@ import {MeteorComponent} from 'angular2-meteor/meteor_component';
 @RequireUser()
 export class PartyDetails extends MeteorComponent {
   party: Party;
+  users: Mongo.Cursor<Object>;
 
   constructor(params: RouteParams) {
     super();
@@ -21,6 +22,10 @@ export class PartyDetails extends MeteorComponent {
     this.subscribe('party', partyId, () => {
       this.party = Parties.findOne(partyId);
     }, true);
+
+    this.subscribe('uninvited', partyId, () => {
+      this.users = Meteor.users.find({_id: {$ne: Meteor.userId()}});
+    }, true);
   }
 
   saveParty(party) {
-- 
2.6.4


From 68bb70ddf55eee519a57c53bd679e6a768d7fb6d Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Wed, 3 Feb 2016 22:34:44 +0200
Subject: [PATCH 102/173] Step 13.4: Add invited to the party definition

---
 typings/party.d.ts | 1 +
 1 file changed, 1 insertion(+)

diff --git a/typings/party.d.ts b/typings/party.d.ts
index a503ec1..c01ebea 100644
--- a/typings/party.d.ts
+++ b/typings/party.d.ts
@@ -4,4 +4,5 @@ interface Party {
   description?: string;
   location: string;
   owner?: string;
+  invited?: Array<string>;
 }
\ No newline at end of file
-- 
2.6.4


From 955dff6da2f1704bfd2be471a933bfbec0709556 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Wed, 3 Feb 2016 22:35:35 +0200
Subject: [PATCH 103/173] Step 13.5: render uninvited users

---
 client/imports/party-details/party-details.html | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

diff --git a/client/imports/party-details/party-details.html b/client/imports/party-details/party-details.html
index 8775366..f0d5e92 100644
--- a/client/imports/party-details/party-details.html
+++ b/client/imports/party-details/party-details.html
@@ -10,4 +10,11 @@
 
   <button type="submit">Save</button>
   <button [routerLink]="['/PartiesList']">Cancel</button>
-</form>
\ No newline at end of file
+</form>
+
+<ul>
+  Users to invite:
+  <li *ngFor="#user of users">
+    <div>{{ user.emails[0].address }}</div>
+  </li>
+</ul>
\ No newline at end of file
-- 
2.6.4


From 84cd8c93fa2ce16bb43f80339e1e07a647e60b99 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Wed, 3 Feb 2016 22:45:15 +0200
Subject: [PATCH 104/173] Step 13.6: add new pipe to render user name

---
 client/imports/pipes/pipes.ts | 23 +++++++++++++++++++++++
 1 file changed, 23 insertions(+)
 create mode 100644 client/imports/pipes/pipes.ts

diff --git a/client/imports/pipes/pipes.ts b/client/imports/pipes/pipes.ts
new file mode 100644
index 0000000..96353d0
--- /dev/null
+++ b/client/imports/pipes/pipes.ts
@@ -0,0 +1,23 @@
+import 'reflect-metadata';
+import {Pipe} from 'angular2/core';
+
+@Pipe({
+  name: 'displayName'
+})
+export class DisplayName {
+  transform(user: Meteor.User): string {
+    if (!user) {
+      return '';
+    }
+
+    if (user.username) {
+      return user.username;
+    }
+
+    if (user.emails) {
+      return user.emails[0].address;
+    }
+
+    return '';
+  }
+}
\ No newline at end of file
-- 
2.6.4


From e3f965a9b017ae990218049d9e9659279a366db7 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Wed, 3 Feb 2016 22:46:31 +0200
Subject: [PATCH 105/173] Step 13.7: make use of the pipe in the template

---
 client/imports/party-details/party-details.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/client/imports/party-details/party-details.html b/client/imports/party-details/party-details.html
index f0d5e92..e1809fe 100644
--- a/client/imports/party-details/party-details.html
+++ b/client/imports/party-details/party-details.html
@@ -15,6 +15,6 @@
 <ul>
   Users to invite:
   <li *ngFor="#user of users">
-    <div>{{ user.emails[0].address }}</div>
+    <div>{{ user | displayName }}</div>
   </li>
 </ul>
\ No newline at end of file
-- 
2.6.4


From 1154e3717836f765f3fd90759b45cc67c626c000 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Wed, 3 Feb 2016 22:48:00 +0200
Subject: [PATCH 106/173] Step 13.8: import DisplayName pipe and add it to the
 view

---
 client/imports/party-details/party-details.ts | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/client/imports/party-details/party-details.ts b/client/imports/party-details/party-details.ts
index 405a4e9..ace6a2a 100644
--- a/client/imports/party-details/party-details.ts
+++ b/client/imports/party-details/party-details.ts
@@ -4,11 +4,13 @@ import {Parties} from '../../../collections/parties.ts';
 import {RouterLink} from 'angular2/router';
 import {RequireUser} from 'angular2-meteor-accounts-ui';
 import {MeteorComponent} from 'angular2-meteor/meteor_component';
+import {DisplayName} from '../pipes/pipes.ts';
 
 @Component({
   selector: 'party-details',
   templateUrl: '/client/imports/party-details/party-details.html',
-  directives: [RouterLink]
+  directives: [RouterLink],
+  pipes: [DisplayName]
 })
 @RequireUser()
 export class PartyDetails extends MeteorComponent {
-- 
2.6.4


From fde1946972b2e2adb1b69e53527f6314a99bdf51 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Wed, 3 Feb 2016 22:50:45 +0200
Subject: [PATCH 107/173] Step 14.0: add a party invitation method

---
 collections/methods.ts | 46 ++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 46 insertions(+)
 create mode 100644 collections/methods.ts

diff --git a/collections/methods.ts b/collections/methods.ts
new file mode 100644
index 0000000..201f619
--- /dev/null
+++ b/collections/methods.ts
@@ -0,0 +1,46 @@
+import {Parties} from './parties.ts';
+import {Email} from 'meteor/email';
+import {check} from 'meteor/check';
+
+function getContactEmail(user:Meteor.User):string {
+  if (user.emails && user.emails.length)
+    return user.emails[0].address;
+
+  return null;
+}
+
+Meteor.methods({
+  invite: function (partyId:string, userId:string) {
+    check(partyId, String);
+    check(userId, String);
+
+    let party = Parties.findOne(partyId);
+
+    if (!party)
+      throw new Meteor.Error('404', 'No such party!');
+
+    if (party.public)
+      throw new Meteor.Error('400', 'That party is public. No need to invite people.');
+
+    if (party.owner !== this.userId)
+      throw new Meteor.Error('403', 'No permissions!');
+
+    if (userId !== party.owner && (party.invited || []).indexOf(userId) == -1) {
+      Parties.update(partyId, {$addToSet: {invited: userId}});
+
+      let from = getContactEmail(Meteor.users.findOne(this.userId));
+      let to = getContactEmail(Meteor.users.findOne(userId));
+
+      if (Meteor.isServer && to) {
+        Email.send({
+          from: 'noreply@socially.com',
+          to: to,
+          replyTo: from || undefined,
+          subject: 'PARTY: ' + party.name,
+          text: `Hi, I just invited you to ${party.name} on Socially.
+                        \n\nCome check it out: ${Meteor.absoluteUrl()}\n`
+        });
+      }
+    }
+  }
+});
\ No newline at end of file
-- 
2.6.4


From 96c8e985206f92a0cf16e4a2e0eb1bd5af7c5a7b Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Wed, 3 Feb 2016 22:51:24 +0200
Subject: [PATCH 108/173] Step 14.1: Add email and check packages

---
 .meteor/packages | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/.meteor/packages b/.meteor/packages
index 4a4c39c..38328ed 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -19,3 +19,5 @@ angular2-compilers
 accounts-password
 reactive-var
 tmeasday:publish-counts
+email
+check
-- 
2.6.4


From ec10b96225744da823a0105bcc813878b02e3a3d Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Wed, 3 Feb 2016 22:51:49 +0200
Subject: [PATCH 109/173] Step 14.2: import methods on the server side

---
 server/main.ts | 1 +
 1 file changed, 1 insertion(+)

diff --git a/server/main.ts b/server/main.ts
index 3aa2cb9..e1998cc 100644
--- a/server/main.ts
+++ b/server/main.ts
@@ -1,5 +1,6 @@
 import {loadParties} from './load-parties.ts';
 import './parties.ts';
 import './users.ts';
+import '../collections/methods.ts';
 
 Meteor.startup(loadParties);
\ No newline at end of file
-- 
2.6.4


From 5ade4e349bf402ea9856cdd0c2d03f92ea27deba Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Wed, 3 Feb 2016 22:52:16 +0200
Subject: [PATCH 110/173] Step 14.3: import methods on the client

---
 client/app.ts | 1 +
 1 file changed, 1 insertion(+)

diff --git a/client/app.ts b/client/app.ts
index d1eb26e..51ec39b 100644
--- a/client/app.ts
+++ b/client/app.ts
@@ -5,6 +5,7 @@ import {bootstrap} from 'angular2-meteor-auto-bootstrap';
 import {ROUTER_PROVIDERS, ROUTER_DIRECTIVES, RouteConfig, APP_BASE_HREF} from 'angular2/router';
 import {PartiesList} from './imports/parties-list/parties-list.ts';
 import {PartyDetails} from './imports/party-details/party-details.ts';
+import '../collections/methods.ts';
 
 @Component({
   selector: 'app',
-- 
2.6.4


From 45b0f5f3f58517e5b2cdb8720002ccb7b68e4b11 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Wed, 3 Feb 2016 22:52:40 +0200
Subject: [PATCH 111/173] Step 14.4: add "invite" button

---
 client/imports/party-details/party-details.html | 1 +
 1 file changed, 1 insertion(+)

diff --git a/client/imports/party-details/party-details.html b/client/imports/party-details/party-details.html
index e1809fe..7fabe2e 100644
--- a/client/imports/party-details/party-details.html
+++ b/client/imports/party-details/party-details.html
@@ -16,5 +16,6 @@
   Users to invite:
   <li *ngFor="#user of users">
     <div>{{ user | displayName }}</div>
+    <button (click)="invite(user)">Invite</button>
   </li>
 </ul>
\ No newline at end of file
-- 
2.6.4


From 7f2a64ea795560f1b13cdb91a1ad9fa874604715 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Wed, 3 Feb 2016 22:53:18 +0200
Subject: [PATCH 112/173] Step 14.5: add the click handler and call "invite"
 method

---
 client/imports/party-details/party-details.ts | 11 +++++++++++
 1 file changed, 11 insertions(+)

diff --git a/client/imports/party-details/party-details.ts b/client/imports/party-details/party-details.ts
index ace6a2a..f9a00f1 100644
--- a/client/imports/party-details/party-details.ts
+++ b/client/imports/party-details/party-details.ts
@@ -43,4 +43,15 @@ export class PartyDetails extends MeteorComponent {
       alert('Please log in to change this party');
     }
   }
+
+  invite(user: Meteor.User) {
+    this.call('invite', this.party._id, user._id, (error) => {
+      if (error) {
+        alert(`Failed to invite due to ${error}`);
+        return;
+      }
+
+      alert('User successfully invited.');
+    });
+  }
 }
\ No newline at end of file
-- 
2.6.4


From c71dbe57fff13fef99da0b0773f32cf68b195270 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Wed, 3 Feb 2016 22:54:04 +0200
Subject: [PATCH 113/173] Step 14.6: get the party reactively

---
 client/imports/party-details/party-details.ts | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/client/imports/party-details/party-details.ts b/client/imports/party-details/party-details.ts
index f9a00f1..70c59f3 100644
--- a/client/imports/party-details/party-details.ts
+++ b/client/imports/party-details/party-details.ts
@@ -22,8 +22,10 @@ export class PartyDetails extends MeteorComponent {
     var partyId = params.get('partyId');
 
     this.subscribe('party', partyId, () => {
-      this.party = Parties.findOne(partyId);
-    }, true);
+      this.autorun(() => {
+        this.party = Parties.findOne(partyId);
+      },   true);
+    });
 
     this.subscribe('uninvited', partyId, () => {
       this.users = Meteor.users.find({_id: {$ne: Meteor.userId()}});
-- 
2.6.4


From fd7bec6878bbfed3be350d30da21873d78d4982e Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Wed, 3 Feb 2016 22:58:30 +0200
Subject: [PATCH 114/173] Step 14.7: update the users list reactively

---
 client/imports/party-details/party-details.ts | 14 +++++++++++++-
 1 file changed, 13 insertions(+), 1 deletion(-)

diff --git a/client/imports/party-details/party-details.ts b/client/imports/party-details/party-details.ts
index 70c59f3..fde4b0f 100644
--- a/client/imports/party-details/party-details.ts
+++ b/client/imports/party-details/party-details.ts
@@ -24,14 +24,26 @@ export class PartyDetails extends MeteorComponent {
     this.subscribe('party', partyId, () => {
       this.autorun(() => {
         this.party = Parties.findOne(partyId);
+        this.getUsers(this.party);
       },   true);
     });
 
     this.subscribe('uninvited', partyId, () => {
-      this.users = Meteor.users.find({_id: {$ne: Meteor.userId()}});
+      this.getUsers(this.party);
     }, true);
   }
 
+  getUsers(party: Party) {
+    if (party) {
+      this.users = Meteor.users.find({
+        _id: {
+          $nin: party.invited || [],
+          $ne: Meteor.userId()
+        }
+      });
+    }
+  }
+
   saveParty(party) {
     if (Meteor.userId()) {
       Parties.update(party._id, {
-- 
2.6.4


From 0f81d9851159afc176f5f9e39f812cc1a78f0dc9 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Wed, 3 Feb 2016 22:59:21 +0200
Subject: [PATCH 115/173] Step 14.8: show private parties to the invited and
 owners only

---
 server/parties.ts | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/server/parties.ts b/server/parties.ts
index eed41a5..0bd7ca7 100644
--- a/server/parties.ts
+++ b/server/parties.ts
@@ -4,11 +4,17 @@ import {Counts} from 'meteor/tmeasday:publish-counts';
 function buildQuery(partyId: string, location: string): Object {
   var isAvailable = {
     $or: [
-      { public: true },
+      { 'public': true },
       {
         $and: [
           { owner: this.userId },
           { owner: { $exists: true } }
+        ],
+      },
+      {
+        $and: [
+          { invited: this.userId },
+          { invited: { $exists: true } }
         ]
       }
     ]
-- 
2.6.4


From de77215369acc0a0afa9982b00c1c48ba19f861e Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Wed, 3 Feb 2016 23:00:12 +0200
Subject: [PATCH 116/173] Step 14.9: add a "reply" method

---
 collections/methods.ts | 45 +++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 45 insertions(+)

diff --git a/collections/methods.ts b/collections/methods.ts
index 201f619..36aa708 100644
--- a/collections/methods.ts
+++ b/collections/methods.ts
@@ -42,5 +42,50 @@ Meteor.methods({
         });
       }
     }
+  },
+  reply: function(partyId: string, rsvp: string) {
+    check(partyId, String);
+    check(rsvp, String);
+
+    if (!this.userId)
+      throw new Meteor.Error('403', 'You must be logged-in to reply');
+
+    if (['yes', 'no', 'maybe'].indexOf(rsvp) === -1)
+      throw new Meteor.Error('400', 'Invalid RSVP');
+
+    let party = Parties.findOne({ _id: partyId });
+
+    if (!party)
+      throw new Meteor.Error('404', 'No such party');
+
+    if (party.owner === this.userId)
+      throw new Meteor.Error('500', 'You are the owner!');
+
+    if (!party.public && (!party.invited || party.invited.indexOf(this.userId) == -1))
+      throw new Meteor.Error('403', 'No such party'); // its private, but let's not tell this to the user
+
+    let rsvpIndex = party.rsvps ? party.rsvps.findIndex((rsvp) => rsvp.userId === this.userId) : -1;
+
+    if (rsvpIndex !== -1) {
+      // update existing rsvp entry
+      if (Meteor.isServer) {
+        // update the appropriate rsvp entry with $
+        Parties.update(
+          { _id: partyId, 'rsvps.userId': this.userId },
+          { $set: { 'rsvps.$.response': rsvp } });
+      } else {
+        // minimongo doesn't yet support $ in modifier. as a temporary
+        // workaround, make a modifier that uses an index. this is
+        // safe on the client since there's only one thread.
+        let modifier = { $set: {} };
+        modifier.$set['rsvps.' + rsvpIndex + '.response'] = rsvp;
+
+        Parties.update(partyId, modifier);
+      }
+    } else {
+      // add new rsvp entry
+      Parties.update(partyId,
+        { $push: { rsvps: { userId: this.userId, response: rsvp } } });
+    }
   }
 });
\ No newline at end of file
-- 
2.6.4


From 3676397cc71951bdb5b882c10e65666d1427fe5d Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Wed, 3 Feb 2016 23:00:50 +0200
Subject: [PATCH 117/173] Step 14.10: update the party typings

---
 typings/party.d.ts | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/typings/party.d.ts b/typings/party.d.ts
index c01ebea..4d41910 100644
--- a/typings/party.d.ts
+++ b/typings/party.d.ts
@@ -5,4 +5,10 @@ interface Party {
   location: string;
   owner?: string;
   invited?: Array<string>;
+  rsvps?: Array<RSVP>;
+}
+
+interface RSVP {
+  userId: string;
+  response: string;
 }
\ No newline at end of file
-- 
2.6.4


From ecbeb65d53cf806f0b2c2126addaf5618b2b17bd Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Wed, 3 Feb 2016 23:01:23 +0200
Subject: [PATCH 118/173] Step 14.11: update PartyDetails view with the three
 response buttons

---
 client/imports/party-details/party-details.html | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

diff --git a/client/imports/party-details/party-details.html b/client/imports/party-details/party-details.html
index 7fabe2e..f8b939b 100644
--- a/client/imports/party-details/party-details.html
+++ b/client/imports/party-details/party-details.html
@@ -18,4 +18,11 @@
     <div>{{ user | displayName }}</div>
     <button (click)="invite(user)">Invite</button>
   </li>
-</ul>
\ No newline at end of file
+</ul>
+
+<div>
+  <h2>Reply to the invitation</h2>
+  <input type="button" value="I'm going!" (click)="reply('yes')">
+  <input type="button" value="Maybe" (click)="reply('maybe')">
+  <input type="button" value="No" (click)="reply('no')">
+</div>
\ No newline at end of file
-- 
2.6.4


From 3efe95dedeedd4b1a37402e1f794fa71bcd59b03 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Wed, 3 Feb 2016 23:02:06 +0200
Subject: [PATCH 119/173] Step 14.12: handle reply events in the PartyDetails
 component

---
 client/imports/party-details/party-details.ts | 11 +++++++++++
 1 file changed, 11 insertions(+)

diff --git a/client/imports/party-details/party-details.ts b/client/imports/party-details/party-details.ts
index fde4b0f..d0a781d 100644
--- a/client/imports/party-details/party-details.ts
+++ b/client/imports/party-details/party-details.ts
@@ -68,4 +68,15 @@ export class PartyDetails extends MeteorComponent {
       alert('User successfully invited.');
     });
   }
+
+  reply(rsvp: string) {
+    this.call('reply', this.party._id, rsvp, (error) => {
+      if (error) {
+        alert(`Failed to reply due to ${error}`);
+      }
+      else {
+        alert('You successfully replied.');
+      }
+    });
+  }
 }
\ No newline at end of file
-- 
2.6.4


From 2b7684060a31fe69b806f7b4bc3120590ee9ad62 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Wed, 3 Feb 2016 23:21:50 +0200
Subject: [PATCH 120/173] Step 14.13: add a new response counting pipe

---
 client/imports/pipes/pipes.ts | 32 ++++++++++++++++++++++++++++++++
 1 file changed, 32 insertions(+)

diff --git a/client/imports/pipes/pipes.ts b/client/imports/pipes/pipes.ts
index 96353d0..c4ee93e 100644
--- a/client/imports/pipes/pipes.ts
+++ b/client/imports/pipes/pipes.ts
@@ -1,5 +1,7 @@
 import 'reflect-metadata';
 import {Pipe} from 'angular2/core';
+import {Parties} from '../../../collections/parties.ts';
+import {MeteorComponent} from 'angular2-meteor/meteor_component';
 
 @Pipe({
   name: 'displayName'
@@ -20,4 +22,34 @@ export class DisplayName {
 
     return '';
   }
+}
+
+
+@Pipe({
+  name: 'rsvp',
+  pure: false
+})
+export class RsvpPipe extends MeteorComponent {
+  init: boolean = false;
+  total: number = 0;
+
+  transform(party: Party, args: any[]): number {
+    let type = args[0];
+    if (!type) {
+      return 0;
+    }
+
+    if (!this.init) {
+      this.autorun(() => {
+        party = Parties.findOne(party._id);
+        if (party) {
+          this.total = party.rsvps ?
+            party.rsvps.filter(rsvp => rsvp.response === type).length : 0;
+        }
+      }, true);
+      this.init = true;
+    }
+
+    return this.total;
+  }
 }
\ No newline at end of file
-- 
2.6.4


From da303ecd20048d1c3e4281727323b00b8993d470 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Wed, 3 Feb 2016 23:34:41 +0200
Subject: [PATCH 121/173] Step 14.14: display response statistics in the list

---
 client/imports/parties-list/parties-list.html | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/client/imports/parties-list/parties-list.html b/client/imports/parties-list/parties-list.html
index 75b6413..9b55010 100644
--- a/client/imports/parties-list/parties-list.html
+++ b/client/imports/parties-list/parties-list.html
@@ -16,6 +16,12 @@
       <p>{{party.description}}</p>
       <p>{{party.location}}</p>
       <button (click)="removeParty(party)">X</button>
+      <div>
+        Who is coming:
+        Yes - {{party | rsvp:'yes'}}
+        Maybe - {{party | rsvp:'maybe'}}
+        No - {{party | rsvp:'no'}}
+      </div>
     </li>
   </ul>
   <pagination-controls (change)="onPageChanged($event.page)"></pagination-controls>
-- 
2.6.4


From 42a1e99a7bc4739a09875021ffd24e28539b8fda Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Wed, 3 Feb 2016 23:34:59 +0200
Subject: [PATCH 122/173] Step 14.15: import the RsvpPipe pipe

---
 client/imports/parties-list/parties-list.ts | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/client/imports/parties-list/parties-list.ts b/client/imports/parties-list/parties-list.ts
index 52de4c6..8b52529 100644
--- a/client/imports/parties-list/parties-list.ts
+++ b/client/imports/parties-list/parties-list.ts
@@ -8,13 +8,14 @@ import {MeteorComponent} from 'angular2-meteor/meteor_component';
 import {ReactiveVar} from 'meteor/reactive-var';
 import {PaginationService, PaginatePipe, PaginationControlsCmp} from 'angular2-pagination';
 import {Counts} from 'meteor/tmeasday:publish-counts';
+import {RsvpPipe} from '../pipes/pipes.ts';
 
 @Component({
   selector: 'parties-list',
   viewProviders: [PaginationService],
   templateUrl: '/client/imports/parties-list/parties-list.html',
   directives: [PartiesForm, RouterLink, LoginButtons, PaginationControlsCmp],
-  pipes: [PaginatePipe]
+  pipes: [PaginatePipe, RsvpPipe]
 })
 export class PartiesList extends MeteorComponent{
   parties: Mongo.Cursor<Party>;
-- 
2.6.4


From 75cdf35c002437bc10c60e9c68205bf09dc9828c Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Wed, 3 Feb 2016 23:58:58 +0200
Subject: [PATCH 123/173] Step 15.1: inject Meteor user and add isOwner method

---
 client/imports/parties-list/parties-list.ts | 12 +++++++++++-
 1 file changed, 11 insertions(+), 1 deletion(-)

diff --git a/client/imports/parties-list/parties-list.ts b/client/imports/parties-list/parties-list.ts
index 8b52529..99a1c47 100644
--- a/client/imports/parties-list/parties-list.ts
+++ b/client/imports/parties-list/parties-list.ts
@@ -3,7 +3,7 @@ import {Component} from 'angular2/core';
 import {Parties} from '../../../collections/parties.ts';
 import {PartiesForm} from '../parties-form/parties-form.ts';
 import {RouterLink} from 'angular2/router';
-import {LoginButtons} from 'angular2-meteor-accounts-ui/login-buttons';
+import {LoginButtons, InjectUser} from 'angular2-meteor-accounts-ui';
 import {MeteorComponent} from 'angular2-meteor/meteor_component';
 import {ReactiveVar} from 'meteor/reactive-var';
 import {PaginationService, PaginatePipe, PaginationControlsCmp} from 'angular2-pagination';
@@ -17,6 +17,7 @@ import {RsvpPipe} from '../pipes/pipes.ts';
   directives: [PartiesForm, RouterLink, LoginButtons, PaginationControlsCmp],
   pipes: [PaginatePipe, RsvpPipe]
 })
+@InjectUser()
 export class PartiesList extends MeteorComponent{
   parties: Mongo.Cursor<Party>;
   pageSize: number = 10;
@@ -24,6 +25,7 @@ export class PartiesList extends MeteorComponent{
   nameOrder: ReactiveVar<number> = new ReactiveVar<number>(1);
   partiesSize: number = 0;
   location: ReactiveVar<string> = new ReactiveVar<string>(null);
+  user: Meteor.User;
 
   constructor() {
     super();
@@ -61,4 +63,12 @@ export class PartiesList extends MeteorComponent{
   onPageChanged(page: number) {
     this.curPage.set(page);
   }
+
+  isOwner(party: Party): boolean {
+    if (this.user) {
+      return this.user._id === party.owner;
+    }
+
+    return false;
+  }
 }
\ No newline at end of file
-- 
2.6.4


From 96c48c63b010e0ec957192f6a42a29afa58dd230 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Thu, 4 Feb 2016 00:00:15 +0200
Subject: [PATCH 124/173] Step 15.2: use the hidden attribute in the
 PartiesList template

---
 client/imports/parties-list/parties-list.html | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/client/imports/parties-list/parties-list.html b/client/imports/parties-list/parties-list.html
index 9b55010..b4639e7 100644
--- a/client/imports/parties-list/parties-list.html
+++ b/client/imports/parties-list/parties-list.html
@@ -1,5 +1,5 @@
 <div>
-  <parties-form style="float: left"></parties-form>
+  <parties-form [hidden]="!user" style="float: left"></parties-form>
   <input type="text" #searchtext placeholder="Search by Location">
   <button type="button" (click)="search(searchtext.value)">Search</button>
   <login-buttons></login-buttons>
@@ -15,7 +15,7 @@
       <a [routerLink]="['/PartyDetails', {partyId: party._id}]">{{party.name}}</a>
       <p>{{party.description}}</p>
       <p>{{party.location}}</p>
-      <button (click)="removeParty(party)">X</button>
+      <button [hidden]="!isOwner(party)"  (click)="removeParty(party)">X</button>
       <div>
         Who is coming:
         Yes - {{party | rsvp:'yes'}}
-- 
2.6.4


From f35afce589b746b9d095147d1bbf651bd190509d Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Thu, 4 Feb 2016 00:08:45 +0200
Subject: [PATCH 125/173] Step 15.3: add isOwner property into the PartyDetails

---
 client/imports/party-details/party-details.ts | 12 +++++++++++-
 1 file changed, 11 insertions(+), 1 deletion(-)

diff --git a/client/imports/party-details/party-details.ts b/client/imports/party-details/party-details.ts
index d0a781d..32e02e4 100644
--- a/client/imports/party-details/party-details.ts
+++ b/client/imports/party-details/party-details.ts
@@ -2,7 +2,7 @@ import {Component} from 'angular2/core';
 import {RouteParams} from 'angular2/router';
 import {Parties} from '../../../collections/parties.ts';
 import {RouterLink} from 'angular2/router';
-import {RequireUser} from 'angular2-meteor-accounts-ui';
+import {RequireUser, InjectUser} from 'angular2-meteor-accounts-ui';
 import {MeteorComponent} from 'angular2-meteor/meteor_component';
 import {DisplayName} from '../pipes/pipes.ts';
 
@@ -13,9 +13,11 @@ import {DisplayName} from '../pipes/pipes.ts';
   pipes: [DisplayName]
 })
 @RequireUser()
+@InjectUser()
 export class PartyDetails extends MeteorComponent {
   party: Party;
   users: Mongo.Cursor<Object>;
+  user: Meteor.User;
 
   constructor(params: RouteParams) {
     super();
@@ -79,4 +81,12 @@ export class PartyDetails extends MeteorComponent {
       }
     });
   }
+
+  get isOwner(): boolean {
+    if (this.party && this.user) {
+      return this.user._id === this.party.owner;
+    }
+
+    return false;
+  }
 }
\ No newline at end of file
-- 
2.6.4


From bde57ca4104db47bc5efc412eddd3ee8bf65e6ce Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Thu, 4 Feb 2016 00:10:07 +0200
Subject: [PATCH 126/173] Step 15.4: add disable attribute bindings

---
 client/imports/party-details/party-details.html | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/client/imports/party-details/party-details.html b/client/imports/party-details/party-details.html
index f8b939b..0d45c9f 100644
--- a/client/imports/party-details/party-details.html
+++ b/client/imports/party-details/party-details.html
@@ -1,14 +1,14 @@
 <form (submit)="saveParty(party)" *ngIf="party">
   <label>Name</label>
-  <input type="text" [(ngModel)]="party.name">
+  <input [disabled]="!isOwner" type="text" [(ngModel)]="party.name">
 
   <label>Description</label>
-  <input type="text" [(ngModel)]="party.description">
+  <input [disabled]="!isOwner" type="text" [(ngModel)]="party.description">
 
   <label>Location</label>
-  <input type="text" [(ngModel)]="party.location">
+  <input [disabled]="!isOwner" type="text" [(ngModel)]="party.location">
 
-  <button type="submit">Save</button>
+  <button [disabled]="!isOwner" type="submit">Save</button>
   <button [routerLink]="['/PartiesList']">Cancel</button>
 </form>
 
-- 
2.6.4


From 1356258f920bc614906b768d417e7d7821339da0 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Thu, 4 Feb 2016 00:11:12 +0200
Subject: [PATCH 127/173] Step 15.5: add isPublic and isInvited properties

---
 client/imports/party-details/party-details.ts | 17 +++++++++++++++++
 1 file changed, 17 insertions(+)

diff --git a/client/imports/party-details/party-details.ts b/client/imports/party-details/party-details.ts
index 32e02e4..d66012e 100644
--- a/client/imports/party-details/party-details.ts
+++ b/client/imports/party-details/party-details.ts
@@ -89,4 +89,21 @@ export class PartyDetails extends MeteorComponent {
 
     return false;
   }
+
+  get isPublic(): boolean {
+    if (this.party) {
+      return this.party.public;
+    }
+
+    return false;
+  }
+
+  get isInvited(): boolean {
+    if (this.party && this.user) {
+      let invited = this.party.invited || [];
+      return invited.indexOf(this.user._id) !== -1;
+    }
+
+    return false;
+  }
 }
\ No newline at end of file
-- 
2.6.4


From 0dbdb5752cea75cc9efcb7e6c0f3aaf33cfd3a67 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Thu, 4 Feb 2016 00:32:36 +0200
Subject: [PATCH 128/173] Step 15.6: make use of the properties in the template

---
 client/imports/party-details/party-details.html | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/client/imports/party-details/party-details.html b/client/imports/party-details/party-details.html
index 0d45c9f..def1c00 100644
--- a/client/imports/party-details/party-details.html
+++ b/client/imports/party-details/party-details.html
@@ -12,7 +12,7 @@
   <button [routerLink]="['/PartiesList']">Cancel</button>
 </form>
 
-<ul>
+<ul *ngIf="isOwner || isPublic">
   Users to invite:
   <li *ngFor="#user of users">
     <div>{{ user | displayName }}</div>
@@ -20,7 +20,7 @@
   </li>
 </ul>
 
-<div>
+<div *ngIf="isInvited">
   <h2>Reply to the invitation</h2>
   <input type="button" value="I'm going!" (click)="reply('yes')">
   <input type="button" value="Maybe" (click)="reply('maybe')">
-- 
2.6.4


From 8df69f6a00ed78e9fd1b5de07571f2968489fbf6 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Thu, 4 Feb 2016 00:33:40 +0200
Subject: [PATCH 129/173] Step 16.1: extend party location with lat and lng
 coordinates

---
 typings/party.d.ts | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/typings/party.d.ts b/typings/party.d.ts
index 4d41910..6387af4 100644
--- a/typings/party.d.ts
+++ b/typings/party.d.ts
@@ -3,7 +3,11 @@ interface Party {
   name: string;
   description?: string;
   location: string;
-  owner?: string;
+  location: {
+    name: string;
+    lat?: number;
+    lng?: number;
+  };
   invited?: Array<string>;
   rsvps?: Array<RSVP>;
 }
-- 
2.6.4


From 5f31a91726b7df9f3888f3d829cb9696f9d2681d Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Thu, 4 Feb 2016 00:34:28 +0200
Subject: [PATCH 130/173] Step 16.2: change initial parties accordingly

---
 server/load-parties.ts | 18 ++++++++++++------
 1 file changed, 12 insertions(+), 6 deletions(-)

diff --git a/server/load-parties.ts b/server/load-parties.ts
index 0aef531..c2a0562 100644
--- a/server/load-parties.ts
+++ b/server/load-parties.ts
@@ -7,20 +7,26 @@ export function loadParties() {
       {
         'name': 'Dubstep-Free Zone',
         'description': 'Can we please just for an evening not listen to dubstep.',
-        'location': 'Palo Alto',
-        'public': true
+        'public': true,
+        'location': {
+          name: 'Palo Alto'
+        }
       },
       {
         'name': 'All dubstep all the time',
         'description': 'Get it on!',
-        'location': 'Palo Alto',
-        'public': true
+        'public': true,
+        'location': {
+          name: 'Palo Alto'
+        }
       },
       {
         'name': 'Savage lounging',
         'description': 'Leisure suit required. And only fiercest manners.',
-        'location': 'San Francisco',
-        'public': false
+        'public': false,
+        'location': {
+          name: 'Palo Alto'
+        }
       }
     ];
 
-- 
2.6.4


From 856f3e4140e3fa6039b5ff5d43fe858f8f6163d8 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Thu, 4 Feb 2016 00:35:21 +0200
Subject: [PATCH 131/173] Step 16.3: change party creation component

---
 client/imports/parties-form/parties-form.ts | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/client/imports/parties-form/parties-form.ts b/client/imports/parties-form/parties-form.ts
index ed02ae3..cb1cf94 100644
--- a/client/imports/parties-form/parties-form.ts
+++ b/client/imports/parties-form/parties-form.ts
@@ -27,7 +27,9 @@ export class PartiesForm {
         Parties.insert({
           name: party.name,
           description: party.description,
-          location: party.location,
+          location: {
+            name: party.location
+          },
           'public': party.public,
           owner: Meteor.userId()
         });
-- 
2.6.4


From b42f3ed81af99176c16fd764cff6cdc3b37b7308 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Thu, 4 Feb 2016 00:36:06 +0200
Subject: [PATCH 132/173] Step 16.4: reflect type changes in the parties search

---
 server/parties.ts | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/server/parties.ts b/server/parties.ts
index 0bd7ca7..95701c9 100644
--- a/server/parties.ts
+++ b/server/parties.ts
@@ -26,7 +26,7 @@ function buildQuery(partyId: string, location: string): Object {
 
   let searchRegEx = { '$regex': '.*' + (location || '') + '.*', '$options': 'i' };
 
-  return { $and: [{ location: searchRegEx }, isAvailable] };
+  return { $and: [{ 'location.name': searchRegEx }, isAvailable] };
 }
 
 Meteor.publish('parties', function(options: Object, location: string) {
-- 
2.6.4


From df7e7027b047607f5d4e9aa758e337fcb06c1984 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Thu, 4 Feb 2016 00:37:52 +0200
Subject: [PATCH 133/173] Step 16.5: add angular2 google maps package

---
 package.json | 1 +
 1 file changed, 1 insertion(+)

diff --git a/package.json b/package.json
index d48d5c6..404ab85 100644
--- a/package.json
+++ b/package.json
@@ -15,6 +15,7 @@
   "dependencies": {
     "angular2": "2.0.0-beta.12",
     "angular2-meteor": "0.5.2",
+    "angular2-google-maps": "0.9.0",
     "angular2-meteor-accounts-ui": "git+https://github.com/Urigo/angular2-meteor-accounts-ui.git",
     "angular2-meteor-auto-bootstrap": "git+https://github.com/Urigo/angular2-meteor-auto-bootstrap.git",
     "angular2-pagination": "github:urigo/angular2-pagination",
-- 
2.6.4


From bee7f5fbb16a7c110e1d841eb41adb21553b6193 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Thu, 4 Feb 2016 00:40:08 +0200
Subject: [PATCH 134/173] Step 16.6: import and install maps providers globally

---
 client/app.ts | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/client/app.ts b/client/app.ts
index 51ec39b..a43a117 100644
--- a/client/app.ts
+++ b/client/app.ts
@@ -6,6 +6,7 @@ import {ROUTER_PROVIDERS, ROUTER_DIRECTIVES, RouteConfig, APP_BASE_HREF} from 'a
 import {PartiesList} from './imports/parties-list/parties-list.ts';
 import {PartyDetails} from './imports/party-details/party-details.ts';
 import '../collections/methods.ts';
+import {ANGULAR2_GOOGLE_MAPS_PROVIDERS} from 'angular2-google-maps/core';
 
 @Component({
   selector: 'app',
@@ -18,4 +19,4 @@ import '../collections/methods.ts';
 ])
 class Socially {}
 
-bootstrap(Socially, [ROUTER_PROVIDERS, provide(APP_BASE_HREF, { useValue: '/' })]);
\ No newline at end of file
+bootstrap(Socially, [ROUTER_PROVIDERS, ANGULAR2_GOOGLE_MAPS_PROVIDERS, provide(APP_BASE_HREF, { useValue: '/' })]);
\ No newline at end of file
-- 
2.6.4


From 558fac46aa64111396273dbb99fbe0a8c42430e5 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Thu, 4 Feb 2016 00:41:07 +0200
Subject: [PATCH 135/173] Step 16.7: add maps markup to the PartyDetails
 template

---
 client/imports/party-details/party-details.html | 16 ++++++++++++++--
 1 file changed, 14 insertions(+), 2 deletions(-)

diff --git a/client/imports/party-details/party-details.html b/client/imports/party-details/party-details.html
index def1c00..b896d47 100644
--- a/client/imports/party-details/party-details.html
+++ b/client/imports/party-details/party-details.html
@@ -6,7 +6,7 @@
   <input [disabled]="!isOwner" type="text" [(ngModel)]="party.description">
 
   <label>Location</label>
-  <input [disabled]="!isOwner" type="text" [(ngModel)]="party.location">
+  <input [disabled]="!isOwner" type="text" [(ngModel)]="party.location.name">
 
   <button [disabled]="!isOwner" type="submit">Save</button>
   <button [routerLink]="['/PartiesList']">Cancel</button>
@@ -25,4 +25,16 @@
   <input type="button" value="I'm going!" (click)="reply('yes')">
   <input type="button" value="Maybe" (click)="reply('maybe')">
   <input type="button" value="No" (click)="reply('no')">
-</div>
\ No newline at end of file
+</div>
+
+<sebm-google-map
+        [latitude]="lat || centerLat"
+        [longitude]="lng || centerLng"
+        [zoom]="8"
+        (mapClick)="mapClicked($event)">
+  <sebm-google-map-marker
+          *ngIf="lat && lng"
+          [latitude]="lat"
+          [longitude]="lng">
+  </sebm-google-map-marker>
+</sebm-google-map>
\ No newline at end of file
-- 
2.6.4


From 880811f11c266dfb1d2826c7939201fff3d3ce82 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Thu, 4 Feb 2016 00:42:28 +0200
Subject: [PATCH 136/173] Step 16.8: add maps logic to the PartyDetails
 component

---
 client/imports/party-details/party-details.ts | 19 ++++++++++++++++++-
 1 file changed, 18 insertions(+), 1 deletion(-)

diff --git a/client/imports/party-details/party-details.ts b/client/imports/party-details/party-details.ts
index d66012e..1c01945 100644
--- a/client/imports/party-details/party-details.ts
+++ b/client/imports/party-details/party-details.ts
@@ -5,11 +5,12 @@ import {RouterLink} from 'angular2/router';
 import {RequireUser, InjectUser} from 'angular2-meteor-accounts-ui';
 import {MeteorComponent} from 'angular2-meteor/meteor_component';
 import {DisplayName} from '../pipes/pipes.ts';
+import {ANGULAR2_GOOGLE_MAPS_DIRECTIVES, MouseEvent} from 'angular2-google-maps/core';
 
 @Component({
   selector: 'party-details',
   templateUrl: '/client/imports/party-details/party-details.html',
-  directives: [RouterLink],
+  directives: [RouterLink, ANGULAR2_GOOGLE_MAPS_DIRECTIVES],
   pipes: [DisplayName]
 })
 @RequireUser()
@@ -18,6 +19,9 @@ export class PartyDetails extends MeteorComponent {
   party: Party;
   users: Mongo.Cursor<Object>;
   user: Meteor.User;
+  // Default center Palo Alto coordinates.
+  centerLat: Number = 37.4292;
+  centerLng: Number = -122.1381;
 
   constructor(params: RouteParams) {
     super();
@@ -106,4 +110,17 @@ export class PartyDetails extends MeteorComponent {
 
     return false;
   }
+
+  get lat(): Number {
+    return this.party && this.party.location.lat;
+  }
+
+  get lng(): Number {
+    return this.party && this.party.location.lng;
+  }
+
+  mapClicked($event: MouseEvent) {
+    this.party.location.lat = $event.coords.lat;
+    this.party.location.lng = $event.coords.lng;
+  }
 }
\ No newline at end of file
-- 
2.6.4


From 98c378fa2e4293d21b385af2884602ee94b3d6f1 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Thu, 4 Feb 2016 10:56:33 +0200
Subject: [PATCH 137/173] Step 16.9: create main CSS file and add maps styles
 there

---
 client/css/main.css | 4 ++++
 1 file changed, 4 insertions(+)
 create mode 100644 client/css/main.css

diff --git a/client/css/main.css b/client/css/main.css
new file mode 100644
index 0000000..a5234b3
--- /dev/null
+++ b/client/css/main.css
@@ -0,0 +1,4 @@
+.sebm-google-map-container {
+    width: 400px;
+    height: 400px;
+}
\ No newline at end of file
-- 
2.6.4


From b274e5c6dde2ab9b67fcd6be36f5142ebf626b96 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Thu, 4 Feb 2016 10:57:33 +0200
Subject: [PATCH 138/173] Step 16.10: add all parties locations on the map

---
 client/imports/parties-list/parties-list.html | 14 +++++++++++++-
 1 file changed, 13 insertions(+), 1 deletion(-)

diff --git a/client/imports/parties-list/parties-list.html b/client/imports/parties-list/parties-list.html
index b4639e7..1f4e708 100644
--- a/client/imports/parties-list/parties-list.html
+++ b/client/imports/parties-list/parties-list.html
@@ -14,7 +14,7 @@
     <li *ngFor="#party of parties | paginate:{currentPage: 1, itemsPerPage: pageSize, totalItems: partiesSize}">
       <a [routerLink]="['/PartyDetails', {partyId: party._id}]">{{party.name}}</a>
       <p>{{party.description}}</p>
-      <p>{{party.location}}</p>
+      <p>{{party.location.name}}</p>
       <button [hidden]="!isOwner(party)"  (click)="removeParty(party)">X</button>
       <div>
         Who is coming:
@@ -24,5 +24,17 @@
       </div>
     </li>
   </ul>
+  <sebm-google-map
+          [latitude]="0"
+          [longitude]="0"
+          [zoom]="1">
+    <div *ngFor="#party of parties">
+      <sebm-google-map-marker
+              *ngIf="party.location.lat"
+              [latitude]="party.location.lat"
+              [longitude]="party.location.lng">
+      </sebm-google-map-marker>
+    </div>
+  </sebm-google-map>
   <pagination-controls (change)="onPageChanged($event.page)"></pagination-controls>
 </div>
\ No newline at end of file
-- 
2.6.4


From fcfe7d819c76af7f54272bfe4bbded552c9b0330 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Thu, 4 Feb 2016 10:58:13 +0200
Subject: [PATCH 139/173] Step 16.11: import maps dependencies in the
 PartiesList

---
 client/imports/parties-list/parties-list.ts | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/client/imports/parties-list/parties-list.ts b/client/imports/parties-list/parties-list.ts
index 99a1c47..370279a 100644
--- a/client/imports/parties-list/parties-list.ts
+++ b/client/imports/parties-list/parties-list.ts
@@ -9,12 +9,13 @@ import {ReactiveVar} from 'meteor/reactive-var';
 import {PaginationService, PaginatePipe, PaginationControlsCmp} from 'angular2-pagination';
 import {Counts} from 'meteor/tmeasday:publish-counts';
 import {RsvpPipe} from '../pipes/pipes.ts';
+import {ANGULAR2_GOOGLE_MAPS_DIRECTIVES} from 'angular2-google-maps/core';
 
 @Component({
   selector: 'parties-list',
   viewProviders: [PaginationService],
   templateUrl: '/client/imports/parties-list/parties-list.html',
-  directives: [PartiesForm, RouterLink, LoginButtons, PaginationControlsCmp],
+  directives: [ANGULAR2_GOOGLE_MAPS_DIRECTIVES, PartiesForm, RouterLink, LoginButtons, PaginationControlsCmp],
   pipes: [PaginatePipe, RsvpPipe]
 })
 @InjectUser()
-- 
2.6.4


From 376bb35ecdfe0dcd5226bd6c8546541db42f04c2 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Thu, 4 Feb 2016 12:54:59 +0200
Subject: [PATCH 140/173] Step 17.1: Add bootstrap package to the project

---
 package.json | 1 +
 1 file changed, 1 insertion(+)

diff --git a/package.json b/package.json
index 404ab85..16362b0 100644
--- a/package.json
+++ b/package.json
@@ -19,6 +19,7 @@
     "angular2-meteor-accounts-ui": "git+https://github.com/Urigo/angular2-meteor-accounts-ui.git",
     "angular2-meteor-auto-bootstrap": "git+https://github.com/Urigo/angular2-meteor-auto-bootstrap.git",
     "angular2-pagination": "github:urigo/angular2-pagination",
+    "bootstrap4-webpack-package": "github:dotansimha/bootstrap4-webpack-package",
     "meteor-node-stubs": "^0.2.1"
   }
 }
-- 
2.6.4


From 1449f62fc866bf975534a6ccc2b497e60cbd1f73 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Thu, 4 Feb 2016 12:55:09 +0200
Subject: [PATCH 141/173] Step 17.2: Import bootstrap into the project

---
 client/app.ts | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/client/app.ts b/client/app.ts
index a43a117..fcae584 100644
--- a/client/app.ts
+++ b/client/app.ts
@@ -1,5 +1,7 @@
 import 'reflect-metadata';
 import 'zone.js/dist/zone';
+import 'bootstrap4-webpack-package';
+
 import {Component, provide} from 'angular2/core';
 import {bootstrap} from 'angular2-meteor-auto-bootstrap';
 import {ROUTER_PROVIDERS, ROUTER_DIRECTIVES, RouteConfig, APP_BASE_HREF} from 'angular2/router';
-- 
2.6.4


From edc32a3635d0006f6bc472baae953a8707849b01 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Thu, 4 Feb 2016 12:57:39 +0200
Subject: [PATCH 142/173] Step 17.3: Add bootstrap navbar

---
 client/app.html | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

diff --git a/client/app.html b/client/app.html
index 90c6b64..b3c49f0 100644
--- a/client/app.html
+++ b/client/app.html
@@ -1 +1,6 @@
-<router-outlet></router-outlet>
\ No newline at end of file
+<nav class="navbar navbar-light bg-faded">
+  <a class="navbar-brand" href="#">Socially</a>
+</nav>
+<div class="container-fluid">
+  <router-outlet></router-outlet>
+</div>
\ No newline at end of file
-- 
2.6.4


From eb1e57750677b2f90e925ecd834e47757b86abb3 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Thu, 4 Feb 2016 12:58:30 +0200
Subject: [PATCH 143/173] Step 17.4: Add less compiler

---
 .meteor/packages | 1 +
 .meteor/versions | 1 +
 2 files changed, 2 insertions(+)

diff --git a/.meteor/packages b/.meteor/packages
index 38328ed..b691a35 100644
--- a/.meteor/packages
+++ b/.meteor/packages
@@ -21,3 +21,4 @@ reactive-var
 tmeasday:publish-counts
 email
 check
+less
diff --git a/.meteor/versions b/.meteor/versions
index 12c42ee..7b62e12 100644
--- a/.meteor/versions
+++ b/.meteor/versions
@@ -39,6 +39,7 @@ http@1.1.3
 id-map@1.0.5
 jquery@1.11.6
 launch-screen@1.0.8
+less@2.5.6
 livedata@1.0.16
 localstorage@1.0.7
 logging@1.0.10
-- 
2.6.4


From 24d319155cacbdc6f8dcf4af9f2c47a13690c976 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Thu, 4 Feb 2016 13:05:49 +0200
Subject: [PATCH 144/173] Step 17.5: Remove the login buttons from the parties
 list component

---
 client/imports/parties-list/parties-list.html | 1 -
 client/imports/parties-list/parties-list.ts   | 4 ++--
 2 files changed, 2 insertions(+), 3 deletions(-)

diff --git a/client/imports/parties-list/parties-list.html b/client/imports/parties-list/parties-list.html
index 1f4e708..76f0bc4 100644
--- a/client/imports/parties-list/parties-list.html
+++ b/client/imports/parties-list/parties-list.html
@@ -2,7 +2,6 @@
   <parties-form [hidden]="!user" style="float: left"></parties-form>
   <input type="text" #searchtext placeholder="Search by Location">
   <button type="button" (click)="search(searchtext.value)">Search</button>
-  <login-buttons></login-buttons>
   <h1>Parties:</h1>
   <div>
     <select #sort (change)="changeSortOrder(sort.value)">
diff --git a/client/imports/parties-list/parties-list.ts b/client/imports/parties-list/parties-list.ts
index 370279a..9d63667 100644
--- a/client/imports/parties-list/parties-list.ts
+++ b/client/imports/parties-list/parties-list.ts
@@ -3,7 +3,7 @@ import {Component} from 'angular2/core';
 import {Parties} from '../../../collections/parties.ts';
 import {PartiesForm} from '../parties-form/parties-form.ts';
 import {RouterLink} from 'angular2/router';
-import {LoginButtons, InjectUser} from 'angular2-meteor-accounts-ui';
+import {InjectUser} from 'angular2-meteor-accounts-ui';
 import {MeteorComponent} from 'angular2-meteor/meteor_component';
 import {ReactiveVar} from 'meteor/reactive-var';
 import {PaginationService, PaginatePipe, PaginationControlsCmp} from 'angular2-pagination';
@@ -15,7 +15,7 @@ import {ANGULAR2_GOOGLE_MAPS_DIRECTIVES} from 'angular2-google-maps/core';
   selector: 'parties-list',
   viewProviders: [PaginationService],
   templateUrl: '/client/imports/parties-list/parties-list.html',
-  directives: [ANGULAR2_GOOGLE_MAPS_DIRECTIVES, PartiesForm, RouterLink, LoginButtons, PaginationControlsCmp],
+  directives: [ANGULAR2_GOOGLE_MAPS_DIRECTIVES, PartiesForm, RouterLink, PaginationControlsCmp],
   pipes: [PaginatePipe, RsvpPipe]
 })
 @InjectUser()
-- 
2.6.4


From 3497f16bc185ee20864c7994daee3795798840f5 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Thu, 4 Feb 2016 13:06:13 +0200
Subject: [PATCH 145/173] Step 17.6: Add the login buttons to the app component

---
 client/app.html | 1 +
 1 file changed, 1 insertion(+)

diff --git a/client/app.html b/client/app.html
index b3c49f0..dffc2ea 100644
--- a/client/app.html
+++ b/client/app.html
@@ -1,5 +1,6 @@
 <nav class="navbar navbar-light bg-faded">
   <a class="navbar-brand" href="#">Socially</a>
+  <login-buttons class="pull-right"></login-buttons>
 </nav>
 <div class="container-fluid">
   <router-outlet></router-outlet>
-- 
2.6.4


From 004b753c11b392cb185fe8dcea8acf7e2aa1542f Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Thu, 4 Feb 2016 13:06:25 +0200
Subject: [PATCH 146/173] Step 17.7: Import LoginButtons

---
 client/app.ts | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/client/app.ts b/client/app.ts
index fcae584..8c5aa6d 100644
--- a/client/app.ts
+++ b/client/app.ts
@@ -9,11 +9,12 @@ import {PartiesList} from './imports/parties-list/parties-list.ts';
 import {PartyDetails} from './imports/party-details/party-details.ts';
 import '../collections/methods.ts';
 import {ANGULAR2_GOOGLE_MAPS_PROVIDERS} from 'angular2-google-maps/core';
+import {LoginButtons} from 'angular2-meteor-accounts-ui';
 
 @Component({
   selector: 'app',
   templateUrl: 'client/app.html',
-  directives: [ROUTER_DIRECTIVES]
+  directives: [ROUTER_DIRECTIVES, LoginButtons]
 })
 @RouteConfig([
   { path: '/', as: 'PartiesList', component: PartiesList },
-- 
2.6.4


From 5a5981025d568d594444bac446d40d65ba7cf30e Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Thu, 4 Feb 2016 13:07:00 +0200
Subject: [PATCH 147/173] Step 17.8: Add fonts and font awesome

---
 client/index.html | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/client/index.html b/client/index.html
index 2662e56..8a56f1a 100644
--- a/client/index.html
+++ b/client/index.html
@@ -1,3 +1,8 @@
+<head>
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+  <link href='http://fonts.googleapis.com/css?family=Muli:400,300' rel='stylesheet' type='text/css'>
+  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css">
+</head>
 <body>
   <app></app>
 </body>
\ No newline at end of file
-- 
2.6.4


From 58286b5a032f09cd5368931edd7d44df97c98f05 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Thu, 4 Feb 2016 14:24:13 +0200
Subject: [PATCH 148/173] Step 17.9: Update the add new party form layout

---
 client/imports/parties-form/parties-form.html | 30 ++++++++++++++++++---------
 1 file changed, 20 insertions(+), 10 deletions(-)

diff --git a/client/imports/parties-form/parties-form.html b/client/imports/parties-form/parties-form.html
index 1dc86c7..3d07605 100644
--- a/client/imports/parties-form/parties-form.html
+++ b/client/imports/parties-form/parties-form.html
@@ -1,11 +1,21 @@
-<form [ngFormModel]="partiesForm" #f="ngForm" (submit)="addParty(f.value)">
-  <label>Name</label>
-  <input type="text" ngControl="name">
-  <label>Description</label>
-  <input type="text" ngControl="description">
-  <label>Location</label>
-  <input type="text" ngControl="location">
-  <button>Add</button>
-  <label>Public</label>
-  <input type="checkbox" ngControl="public">
+<form [ngFormModel]="partiesForm" #f="ngForm" (submit)="addParty(f.value)" class="form-inline">
+  <fieldset class="form-group">
+    <label for="partyName">Party name</label>
+    <input id="partyName" class="form-control" type="text" ngControl="name" placeholder="Party name" />
+
+    <label for="description">Description</label>
+    <input id="description" class="form-control" ype="text" ngControl="description" placeholder="Description">
+
+    <label for="location_name">Location</label>
+    <input id="location_name" class="form-control" type="text" ngControl="location" placeholder="Location name">
+
+    <div class="checkbox">
+      <label>
+        <input type="checkbox" ngControl="public">
+        Public
+      </label>
+    </div>
+
+    <button type="submit" class="btn btn-primary">Add Party!</button>
+  </fieldset>
 </form>
\ No newline at end of file
-- 
2.6.4


From c4efde007498b9c2abb47c7b641be2a1f48f6507 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Thu, 4 Feb 2016 14:24:29 +0200
Subject: [PATCH 149/173] Step 17.10: Update parties list layout

---
 client/imports/parties-list/parties-list.html | 129 +++++++++++++++++++-------
 1 file changed, 95 insertions(+), 34 deletions(-)

diff --git a/client/imports/parties-list/parties-list.html b/client/imports/parties-list/parties-list.html
index 76f0bc4..16d0de6 100644
--- a/client/imports/parties-list/parties-list.html
+++ b/client/imports/parties-list/parties-list.html
@@ -1,39 +1,100 @@
-<div>
-  <parties-form [hidden]="!user" style="float: left"></parties-form>
-  <input type="text" #searchtext placeholder="Search by Location">
-  <button type="button" (click)="search(searchtext.value)">Search</button>
-  <h1>Parties:</h1>
-  <div>
-    <select #sort (change)="changeSortOrder(sort.value)">
+<div class="row">
+  <div class="col-md-12">
+    <div class="jumbotron">
+      <h3>Create a new party!</h3>
+      <parties-form [hidden]="!user"></parties-form>
+      <div [hidden]="user">You need to login to create new parties!</div>
+    </div>
+  </div>
+</div>
+<div class="row ma-filters">
+  <div class="col-md-6">
+    <h3>All Parties:</h3>
+    <form class="form-inline">
+      <input type="text" class="form-control" #searchtext placeholder="Search by Location">
+      <button type="button" class="btn btn-primary" (click)="search(searchtext.value)">Search</button>
+      Sort by name: <select class="form-control" #sort (change)="changeSortOrder(sort.value)">
       <option value="1" selected>Ascending</option>
       <option value="-1">Descending</option>
     </select>
+    </form>
+  </div>
+</div>
+<div class="row">
+  <div class="col-md-6">
+    <ul class="list-group">
+      <li class="list-group-item">
+        <pagination-controls (change)="onPageChanged($event.page)"></pagination-controls>
+      </li>
+      <li *ngFor="#party of parties | paginate:{currentPage: 1, itemsPerPage: pageSize, totalItems: partiesSize}"
+          class="list-group-item ma-party-item">
+        <div class="row">
+          <div class="col-sm-8">
+            <h2 class="ma-party-name">
+              <a [routerLink]="['/PartyDetails', {partyId: party._id}]">{{party.name}}</a>
+            </h2>
+            @ {{party.location.name}}
+            <p class="ma-party-description">
+              {{party.description}}
+            </p>
+          </div>
+          <div class="col-sm-4">
+            <button class="btn btn-danger pull-right" [hidden]="!isOwner(party)" (click)="removeParty(party)"><i
+                    class="fa fa-times"></i></button>
+          </div>
+        </div>
+        <div class="row ma-party-item-bottom">
+          <div class="col-sm-4">
+            <div class="ma-rsvp-sum">
+              <div class="ma-rsvp-amount">
+                <div class="ma-amount">
+                  {{party | rsvp:'yes'}}
+                </div>
+                <div class="ma-rsvp-title">
+                  YES
+                </div>
+              </div>
+              <div class="ma-rsvp-amount">
+                <div class="ma-amount">
+                  {{party | rsvp:'maybe'}}
+                </div>
+                <div class="ma-rsvp-title">
+                  MAYBE
+                </div>
+              </div>
+              <div class="ma-rsvp-amount">
+                <div class="ma-amount">
+                  {{party | rsvp:'no'}}
+                </div>
+                <div class="ma-rsvp-title">
+                  NO
+                </div>
+              </div>
+            </div>
+          </div>
+        </div>
+      </li>
+      <li class="list-group-item">
+        <pagination-controls (change)="onPageChanged($event.page)"></pagination-controls>
+      </li>
+    </ul>
+  </div>
+  <div class="col-md-6">
+    <ul class="list-group">
+      <li class="list-group-item">
+        <sebm-google-map
+                [latitude]="0"
+                [longitude]="0"
+                [zoom]="1">
+          <div *ngFor="#party of parties">
+            <sebm-google-map-marker
+                    *ngIf="party.location.lat"
+                    [latitude]="party.location.lat"
+                    [longitude]="party.location.lng">
+            </sebm-google-map-marker>
+          </div>
+        </sebm-google-map>
+      </li>
+    </ul>
   </div>
-  <ul>
-    <li *ngFor="#party of parties | paginate:{currentPage: 1, itemsPerPage: pageSize, totalItems: partiesSize}">
-      <a [routerLink]="['/PartyDetails', {partyId: party._id}]">{{party.name}}</a>
-      <p>{{party.description}}</p>
-      <p>{{party.location.name}}</p>
-      <button [hidden]="!isOwner(party)"  (click)="removeParty(party)">X</button>
-      <div>
-        Who is coming:
-        Yes - {{party | rsvp:'yes'}}
-        Maybe - {{party | rsvp:'maybe'}}
-        No - {{party | rsvp:'no'}}
-      </div>
-    </li>
-  </ul>
-  <sebm-google-map
-          [latitude]="0"
-          [longitude]="0"
-          [zoom]="1">
-    <div *ngFor="#party of parties">
-      <sebm-google-map-marker
-              *ngIf="party.location.lat"
-              [latitude]="party.location.lat"
-              [longitude]="party.location.lng">
-      </sebm-google-map-marker>
-    </div>
-  </sebm-google-map>
-  <pagination-controls (change)="onPageChanged($event.page)"></pagination-controls>
 </div>
\ No newline at end of file
-- 
2.6.4


From 00e5076a3f9972e4a49ca33cf337a592842c3345 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Thu, 4 Feb 2016 14:25:08 +0200
Subject: [PATCH 150/173] Step 17.11: Use LESS and add some style

---
 client/css/main.css                                |   4 -
 .../imports/parties-list/parties-list.import.less  | 125 +++++++++++++++++++++
 client/style/main.less                             |  41 +++++++
 3 files changed, 166 insertions(+), 4 deletions(-)
 delete mode 100644 client/css/main.css
 create mode 100644 client/imports/parties-list/parties-list.import.less
 create mode 100644 client/style/main.less

diff --git a/client/css/main.css b/client/css/main.css
deleted file mode 100644
index a5234b3..0000000
--- a/client/css/main.css
+++ /dev/null
@@ -1,4 +0,0 @@
-.sebm-google-map-container {
-    width: 400px;
-    height: 400px;
-}
\ No newline at end of file
diff --git a/client/imports/parties-list/parties-list.import.less b/client/imports/parties-list/parties-list.import.less
new file mode 100644
index 0000000..f9b7bbc
--- /dev/null
+++ b/client/imports/parties-list/parties-list.import.less
@@ -0,0 +1,125 @@
+.ma-add-button-container {
+  button.btn {
+    background: @color3;
+    float: right;
+    margin-right: 5px;
+    outline: none;
+    i {
+      color: @color5;
+    }
+  }
+}
+
+.ma-parties-col {
+  padding-top: 20px;
+}
+
+.ma-filters {
+  margin-bottom: 10px;
+}
+
+.ma-party-item {
+  .ma-party-name {
+    margin-bottom: 20px;
+    a {
+      color: @color6;
+      text-decoration: none !important;
+      font-weight: 400;
+    }
+  }
+  .ma-party-description {
+    color: @color6;
+    font-weight: 300;
+    padding-left: 18px;
+    font-size: 14px;
+  }
+
+  .ma-remove {
+    color: lighten(@color7, 20%);
+    position: absolute;
+    right: 20px;
+    top: 20px;
+    &:hover {
+      color: @color7;
+    }
+  }
+
+  .ma-party-item-bottom {
+    padding-top: 10px;
+    .ma-posted-by-col {
+      .ma-posted-by {
+        color: darken(@color4, 30%);
+        font-size: 12px;
+      }
+      .ma-everyone-invited {
+        @media (max-width: 400px) {
+          display: block;
+          i {
+            margin-left: 0px !important;
+          }
+        }
+        font-size: 12px;
+        color: darken(@color4, 10%);
+        i {
+          color: darken(@color4, 10%);
+          margin-left: 5px;
+        }
+      }
+    }
+
+    .ma-rsvp-buttons {
+      input.btn {
+        color: darken(@color3, 20%);
+        background: transparent !important;
+        outline: none;
+        padding-left: 0;
+        &:active {
+          box-shadow: none;
+        }
+        &:hover {
+          color: darken(@color3, 30%);
+        }
+        &.btn-primary {
+          color: lighten(@color3, 10%);
+          border: 0;
+          background: transparent !important;
+        }
+      }
+    }
+
+    .ma-rsvp-sum {
+      width: 160px;
+      @media (min-width: 400px) {
+        float: right;
+      }
+      @media (max-width: 400px) {
+        margin: 0 auto;
+      }
+    }
+    .ma-rsvp-amount {
+      display: inline-block;
+      text-align: center;
+      width: 50px;
+      .ma-amount {
+        font-weight: bold;
+        font-size: 20px;
+      }
+      .ma-rsvp-title {
+        font-size: 11px;
+        color: #aaa;
+        text-transform: uppercase;
+      }
+    }
+  }
+}
+
+.ma-angular-map-col {
+  .angular-google-map-container, .angular-google-map {
+    height: 100%;
+    width: 100%;
+  }
+}
+
+.search-form {
+  margin-bottom: 1em;
+}
\ No newline at end of file
diff --git a/client/style/main.less b/client/style/main.less
new file mode 100644
index 0000000..be3061e
--- /dev/null
+++ b/client/style/main.less
@@ -0,0 +1,41 @@
+@color1 : #2F2933;
+@color2 : #01A2A6;
+@color3 : #29D9C2;
+@color4 : #BDF271;
+@color5 : #FFFFA6;
+@color6 : #2F2933;
+@color7 : #FF6F69;
+
+html, body {
+    height: 100%;
+}
+
+body {
+    background-color: #f8f8f8;
+    font-family: 'Muli', sans-serif;
+}
+
+.sebm-google-map-container {
+    width: 450px;
+    height: 450px;
+}
+
+.navbar {
+    background-color: #ffffff;
+    border-bottom: #eee 1px solid;
+    color: @color3;
+    font-family: 'Muli', sans-serif;
+    a {
+        color: @color3;
+        text-decoration: none !important;
+    }
+
+    .navbar-right-container {
+        position: absolute;
+        top: 17px;
+        right: 17px;
+    }
+}
+
+@import "../imports/parties-list/parties-list.import.less";
+@import "../imports/party-details/party-details.import.less";
-- 
2.6.4


From a6166ee7de310deaf9915f1b61bf11f24637898f Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Fri, 5 Feb 2016 16:16:26 +0200
Subject: [PATCH 151/173] Step 17.12: Add style file for the party details page

---
 .../party-details/party-details.import.less        | 32 ++++++++++++++++++++++
 1 file changed, 32 insertions(+)
 create mode 100644 client/imports/party-details/party-details.import.less

diff --git a/client/imports/party-details/party-details.import.less b/client/imports/party-details/party-details.import.less
new file mode 100644
index 0000000..82dcfc3
--- /dev/null
+++ b/client/imports/party-details/party-details.import.less
@@ -0,0 +1,32 @@
+.ma-party-details-container {
+  padding: 20px;
+
+  .angular-google-map-container {
+    width: 100%;
+    height: 100%;
+  }
+
+  .angular-google-map {
+    width: 100%;
+    height: 400px;
+  }
+
+  .ma-map-title {
+    font-size: 16px;
+    font-weight: bolder;
+  }
+
+  .ma-invite-list {
+    margin-top: 20px;
+    margin-bottom: 20px;
+
+    h3 {
+      font-size: 16px;
+      font-weight: bolder;
+    }
+
+    ul {
+      padding: 0;
+    }
+  }
+}
\ No newline at end of file
-- 
2.6.4


From bdf2425220782e18a422618327acbcc4cd775893 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Fri, 5 Feb 2016 16:16:43 +0200
Subject: [PATCH 152/173] Step 17.13: Update the layout of the party details
 page

---
 client/imports/party-details/party-details.html | 90 +++++++++++++++----------
 1 file changed, 55 insertions(+), 35 deletions(-)

diff --git a/client/imports/party-details/party-details.html b/client/imports/party-details/party-details.html
index b896d47..a484a5b 100644
--- a/client/imports/party-details/party-details.html
+++ b/client/imports/party-details/party-details.html
@@ -1,40 +1,60 @@
-<form (submit)="saveParty(party)" *ngIf="party">
-  <label>Name</label>
-  <input [disabled]="!isOwner" type="text" [(ngModel)]="party.name">
+<div class="row ma-party-details-container">
+  <div class="col-sm-6 col-sm-offset-3">
 
-  <label>Description</label>
-  <input [disabled]="!isOwner" type="text" [(ngModel)]="party.description">
+    <legend>View and Edit Your Party Details:</legend>
+    <form class="form-horizontal" (submit)="saveParty(party)" *ngIf="party">
+      <div class="form-group">
+        <label>Party Name</label>
+        <input [disabled]="!isOwner" type="text" [(ngModel)]="party.name" class="form-control">
+      </div>
+      <div class="form-group">
+        <label>Description</label>
+        <input [disabled]="!isOwner" type="text" [(ngModel)]="party.description" class="form-control">
+      </div>
+      <div class="form-group">
+        <label>Location name</label>
+        <input [disabled]="!isOwner" type="text" [(ngModel)]="party.location.name" class="form-control">
+      </div>
+      <div class="form-group">
+        <button [disabled]="!isOwner" type="submit" class="btn btn-primary">Save</button>
+        <button [routerLink]="['/PartiesList']" class="btn">Back</button>
+      </div>
+    </form>
 
-  <label>Location</label>
-  <input [disabled]="!isOwner" type="text" [(ngModel)]="party.location.name">
+    <div class="ma-invite-list" ng-show="partyDetails.canInvite()">
+      <h3>
+        Users to invite:
+      </h3>
+      <ul>
+        <li *ngFor="#user of users">
+          <div>{{ user | displayName }}</div>
+          <button (click)="invite(user)" class="btn btn-primary btn-sm">Invite</button>
+        </li>
+      </ul>
+      <div *ngIf="isInvited">
+        <h2>Reply to the invitation</h2>
+        <input type="button" class="btn btn-primary" value="I'm going!" (click)="reply('yes')">
+        <input type="button" class="btn btn-warning" value="Maybe" (click)="reply('maybe')">
+        <input type="button" class="btn btn-danger" value="No" (click)="reply('no')">
+      </div>
+    </div>
 
-  <button [disabled]="!isOwner" type="submit">Save</button>
-  <button [routerLink]="['/PartiesList']">Cancel</button>
-</form>
+    <h3 class="ma-map-title">
+      Click the map to set the party location
+    </h3>
 
-<ul *ngIf="isOwner || isPublic">
-  Users to invite:
-  <li *ngFor="#user of users">
-    <div>{{ user | displayName }}</div>
-    <button (click)="invite(user)">Invite</button>
-  </li>
-</ul>
-
-<div *ngIf="isInvited">
-  <h2>Reply to the invitation</h2>
-  <input type="button" value="I'm going!" (click)="reply('yes')">
-  <input type="button" value="Maybe" (click)="reply('maybe')">
-  <input type="button" value="No" (click)="reply('no')">
+    <div class="angular-google-map-container">
+      <sebm-google-map
+              [latitude]="lat || centerLat"
+              [longitude]="lng || centerLng"
+              [zoom]="8"
+              (mapClick)="mapClicked($event)">
+        <sebm-google-map-marker
+                *ngIf="lat && lng"
+                [latitude]="lat"
+                [longitude]="lng">
+        </sebm-google-map-marker>
+      </sebm-google-map>
+    </div>
+  </div>
 </div>
-
-<sebm-google-map
-        [latitude]="lat || centerLat"
-        [longitude]="lng || centerLng"
-        [zoom]="8"
-        (mapClick)="mapClicked($event)">
-  <sebm-google-map-marker
-          *ngIf="lat && lng"
-          [latitude]="lat"
-          [longitude]="lng">
-  </sebm-google-map-marker>
-</sebm-google-map>
\ No newline at end of file
-- 
2.6.4


From e22c61d389ddf3583b0758d8c1354cd71350eb32 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Fri, 5 Feb 2016 18:08:25 +0200
Subject: [PATCH 153/173] Step 18.2: Remove bootstrap import from the project

---
 client/app.ts | 1 -
 1 file changed, 1 deletion(-)

diff --git a/client/app.ts b/client/app.ts
index 8c5aa6d..3351486 100644
--- a/client/app.ts
+++ b/client/app.ts
@@ -1,6 +1,5 @@
 import 'reflect-metadata';
 import 'zone.js/dist/zone';
-import 'bootstrap4-webpack-package';
 
 import {Component, provide} from 'angular2/core';
 import {bootstrap} from 'angular2-meteor-auto-bootstrap';
-- 
2.6.4


From c0096473da72cc5f150e6d1c8c0021bb1ac3df04 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Sat, 6 Feb 2016 10:32:42 +0200
Subject: [PATCH 154/173] Step 18.3: Add ng2 material package

---
 package.json | 1 +
 1 file changed, 1 insertion(+)

diff --git a/package.json b/package.json
index 16362b0..73c7bb8 100644
--- a/package.json
+++ b/package.json
@@ -18,6 +18,7 @@
     "angular2-google-maps": "0.9.0",
     "angular2-meteor-accounts-ui": "git+https://github.com/Urigo/angular2-meteor-accounts-ui.git",
     "angular2-meteor-auto-bootstrap": "git+https://github.com/Urigo/angular2-meteor-auto-bootstrap.git",
+    "ng2-material": "0.2.12",
     "angular2-pagination": "github:urigo/angular2-pagination",
     "bootstrap4-webpack-package": "github:dotansimha/bootstrap4-webpack-package",
     "meteor-node-stubs": "^0.2.1"
-- 
2.6.4


From 1050f364498e8661dafe80921969410206e83b5f Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Sat, 6 Feb 2016 10:32:57 +0200
Subject: [PATCH 155/173] Step 18.4: Import ng2 material components to the main
 app

---
 client/app.ts | 7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

diff --git a/client/app.ts b/client/app.ts
index 3351486..d83ae5a 100644
--- a/client/app.ts
+++ b/client/app.ts
@@ -1,5 +1,8 @@
 import 'reflect-metadata';
 import 'zone.js/dist/zone';
+import 'ng2-material/all.webpack';
+import {MATERIAL_PROVIDERS, MATERIAL_DIRECTIVES} from 'ng2-material/all';
+
 
 import {Component, provide} from 'angular2/core';
 import {bootstrap} from 'angular2-meteor-auto-bootstrap';
@@ -13,7 +16,7 @@ import {LoginButtons} from 'angular2-meteor-accounts-ui';
 @Component({
   selector: 'app',
   templateUrl: 'client/app.html',
-  directives: [ROUTER_DIRECTIVES, LoginButtons]
+  directives: [ROUTER_DIRECTIVES, LoginButtons, MATERIAL_DIRECTIVES]
 })
 @RouteConfig([
   { path: '/', as: 'PartiesList', component: PartiesList },
@@ -21,4 +24,4 @@ import {LoginButtons} from 'angular2-meteor-accounts-ui';
 ])
 class Socially {}
 
-bootstrap(Socially, [ROUTER_PROVIDERS, ANGULAR2_GOOGLE_MAPS_PROVIDERS, provide(APP_BASE_HREF, { useValue: '/' })]);
\ No newline at end of file
+bootstrap(Socially, [MATERIAL_PROVIDERS, ROUTER_PROVIDERS, ANGULAR2_GOOGLE_MAPS_PROVIDERS, provide(APP_BASE_HREF, { useValue: '/' })]);
-- 
2.6.4


From c1a272dcf96a445d2c672b19005782525d9cb828 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Sat, 6 Feb 2016 10:33:22 +0200
Subject: [PATCH 156/173] Step 18.5: Import the fonts for material

---
 client/index.html | 5 ++---
 1 file changed, 2 insertions(+), 3 deletions(-)

diff --git a/client/index.html b/client/index.html
index 8a56f1a..c6c91b2 100644
--- a/client/index.html
+++ b/client/index.html
@@ -1,8 +1,7 @@
 <head>
   <meta name="viewport" content="width=device-width, initial-scale=1">
-  <link href='http://fonts.googleapis.com/css?family=Muli:400,300' rel='stylesheet' type='text/css'>
-  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css">
+  <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
 </head>
 <body>
-  <app></app>
+  <app layout="column"></app>
 </body>
\ No newline at end of file
-- 
2.6.4


From e5305a082cf3135215e00f315dc8216acde6666c Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Sat, 6 Feb 2016 10:33:40 +0200
Subject: [PATCH 157/173] Step 18.6: Change the nav bar and the layout

---
 client/app.html | 17 ++++++++++-------
 1 file changed, 10 insertions(+), 7 deletions(-)

diff --git a/client/app.html b/client/app.html
index dffc2ea..abfc8de 100644
--- a/client/app.html
+++ b/client/app.html
@@ -1,7 +1,10 @@
-<nav class="navbar navbar-light bg-faded">
-  <a class="navbar-brand" href="#">Socially</a>
-  <login-buttons class="pull-right"></login-buttons>
-</nav>
-<div class="container-fluid">
-  <router-outlet></router-outlet>
-</div>
\ No newline at end of file
+<md-toolbar md-scroll-shrink layout="row" layout-align="start center" layout-padding>
+  <h2>
+    <a ui-sref="parties"><span class="md-title">Socially</span></a>
+  </h2>
+  <span flex></span>
+  <div class="navbar-right navbar-text">
+    <login-buttons></login-buttons>
+  </div>
+</md-toolbar>
+<router-outlet flex-gt-sm layout-gt-sm="row"></router-outlet>
\ No newline at end of file
-- 
2.6.4


From c229d09e592175955e43d08903907a71d51affa8 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Sat, 6 Feb 2016 11:02:13 +0200
Subject: [PATCH 158/173] Step 18.7: Import the components into the parties
 form

---
 client/imports/parties-form/parties-form.ts | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/client/imports/parties-form/parties-form.ts b/client/imports/parties-form/parties-form.ts
index cb1cf94..a462c11 100644
--- a/client/imports/parties-form/parties-form.ts
+++ b/client/imports/parties-form/parties-form.ts
@@ -2,10 +2,13 @@ import 'reflect-metadata';
 import {Component} from 'angular2/core';
 import {FormBuilder, ControlGroup, Validators, Control} from 'angular2/common';
 import {Parties} from '../../../collections/parties.ts';
+import {MATERIAL_DIRECTIVES} from 'ng2-material/all';
+
 
 @Component({
   selector: 'parties-form',
-  templateUrl: '/client/imports/parties-form/parties-form.html'
+  templateUrl: '/client/imports/parties-form/parties-form.html',
+  directives: [MATERIAL_DIRECTIVES]
 })
 export class PartiesForm {
   partiesForm: ControlGroup;
-- 
2.6.4


From f1dc68f00ddfb6876552aaa18379a57eb15b76f4 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Sat, 6 Feb 2016 11:02:27 +0200
Subject: [PATCH 159/173] Step 18.8: Change the layout of the parties form

---
 client/imports/parties-form/parties-form.html | 41 ++++++++++++++-------------
 1 file changed, 21 insertions(+), 20 deletions(-)

diff --git a/client/imports/parties-form/parties-form.html b/client/imports/parties-form/parties-form.html
index 3d07605..af0c995 100644
--- a/client/imports/parties-form/parties-form.html
+++ b/client/imports/parties-form/parties-form.html
@@ -1,21 +1,22 @@
-<form [ngFormModel]="partiesForm" #f="ngForm" (submit)="addParty(f.value)" class="form-inline">
-  <fieldset class="form-group">
-    <label for="partyName">Party name</label>
-    <input id="partyName" class="form-control" type="text" ngControl="name" placeholder="Party name" />
-
-    <label for="description">Description</label>
-    <input id="description" class="form-control" ype="text" ngControl="description" placeholder="Description">
-
-    <label for="location_name">Location</label>
-    <input id="location_name" class="form-control" type="text" ngControl="location" placeholder="Location name">
-
-    <div class="checkbox">
-      <label>
-        <input type="checkbox" ngControl="public">
-        Public
-      </label>
-    </div>
-
-    <button type="submit" class="btn btn-primary">Add Party!</button>
-  </fieldset>
+<form [ngFormModel]="partiesForm" #f="ngForm" (submit)="addParty(f.value)">
+  <div layout-gt-sm="row">
+    <md-input-container class="md-block" flex-gt-sm>
+      <label>Party name</label>
+      <input md-input ngControl="name" placeholder="Party name">
+    </md-input-container>
+    <md-input-container class="md-block" flex-gt-sm>
+      <label>Description</label>
+      <input md-input type="text" ngControl="description" placeholder="Description">
+    </md-input-container>
+    <md-input-container class="md-block" flex-gt-sm>
+      <label>Location name</label>
+      <input md-input ngControl="location" placeholder="Location name">
+    </md-input-container>
+    <md-input-container class="md-block" flex-gt-sm>
+      <md-checkbox [(checked)]="partiesForm.public">
+        Public?
+      </md-checkbox>
+    </md-input-container>
+    <button type="submit" md-raised-button class="md-raised md-primary">Add Party!</button>
+  </div>
 </form>
\ No newline at end of file
-- 
2.6.4


From aeda6d47f39180c5e2b3520c8746ad3264089051 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Sat, 6 Feb 2016 11:14:41 +0200
Subject: [PATCH 160/173] Step 18.9: Add the import to the parties list

---
 client/imports/parties-list/parties-list.ts | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/client/imports/parties-list/parties-list.ts b/client/imports/parties-list/parties-list.ts
index 9d63667..dcc7173 100644
--- a/client/imports/parties-list/parties-list.ts
+++ b/client/imports/parties-list/parties-list.ts
@@ -10,12 +10,13 @@ import {PaginationService, PaginatePipe, PaginationControlsCmp} from 'angular2-p
 import {Counts} from 'meteor/tmeasday:publish-counts';
 import {RsvpPipe} from '../pipes/pipes.ts';
 import {ANGULAR2_GOOGLE_MAPS_DIRECTIVES} from 'angular2-google-maps/core';
+import {MATERIAL_DIRECTIVES} from 'ng2-material/all';
 
 @Component({
   selector: 'parties-list',
   viewProviders: [PaginationService],
   templateUrl: '/client/imports/parties-list/parties-list.html',
-  directives: [ANGULAR2_GOOGLE_MAPS_DIRECTIVES, PartiesForm, RouterLink, PaginationControlsCmp],
+  directives: [MATERIAL_DIRECTIVES, ANGULAR2_GOOGLE_MAPS_DIRECTIVES, PartiesForm, RouterLink, PaginationControlsCmp],
   pipes: [PaginatePipe, RsvpPipe]
 })
 @InjectUser()
-- 
2.6.4


From bb697c96ca7ee688790cafb3bbdd9ea59e773b55 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Sat, 6 Feb 2016 11:15:01 +0200
Subject: [PATCH 161/173] Step 18.10: Change that layout of the parties list

---
 client/imports/parties-list/parties-list.html | 162 +++++++++++---------------
 1 file changed, 67 insertions(+), 95 deletions(-)

diff --git a/client/imports/parties-list/parties-list.html b/client/imports/parties-list/parties-list.html
index 16d0de6..f0d51a4 100644
--- a/client/imports/parties-list/parties-list.html
+++ b/client/imports/parties-list/parties-list.html
@@ -1,100 +1,72 @@
-<div class="row">
-  <div class="col-md-12">
-    <div class="jumbotron">
-      <h3>Create a new party!</h3>
-      <parties-form [hidden]="!user"></parties-form>
-      <div [hidden]="user">You need to login to create new parties!</div>
-    </div>
-  </div>
-</div>
-<div class="row ma-filters">
-  <div class="col-md-6">
-    <h3>All Parties:</h3>
-    <form class="form-inline">
-      <input type="text" class="form-control" #searchtext placeholder="Search by Location">
-      <button type="button" class="btn btn-primary" (click)="search(searchtext.value)">Search</button>
-      Sort by name: <select class="form-control" #sort (change)="changeSortOrder(sort.value)">
-      <option value="1" selected>Ascending</option>
-      <option value="-1">Descending</option>
-    </select>
-    </form>
-  </div>
-</div>
-<div class="row">
-  <div class="col-md-6">
-    <ul class="list-group">
-      <li class="list-group-item">
-        <pagination-controls (change)="onPageChanged($event.page)"></pagination-controls>
-      </li>
-      <li *ngFor="#party of parties | paginate:{currentPage: 1, itemsPerPage: pageSize, totalItems: partiesSize}"
-          class="list-group-item ma-party-item">
-        <div class="row">
-          <div class="col-sm-8">
-            <h2 class="ma-party-name">
-              <a [routerLink]="['/PartyDetails', {partyId: party._id}]">{{party.name}}</a>
-            </h2>
-            @ {{party.location.name}}
-            <p class="ma-party-description">
-              {{party.description}}
-            </p>
-          </div>
-          <div class="col-sm-4">
-            <button class="btn btn-danger pull-right" [hidden]="!isOwner(party)" (click)="removeParty(party)"><i
-                    class="fa fa-times"></i></button>
-          </div>
+<md-content flex layout="row" class="ma-parties-list">
+  <div layout="row" flex>
+    <div flex="50">
+      <div>
+        <md-content class="new-party-form-container">
+          <md-toolbar>
+            <div class="md-toolbar-tools">
+              <h3>Create a new party!</h3>
+            </div>
+          </md-toolbar>
+          <parties-form [hidden]="!user"></parties-form>
+          <div [hidden]="user">You need to login to create new parties!</div>
+        </md-content>
+        <div layout-padding layout="row">
+          <md-input-container class="md-block" flex-gt-sm>
+            <label>Search</label>
+            <input type="text" md-input #searchtext placeholder="Search by Location">
+          </md-input-container>
+          Sort by name: <select class="form-control" #sort (change)="changeSortOrder(sort.value)">
+            <option value="1" selected>Ascending</option>
+            <option value="-1">Descending</option>
+          </select>
         </div>
-        <div class="row ma-party-item-bottom">
-          <div class="col-sm-4">
-            <div class="ma-rsvp-sum">
-              <div class="ma-rsvp-amount">
-                <div class="ma-amount">
-                  {{party | rsvp:'yes'}}
-                </div>
-                <div class="ma-rsvp-title">
-                  YES
-                </div>
-              </div>
-              <div class="ma-rsvp-amount">
-                <div class="ma-amount">
-                  {{party | rsvp:'maybe'}}
-                </div>
-                <div class="ma-rsvp-title">
-                  MAYBE
-                </div>
-              </div>
-              <div class="ma-rsvp-amount">
-                <div class="ma-amount">
-                  {{party | rsvp:'no'}}
-                </div>
-                <div class="ma-rsvp-title">
-                  NO
+      </div>
+      <md-content class="md-padding" style="padding-top:0;">
+        <pagination-controls (change)="onPageChanged($event.page)"></pagination-controls>
+        <div *ngFor="#party of parties | paginate:{currentPage: 1, itemsPerPage: pageSize, totalItems: partiesSize}" class="ma-party">
+          <md-card>
+            <md-card-content>
+              <h2 class="md-title ma-name" style=""><a [routerLink]="['/PartyDetails', {partyId: party._id}]">{{party.name}}</a></h2>
+              <p class="ma-description" style="padding:0 10px;margin-bottom:35px;margin-top: 6px;">{{party.description}}</p>
+              <div layout="row">
+                <div layout="row" layout-align="end end">
+                  <div>
+                    <div class="rsvps-sum">
+                      <div class="rsvps-amount">{{party | rsvp:'yes'}}</div>
+                      <div class="rsvps-title">Yes</div>
+                    </div>
+                    <div class="rsvps-sum">
+                      <div class="rsvps-amount">{{party | rsvp:'maybe'}}</div>
+                      <div class="rsvps-title">Maybe</div>
+                    </div>
+                    <div class="rsvps-sum">
+                      <div class="rsvps-amount">{{party | rsvp:'no'}}</div>
+                      <div class="rsvps-title">No</div>
+                    </div>
+                  </div>
                 </div>
               </div>
-            </div>
-          </div>
+            </md-card-content>
+          </md-card>
         </div>
-      </li>
-      <li class="list-group-item">
-        <pagination-controls (change)="onPageChanged($event.page)"></pagination-controls>
-      </li>
-    </ul>
-  </div>
-  <div class="col-md-6">
-    <ul class="list-group">
-      <li class="list-group-item">
-        <sebm-google-map
-                [latitude]="0"
-                [longitude]="0"
-                [zoom]="1">
-          <div *ngFor="#party of parties">
-            <sebm-google-map-marker
-                    *ngIf="party.location.lat"
-                    [latitude]="party.location.lat"
-                    [longitude]="party.location.lng">
-            </sebm-google-map-marker>
-          </div>
-        </sebm-google-map>
-      </li>
-    </ul>
+      </md-content>
+    </div>
+    <div flex="50" layout="row" style="min-height:300px;">
+      <sebm-google-map
+              style="width: 100%; min-height:300px;"
+              flex layout="row"
+              [latitude]="0"
+              [longitude]="0"
+              [zoom]="1">
+        <div *ngFor="#party of parties">
+          <sebm-google-map-marker
+                  *ngIf="party.location.lat"
+                  [latitude]="party.location.lat"
+                  [longitude]="party.location.lng">
+          </sebm-google-map-marker>
+        </div>
+      </sebm-google-map>
+    </div>
   </div>
-</div>
\ No newline at end of file
+</md-content>
\ No newline at end of file
-- 
2.6.4


From 1267fae51055aa8179a599abb4af6268fc78dee2 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Sat, 6 Feb 2016 11:15:12 +0200
Subject: [PATCH 162/173] Step 18.11: Add some style and css

---
 .../imports/parties-list/parties-list.import.less  | 149 ++++++---------------
 1 file changed, 43 insertions(+), 106 deletions(-)

diff --git a/client/imports/parties-list/parties-list.import.less b/client/imports/parties-list/parties-list.import.less
index f9b7bbc..02d53a3 100644
--- a/client/imports/parties-list/parties-list.import.less
+++ b/client/imports/parties-list/parties-list.import.less
@@ -1,125 +1,62 @@
-.ma-add-button-container {
-  button.btn {
-    background: @color3;
-    float: right;
-    margin-right: 5px;
-    outline: none;
-    i {
-      color: @color5;
-    }
-  }
-}
-
-.ma-parties-col {
-  padding-top: 20px;
-}
-
-.ma-filters {
-  margin-bottom: 10px;
+.new-party-form-container {
+  margin: 20px;
+  border: 1px gainsboro solid;
 }
-
-.ma-party-item {
-  .ma-party-name {
-    margin-bottom: 20px;
-    a {
-      color: @color6;
-      text-decoration: none !important;
-      font-weight: 400;
-    }
+.ma-parties-list {
+  .sebm-google-map {
+    box-sizing: border-box;
+    -webkit-flex: 1;
+    -ms-flex: 1;
+    flex: 1;
+    -webkit-flex-direction: row;
+    -ms-flex-direction: row;
+    flex-direction: row;
+    box-sizing: border-box;
+    display: -webkit-flex;
+    display: -moz-flex;
+    display: -ms-flexbox;
+    display: flex;
   }
-  .ma-party-description {
-    color: @color6;
-    font-weight: 300;
-    padding-left: 18px;
-    font-size: 14px;
+
+  .angular-google-map-container {
+    box-sizing: border-box;
+    -webkit-flex: 1;
+    -ms-flex: 1;
+    flex: 1;
   }
 
-  .ma-remove {
-    color: lighten(@color7, 20%);
-    position: absolute;
-    right: 20px;
-    top: 20px;
-    &:hover {
-      color: @color7;
+  .rsvps-sum {
+    float: left;
+    width: 50px;
+    text-align: center;
+    .rsvps-amount {
+      font-size: 24px;
+    }
+    .rsvps-title {
+      font-size: 13px;
+      color: #aaa;
     }
   }
 
-  .ma-party-item-bottom {
-    padding-top: 10px;
-    .ma-posted-by-col {
-      .ma-posted-by {
-        color: darken(@color4, 30%);
-        font-size: 12px;
-      }
-      .ma-everyone-invited {
-        @media (max-width: 400px) {
-          display: block;
-          i {
-            margin-left: 0px !important;
-          }
-        }
-        font-size: 12px;
-        color: darken(@color4, 10%);
-        i {
-          color: darken(@color4, 10%);
-          margin-left: 5px;
-        }
-      }
+  .ma-party {
+    .party-image {
+      background-size: cover;
+      width: 100%;
+      height: 200px;
     }
 
-    .ma-rsvp-buttons {
-      input.btn {
-        color: darken(@color3, 20%);
-        background: transparent !important;
-        outline: none;
-        padding-left: 0;
-        &:active {
-          box-shadow: none;
-        }
-        &:hover {
-          color: darken(@color3, 30%);
-        }
-        &.btn-primary {
-          color: lighten(@color3, 10%);
-          border: 0;
-          background: transparent !important;
-        }
+    .ma-name {
+      a {
+        text-decoration: none;
+        color: #333;
       }
     }
+    .ma-description {
 
-    .ma-rsvp-sum {
-      width: 160px;
-      @media (min-width: 400px) {
-        float: right;
-      }
-      @media (max-width: 400px) {
-        margin: 0 auto;
-      }
-    }
-    .ma-rsvp-amount {
-      display: inline-block;
-      text-align: center;
-      width: 50px;
-      .ma-amount {
-        font-weight: bold;
-        font-size: 20px;
-      }
-      .ma-rsvp-title {
-        font-size: 11px;
-        color: #aaa;
-        text-transform: uppercase;
-      }
     }
   }
 }
 
-.ma-angular-map-col {
-  .angular-google-map-container, .angular-google-map {
-    height: 100%;
-    width: 100%;
-  }
-}
-
 .search-form {
   margin-bottom: 1em;
 }
\ No newline at end of file
-- 
2.6.4


From 602f8b1f32d6f3f3ad406fc142d727f5e145f1a6 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Sat, 6 Feb 2016 11:22:54 +0200
Subject: [PATCH 163/173] Step 18.12: Import the directives in the party
 details page

---
 client/imports/party-details/party-details.ts | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/client/imports/party-details/party-details.ts b/client/imports/party-details/party-details.ts
index 1c01945..f293028 100644
--- a/client/imports/party-details/party-details.ts
+++ b/client/imports/party-details/party-details.ts
@@ -6,11 +6,12 @@ import {RequireUser, InjectUser} from 'angular2-meteor-accounts-ui';
 import {MeteorComponent} from 'angular2-meteor/meteor_component';
 import {DisplayName} from '../pipes/pipes.ts';
 import {ANGULAR2_GOOGLE_MAPS_DIRECTIVES, MouseEvent} from 'angular2-google-maps/core';
+import {MATERIAL_DIRECTIVES} from 'ng2-material/all';
 
 @Component({
   selector: 'party-details',
   templateUrl: '/client/imports/party-details/party-details.html',
-  directives: [RouterLink, ANGULAR2_GOOGLE_MAPS_DIRECTIVES],
+  directives: [RouterLink, ANGULAR2_GOOGLE_MAPS_DIRECTIVES, MATERIAL_DIRECTIVES],
   pipes: [DisplayName]
 })
 @RequireUser()
-- 
2.6.4


From 987b182df016ee0694460247cbcbf30c77e327bf Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Sat, 6 Feb 2016 11:23:20 +0200
Subject: [PATCH 164/173] Step 18.13: Update the layout of the party details
 page

---
 client/imports/party-details/party-details.html | 106 ++++++++++++------------
 1 file changed, 51 insertions(+), 55 deletions(-)

diff --git a/client/imports/party-details/party-details.html b/client/imports/party-details/party-details.html
index a484a5b..45286ef 100644
--- a/client/imports/party-details/party-details.html
+++ b/client/imports/party-details/party-details.html
@@ -1,60 +1,56 @@
-<div class="row ma-party-details-container">
-  <div class="col-sm-6 col-sm-offset-3">
+<div layout="row" flex class="ma-party-details" *ngIf="party">
+  <div flex="33" offset="33">
+    <md-content class="new-party-form-container">
+      <md-toolbar>
+        <div class="md-toolbar-tools">
+          <h3>Your party details:</h3>
+        </div>
+      </md-toolbar>
+      <form layout="column">
+        <md-input-container>
+          <label>Party Name</label>
+          <input md-input [disabled]="!isOwner" type="text" [(ngModel)]="party.name">
+        </md-input-container>
+        <md-input-container>
+          <label>Party Description</label>
+          <input md-input [disabled]="!isOwner" type="text" [(ngModel)]="party.description">
+        </md-input-container>
+        <md-input-container>
+          <label>Location name</label>
+          <input md-input [disabled]="!isOwner" type="text" [(ngModel)]="party.location.name" class="form-control">
+        </md-input-container>
+        <md-checkbox [(checked)]="party.public" aria-label="Public">
+          Is public
+        </md-checkbox>
 
-    <legend>View and Edit Your Party Details:</legend>
-    <form class="form-horizontal" (submit)="saveParty(party)" *ngIf="party">
-      <div class="form-group">
-        <label>Party Name</label>
-        <input [disabled]="!isOwner" type="text" [(ngModel)]="party.name" class="form-control">
-      </div>
-      <div class="form-group">
-        <label>Description</label>
-        <input [disabled]="!isOwner" type="text" [(ngModel)]="party.description" class="form-control">
-      </div>
-      <div class="form-group">
-        <label>Location name</label>
-        <input [disabled]="!isOwner" type="text" [(ngModel)]="party.location.name" class="form-control">
-      </div>
-      <div class="form-group">
-        <button [disabled]="!isOwner" type="submit" class="btn btn-primary">Save</button>
-        <button [routerLink]="['/PartiesList']" class="btn">Back</button>
-      </div>
-    </form>
+        <div layout="row" layout-align="left">
+          <button [disabled]="!isOwner" type="submit" md-raised-button class="md-raised md-primary">Save</button>
+          <button [routerLink]="['/PartiesList']" md-raised-button class="md-raised">Back</button>
+        </div>
 
-    <div class="ma-invite-list" ng-show="partyDetails.canInvite()">
-      <h3>
-        Users to invite:
-      </h3>
-      <ul>
-        <li *ngFor="#user of users">
-          <div>{{ user | displayName }}</div>
-          <button (click)="invite(user)" class="btn btn-primary btn-sm">Invite</button>
-        </li>
-      </ul>
-      <div *ngIf="isInvited">
-        <h2>Reply to the invitation</h2>
-        <input type="button" class="btn btn-primary" value="I'm going!" (click)="reply('yes')">
-        <input type="button" class="btn btn-warning" value="Maybe" (click)="reply('maybe')">
-        <input type="button" class="btn btn-danger" value="No" (click)="reply('no')">
-      </div>
-    </div>
+        <md-list>
+          <md-subheader class="md-no-sticky">Users to invite:</md-subheader>
+          <md-list-item *ngFor="#user of users">
+            <div>{{ user | displayName }}</div>
+            <button (click)="invite(user)" md-raised-button class="md-raised">Invite</button>
+          </md-list-item>
+        </md-list>
 
-    <h3 class="ma-map-title">
-      Click the map to set the party location
-    </h3>
-
-    <div class="angular-google-map-container">
-      <sebm-google-map
-              [latitude]="lat || centerLat"
-              [longitude]="lng || centerLng"
-              [zoom]="8"
-              (mapClick)="mapClicked($event)">
-        <sebm-google-map-marker
-                *ngIf="lat && lng"
-                [latitude]="lat"
-                [longitude]="lng">
-        </sebm-google-map-marker>
-      </sebm-google-map>
-    </div>
+        <div class="angular-google-map-container">
+          <sebm-google-map
+                  style="height: 300px;"
+                  [latitude]="lat || centerLat"
+                  [longitude]="lng || centerLng"
+                  [zoom]="8"
+                  (mapClick)="mapClicked($event)">
+            <sebm-google-map-marker
+                    *ngIf="lat && lng"
+                    [latitude]="lat"
+                    [longitude]="lng">
+            </sebm-google-map-marker>
+          </sebm-google-map>
+        </div>
+      </form>
+    </md-content>
   </div>
 </div>
-- 
2.6.4


From 818be1f47a1d958a06de4a46753b429a32c23a30 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Sat, 6 Feb 2016 13:38:10 +0200
Subject: [PATCH 165/173] Step 18.14: Replace login buttons with custom buttons

---
 client/app.html | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

diff --git a/client/app.html b/client/app.html
index abfc8de..a5bb6b8 100644
--- a/client/app.html
+++ b/client/app.html
@@ -4,7 +4,14 @@
   </h2>
   <span flex></span>
   <div class="navbar-right navbar-text">
-    <login-buttons></login-buttons>
+    <div [hidden]="user">
+      <button md-button [routerLink]="['/Login']" >Login</button>
+      <button md-button [routerLink]="['/Signup']">Sign up</button>
+    </div>
+    <div [hidden]="!user">
+      <span>{{ user | displayName }}</span>
+      <button md-button (click)="logout()">Logout</button>
+    </div>
   </div>
 </md-toolbar>
 <router-outlet flex-gt-sm layout-gt-sm="row"></router-outlet>
\ No newline at end of file
-- 
2.6.4


From 8346fb1fe8cce0020814f36200dc43b6ec6149fd Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Sat, 6 Feb 2016 13:38:32 +0200
Subject: [PATCH 166/173] Step 18.15: Add logic to support custom login

---
 client/app.ts | 24 +++++++++++++++++++++---
 1 file changed, 21 insertions(+), 3 deletions(-)

diff --git a/client/app.ts b/client/app.ts
index d83ae5a..a69d184 100644
--- a/client/app.ts
+++ b/client/app.ts
@@ -2,6 +2,7 @@ import 'reflect-metadata';
 import 'zone.js/dist/zone';
 import 'ng2-material/all.webpack';
 import {MATERIAL_PROVIDERS, MATERIAL_DIRECTIVES} from 'ng2-material/all';
+import {MeteorComponent} from 'angular2-meteor/meteor_component';
 
 
 import {Component, provide} from 'angular2/core';
@@ -12,16 +13,33 @@ import {PartyDetails} from './imports/party-details/party-details.ts';
 import '../collections/methods.ts';
 import {ANGULAR2_GOOGLE_MAPS_PROVIDERS} from 'angular2-google-maps/core';
 import {LoginButtons} from 'angular2-meteor-accounts-ui';
+import {RouterLink} from 'angular2/router';
+import {DisplayName} from './imports/pipes/pipes.ts';
+import {InjectUser} from 'angular2-meteor-accounts-ui';
+import {Login} from './imports/auth/login.ts';
+import {Signup} from './imports/auth/signup.ts';
+import {Recover} from './imports/auth/recover.ts';
 
 @Component({
   selector: 'app',
   templateUrl: 'client/app.html',
-  directives: [ROUTER_DIRECTIVES, LoginButtons, MATERIAL_DIRECTIVES]
+  directives: [ROUTER_DIRECTIVES, LoginButtons, MATERIAL_DIRECTIVES, RouterLink],
+  pipes: [DisplayName]
 })
 @RouteConfig([
   { path: '/', as: 'PartiesList', component: PartiesList },
-  { path: '/party/:partyId', as: 'PartyDetails', component: PartyDetails }
+  { path: '/party/:partyId', as: 'PartyDetails', component: PartyDetails },
+  { path: '/login', as: 'Login', component: Login },
+  { path: '/signup', as: 'Signup', component: Signup },
+  { path: '/recover', as: 'Recover', component: Recover }
 ])
-class Socially {}
+@InjectUser()
+class Socially extends MeteorComponent {
+  user: Meteor.User;
+
+  constructor() {
+    super();
+  }
+}
 
 bootstrap(Socially, [MATERIAL_PROVIDERS, ROUTER_PROVIDERS, ANGULAR2_GOOGLE_MAPS_PROVIDERS, provide(APP_BASE_HREF, { useValue: '/' })]);
-- 
2.6.4


From fce70cb08b357c4308a16c290bc50ea23945d25d Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Sat, 6 Feb 2016 14:11:40 +0200
Subject: [PATCH 167/173] Step 18.16: Create the login component

---
 client/imports/auth/login.ts | 42 ++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 42 insertions(+)
 create mode 100644 client/imports/auth/login.ts

diff --git a/client/imports/auth/login.ts b/client/imports/auth/login.ts
new file mode 100644
index 0000000..f37bc30
--- /dev/null
+++ b/client/imports/auth/login.ts
@@ -0,0 +1,42 @@
+import {Component} from 'angular2/core';
+import {MeteorComponent} from 'angular2-meteor/meteor_component';
+import {Router} from 'angular2/router';
+import {FormBuilder, ControlGroup, Validators} from 'angular2/common';
+import {MATERIAL_DIRECTIVES} from 'ng2-material/all';
+import {RouterLink} from 'angular2/router';
+
+@Component({
+  selector: 'login',
+  directives: [MATERIAL_DIRECTIVES, RouterLink],
+  templateUrl: '/client/imports/auth/login.html'
+})
+export class Login extends MeteorComponent {
+  loginForm: ControlGroup;
+  error: string;
+
+  constructor(private router: Router) {
+    super();
+
+    let fb = new FormBuilder();
+
+    this.loginForm = fb.group({
+      email: ['', Validators.required],
+      password: ['', Validators.required]
+    });
+
+    this.error = '';
+  }
+
+  login(credentials) {
+    if (this.loginForm.valid) {
+      Meteor.loginWithPassword(credentials.email, credentials.password, (err) => {
+        if (err) {
+          this.error = err;
+        }
+        else {
+          this.router.navigate(['/PartiesList']);
+        }
+      });
+    }
+  }
+}
\ No newline at end of file
-- 
2.6.4


From deefdd3446494f3086facda3f51a1cf4d0c56da7 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Sat, 6 Feb 2016 14:11:48 +0200
Subject: [PATCH 168/173] Step 18.17: Create the login view

---
 client/imports/auth/login.html | 54 ++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 54 insertions(+)
 create mode 100644 client/imports/auth/login.html

diff --git a/client/imports/auth/login.html b/client/imports/auth/login.html
new file mode 100644
index 0000000..19fa9de
--- /dev/null
+++ b/client/imports/auth/login.html
@@ -0,0 +1,54 @@
+<md-content layout="row" layout-align="center start" layout-fill layout-margin>
+  <md-whiteframe layout="column" flex flex-md="50" flex-lg="50" flex-gt-lg="33" class="md-whiteframe-z2" layout-fill>
+    <md-toolbar class="md-primary md-tall" layout="column" layout-align="end" layout-fill>
+      <div layout="row" class="md-toolbar-tools md-toolbar-tools-bottom">
+        <h3 class="md-display-1"> Sign in </h3>
+      </div>
+    </md-toolbar>
+    <div layout="column" layout-fill layout-margin layout-padding>
+      <div layout="row" layout-fill layout-margin>
+        <p class="md-body-2"> Use existing account</p>
+      </div>
+      <div layout="row" layout-fill layout-margin layout-padding layout-wrap>
+        <button md-button class="md-raised">
+          <span> Google</span>
+        </button>
+        <button md-button class="md-raised">
+          <span>Facebook </span>
+        </button>
+        <button md-button class="md-raised">
+          <span>Twitter </span>
+        </button>
+      </div>
+      <md-divider class="inset"></md-divider>
+      <div layout="row" layout-fill layout-margin>
+        <p class="md-body-2"> Sign in with your email</p>
+      </div>
+
+      <form [ngFormModel]="loginForm" #f="ngForm" (submit)="login(f.value)" layout="column" layout-fill layout-padding layout-margin>
+        <md-input-container>
+          <label> Email </label>
+          <input md-input type="text" ngControl="email" aria-label="email" />
+        </md-input-container>
+        <md-input-container>
+          <label> Password </label>
+          <input md-input type="password" ngControl="password" aria-label="password" />
+        </md-input-container>
+        <div layout="row" layout-align="space-between center">
+          <button md-button [routerLink]="['/Recover']">Forgot password?</button>
+          <button md-button class="md-raised md-primary" type="submit" aria-label="login">Sign In
+          </button>
+        </div>
+      </form>
+      <div [hidden]="error == ''">
+        <md-toolbar class="md-warn" layout="row" layout-fill layout-padding layout-margin>
+          <p class="md-body-1">{{ error }}</p>
+        </md-toolbar>
+      </div>
+      <md-divider></md-divider>
+      <div layout="row" layout-align="center">
+        <button md-button [routerLink]="['/Signup']">Need an account?</button>
+      </div>
+    </div>
+  </md-whiteframe>
+</md-content>
\ No newline at end of file
-- 
2.6.4


From 6a5903c116dc412069a08f04ff178ad9cd2573cf Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Sat, 6 Feb 2016 14:12:04 +0200
Subject: [PATCH 169/173] Step 18.18: Create the signup component

---
 client/imports/auth/signup.ts | 42 ++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 42 insertions(+)
 create mode 100644 client/imports/auth/signup.ts

diff --git a/client/imports/auth/signup.ts b/client/imports/auth/signup.ts
new file mode 100644
index 0000000..f3483d5
--- /dev/null
+++ b/client/imports/auth/signup.ts
@@ -0,0 +1,42 @@
+import {Component} from 'angular2/core';
+import {MeteorComponent} from 'angular2-meteor/meteor_component';
+import {Router} from 'angular2/router';
+import {FormBuilder, ControlGroup, Validators} from 'angular2/common';
+import {MATERIAL_DIRECTIVES} from 'ng2-material/all';
+import {RouterLink} from 'angular2/router';
+
+@Component({
+  selector: 'signup',
+  directives: [MATERIAL_DIRECTIVES, RouterLink],
+  templateUrl: '/client/imports/auth/signup.html'
+})
+export class Signup extends MeteorComponent {
+  signupForm: ControlGroup;
+  error: string;
+
+  constructor(private router: Router) {
+    super();
+
+    let fb = new FormBuilder();
+
+    this.signupForm = fb.group({
+      email: ['', Validators.required],
+      password: ['', Validators.required]
+    });
+
+    this.error = '';
+  }
+
+  signup(credentials) {
+    if (this.signupForm.valid) {
+      Accounts.createUser({ email: credentials.email, password: credentials.password}, (err) => {
+        if (err) {
+          this.error = err;
+        }
+        else {
+          this.router.navigate(['/PartiesList']);
+        }
+      });
+    }
+  }
+}
\ No newline at end of file
-- 
2.6.4


From 27748957a88823c0db54b1d8f31fa7c563f63e32 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Sat, 6 Feb 2016 14:12:12 +0200
Subject: [PATCH 170/173] Step 18.19: Create the signup view

---
 client/imports/auth/signup.html | 50 +++++++++++++++++++++++++++++++++++++++++
 1 file changed, 50 insertions(+)
 create mode 100644 client/imports/auth/signup.html

diff --git a/client/imports/auth/signup.html b/client/imports/auth/signup.html
new file mode 100644
index 0000000..6222883
--- /dev/null
+++ b/client/imports/auth/signup.html
@@ -0,0 +1,50 @@
+<md-content layout="row" layout-align="center start" layout-fill layout-margin>
+  <md-whiteframe layout="column" flex flex-md="50" flex-lg="50" flex-gt-lg="33" class="md-whiteframe-z2" layout-fill>
+    <md-toolbar class="md-primary md-tall" layout="column" layout-align="end" layout-fill>
+      <div layout="row" class="md-toolbar-tools md-toolbar-tools-bottom">
+        <h3 class="md-display-1"> Sign up </h3>
+      </div>
+    </md-toolbar>
+    <div layout="column" layout-fill layout-margin layout-padding>
+      <form [ngFormModel]="signupForm" #f="ngForm" (submit)="signup(f.value)" layout="column" layout-fill layout-padding layout-margin>
+        <md-input-container>
+          <label> Email </label>
+          <input md-input type="text" ngControl="email" aria-label="email" />
+        </md-input-container>
+        <md-input-container>
+          <label> Password </label>
+          <input md-input type="password" ngControl="password" aria-label="password" />
+        </md-input-container>
+        <div layout="row" layout-align="space-between center">
+          <button md-button class="md-raised md-primary" type="submit" aria-label="login">Sign Up!
+          </button>
+        </div>
+      </form>
+      <md-divider></md-divider>
+      <div layout="row" layout-fill layout-margin>
+        <p class="md-body-2"> Want to use an existing account? </p>
+      </div>
+
+      <div layout="row" layout-fill layout-margin layout-padding layout-wrap>
+        <button md-button class="md-raised">
+          <span> Google</span>
+        </button>
+        <button md-button class="md-raised">
+          <span>Facebook </span>
+        </button>
+        <button md-button class="md-raised">
+          <span>Twitter </span>
+        </button>
+      </div>
+      <div [hidden]="error == ''">
+        <md-toolbar class="md-warn" layout="row" layout-fill layout-padding layout-margin>
+          <p class="md-body-1">{{ error }}</p>
+        </md-toolbar>
+      </div>
+      <md-divider></md-divider>
+      <div layout="row" layout-align="center">
+        <button md-button [routerLink]="['/Login']">Already a user?</button>
+      </div>
+    </div>
+  </md-whiteframe>
+</md-content>
\ No newline at end of file
-- 
2.6.4


From eb506bac81f4a7211fd9128e4aa940fc1029b411 Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Sat, 6 Feb 2016 14:15:27 +0200
Subject: [PATCH 171/173] Step 18.20: Create the recover component

---
 client/imports/auth/recover.ts | 41 +++++++++++++++++++++++++++++++++++++++++
 1 file changed, 41 insertions(+)
 create mode 100644 client/imports/auth/recover.ts

diff --git a/client/imports/auth/recover.ts b/client/imports/auth/recover.ts
new file mode 100644
index 0000000..55c48ce
--- /dev/null
+++ b/client/imports/auth/recover.ts
@@ -0,0 +1,41 @@
+import {Component} from 'angular2/core';
+import {MeteorComponent} from 'angular2-meteor/meteor_component';
+import {Router} from 'angular2/router';
+import {FormBuilder, ControlGroup, Validators} from 'angular2/common';
+import {MATERIAL_DIRECTIVES} from 'ng2-material/all';
+import {RouterLink} from 'angular2/router';
+
+@Component({
+  selector: 'recover',
+  directives: [MATERIAL_DIRECTIVES, RouterLink],
+  templateUrl: '/client/imports/auth/recover.html'
+})
+export class Recover extends MeteorComponent {
+  recoverForm: ControlGroup;
+  error: string;
+
+  constructor(private router: Router) {
+    super();
+
+    let fb = new FormBuilder();
+
+    this.recoverForm = fb.group({
+      email: ['', Validators.required]
+    });
+
+    this.error = '';
+  }
+
+  recover(credentials) {
+    if (this.recoverForm.valid) {
+      Accounts.forgotPassword({ email: credentials.email}, (err) => {
+        if (err) {
+          this.error = err;
+        }
+        else {
+          this.router.navigate(['/PartiesList']);
+        }
+      });
+    }
+  }
+}
\ No newline at end of file
-- 
2.6.4


From 69cce34fef0ccb52e2a1cc26cb740f906661115b Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Sat, 6 Feb 2016 14:15:37 +0200
Subject: [PATCH 172/173] Step 18.21: Create the recover view

---
 client/imports/auth/recover.html | 30 ++++++++++++++++++++++++++++++
 1 file changed, 30 insertions(+)
 create mode 100644 client/imports/auth/recover.html

diff --git a/client/imports/auth/recover.html b/client/imports/auth/recover.html
new file mode 100644
index 0000000..5f0c5cb
--- /dev/null
+++ b/client/imports/auth/recover.html
@@ -0,0 +1,30 @@
+<md-content layout="row" layout-align="center start" layout-fill layout-margin>
+  <md-whiteframe layout="column" flex flex-md="50" flex-lg="50" flex-gt-lg="33" class="md-whiteframe-z2" layout-fill>
+    <md-toolbar class="md-primary md-tall" layout="column" layout-align="end" layout-fill>
+      <div layout="row" class="md-toolbar-tools md-toolbar-tools-bottom">
+        <h3 class="md-display-1"> Recover Your Password</h3>
+      </div>
+    </md-toolbar>
+    <div layout="column" layout-fill layout-margin layout-padding>
+      <form [ngFormModel]="recoverForm" #f="ngForm" (submit)="recover(f.value)" layout="column" layout-fill layout-padding layout-margin>
+        <md-input-container>
+          <label> Email </label>
+          <input md-input type="text" ngControl="email" aria-label="email" />
+        </md-input-container>
+        <div layout="row" layout-align="space-between center">
+          <button md-button class="md-raised md-primary" type="submit" aria-label="login">Recover
+          </button>
+        </div>
+      </form>
+      <div [hidden]="error == ''">
+        <md-toolbar class="md-warn" layout="row" layout-fill layout-padding layout-margin>
+          <p class="md-body-1">{{ error }}</p>
+        </md-toolbar>
+      </div>
+      <md-divider></md-divider>
+      <div layout="row" layout-align="center">
+        <button md-button [routerLink]="['/Login']">Remember your password?</button>
+      </div>
+    </div>
+  </md-whiteframe>
+</md-content>
\ No newline at end of file
-- 
2.6.4


From f48426df50524740aa2154bfecbb0ff57f25218f Mon Sep 17 00:00:00 2001
From: Dotan Simha <dotansimha@gmail.com>
Date: Sat, 6 Feb 2016 14:16:57 +0200
Subject: [PATCH 173/173] Step 18.22: Add the logout method to the main
 component

---
 client/app.ts | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/client/app.ts b/client/app.ts
index a69d184..291d3f2 100644
--- a/client/app.ts
+++ b/client/app.ts
@@ -40,6 +40,12 @@ class Socially extends MeteorComponent {
   constructor() {
     super();
   }
+
+  logout() {
+    this.autorun(() => {
+      Meteor.logout();
+    });
+  }
 }
 
 bootstrap(Socially, [MATERIAL_PROVIDERS, ROUTER_PROVIDERS, ANGULAR2_GOOGLE_MAPS_PROVIDERS, provide(APP_BASE_HREF, { useValue: '/' })]);
-- 
2.6.4

